server {
    listen 80;
    server_name localhost;

    # Увеличиваем размер буфера для proxy
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Корневая директория для фронтенда
    root /usr/share/nginx/html;
    index index.html;

    # Обслуживаем фронтенд для всех маршрутов, кроме /api
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Обработка статических медиа-файлов
    location /static/media/ {
        # Проверяем, есть ли файл, иначе пытаемся найти в других местах
        try_files $uri $uri/ /assets/images/logo.png;
        expires max;
        add_header Cache-Control "public, max-age=31536000";
    }

    # Обработка favicon.ico
    location = /favicon.ico {
        try_files $uri /favicon.ico =404;
        expires max;
        log_not_found off;
    }

    # Проксируем запросы к API на бэкенд
    location /api/ {
        # Увеличиваем таймауты для медленных соединений
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
        
        # Точный прокси-пасс на бэкенд
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Отключаем буферизацию для потоковой передачи
        proxy_buffering off;
        
        # Логирование для отладки
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log debug;

        # Настройки CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Для OPTIONS запросов сразу возвращаем 200 OK
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Специальный обработчик для cities API endpoint (для решения проблемы 404)
    location = /api/cities/ {
        proxy_pass http://backend:8000/api/cities/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    }

    # Специальный обработчик для health API endpoint
    location = /api/health/ {
        proxy_pass http://backend:8000/api/health/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    }

    # Настройки для статических файлов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires max;
        log_not_found off;
    }
} 