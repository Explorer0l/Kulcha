{"version":3,"file":"static/js/554.3feb33e9.chunk.js","mappings":"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","sources":["components/Navigation.tsx","components/Header.tsx","pages/CheckoutPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Обновленная навигационная панель в стиле Apple/Nvidia\nconst NavContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  margin: var(--spacing-md) 0;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  overflow: hidden;\n  \n  @media (max-width: 767px) {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    border-radius: var(--border-radius-md) var(--border-radius-md) 0 0;\n    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.12);\n    margin: 0;\n  }\n`;\n\n// Улучшенная навигационная кнопка с визуальными эффектами\nconst NavButton = styled.button<{ active?: boolean }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: var(--spacing-md) var(--spacing-sm);\n  background: ${props => props.active ? 'linear-gradient(to bottom, rgba(var(--primary-color-rgb), 0.08), transparent)' : 'transparent'};\n  border: none;\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  font-size: 0.9rem;\n  position: relative;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  cursor: pointer;\n  font-weight: ${props => props.active ? '600' : '500'};\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: ${props => props.active ? '40%' : '0'};\n    height: 3px;\n    background-color: var(--primary-color);\n    border-radius: 3px 3px 0 0;\n    transition: width 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  &:hover:not(:disabled) {\n    color: var(--primary-color);\n    background-color: rgba(var(--primary-color-rgb), 0.05);\n    \n    &::after {\n      width: ${props => props.active ? '60%' : '30%'};\n    }\n    \n    svg {\n      transform: translateY(-2px);\n    }\n  }\n  \n  svg {\n    margin-bottom: var(--spacing-xs);\n    width: 20px;\n    height: 20px;\n    stroke-width: 2;\n    transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-sm) var(--spacing-xs);\n    font-size: 0.8rem;\n    \n    svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst Navigation: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { \n    selectedCity, \n    selectedRestaurant, \n    restaurants,\n    deliveryMethod,\n    setDeliveryMethod\n  } = useAppContext();\n  \n  const [activeTab, setActiveTab] = useState('home');\n  \n  // Определяем активную вкладку на основе текущего URL\n  useEffect(() => {\n    if (location.pathname.includes('city-selection')) {\n      setActiveTab('city');\n    } else if (location.pathname.includes('restaurant-selection')) {\n      setActiveTab('restaurant');\n    } else if (location.pathname === '/') {\n      setActiveTab('home');\n    }\n  }, [location.pathname]);\n  \n  // Получаем данные о выбранном ресторане\n  const selectedRestaurantData = selectedRestaurant !== null\n    ? restaurants.find(r => r.id === selectedRestaurant)\n    : null;\n  \n  return (\n    <NavContainer>\n      <NavButton \n        onClick={() => { navigate('/city-selection') }}\n        active={activeTab === 'city'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z\"></path>\n          <circle cx=\"12\" cy=\"9\" r=\"2.5\"></circle>\n        </svg>\n        {selectedCity ? selectedCity.name : 'Город'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => { selectedCity && navigate(selectedRestaurant ? '/home' : '/restaurant-selection') }}\n        disabled={!selectedCity}\n        active={activeTab === 'restaurant'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M17 11H3c-.6 0-1 .4-1 1v9c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9c0-.6-.4-1-1-1Z\"></path>\n          <path d=\"M14 11V6c0-2.8-2.2-5-5-5S4 3.2 4 6v5\"></path>\n          <path d=\"M21 11v9c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-9c0-.6.4-1 1-1h2c.6 0 1 .4 1 1Z\"></path>\n        </svg>\n        {selectedRestaurantData ? selectedRestaurantData.name : 'Ресторан'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('delivery')}\n        active={deliveryMethod === 'delivery'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n          <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n          <path d=\"M5 17H3v-6l2-2h8l3 3h1a2 2 0 0 1 2 2v3h-2\"></path>\n          <path d=\"M15 8h5l-1.5 5h-5\"></path>\n        </svg>\n        Доставка\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('pickup')}\n        active={deliveryMethod === 'pickup'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M4 10h12\"></path>\n          <path d=\"M4 14h9\"></path>\n          <path d=\"M4 18h6\"></path>\n          <path d=\"M18 15v6\"></path>\n          <path d=\"M15 18h6\"></path>\n          <path d=\"m14.5 7.5-8-4-2 3 8 4Z\"></path>\n        </svg>\n        Самовывоз\n      </NavButton>\n    </NavContainer>\n  );\n};\n\nexport default Navigation; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Современный контейнер шапки в стиле Apple/Nvidia\nconst HeaderContainer = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-md) 0;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      transparent,\n      var(--border-color),\n      transparent\n    );\n    opacity: 0.6;\n  }\n`;\n\n// Контейнер логотипа с анимацией\nconst LogoContainer = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n  \n  img {\n    height: 38px;\n    object-fit: contain;\n    \n    @media (max-width: 767px) {\n      height: 32px;\n    }\n  }\n`;\n\n// Анимированная кнопка профиля\nconst ProfileButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-color);\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom right, \n                 rgba(var(--primary-color-rgb), 0.1), \n                 rgba(var(--primary-color-rgb), 0));\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    z-index: -1;\n    border-radius: 50%;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    color: var(--primary-color);\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    svg {\n      stroke-width: 2.2;\n    }\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    transition: all 0.3s ease;\n  }\n`;\n\n// Компонент логотипа с изображением\nconst Logo = styled.img`\n  height: 38px;\n  object-fit: contain;\n  transition: filter 0.3s ease;\n  \n  @media (max-width: 767px) {\n    height: 32px;\n  }\n`;\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n  const { selectedCity, selectedRestaurant } = useAppContext();\n\n  return (\n    <HeaderContainer>\n      <LogoContainer onClick={() => navigate('/')}>\n        <Logo src=\"/assets/images/logo.png\" alt=\"Kulcha\" />\n      </LogoContainer>\n      \n      <ProfileButton onClick={() => navigate('/profile')}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n          <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n        </svg>\n      </ProfileButton>\n    </HeaderContainer>\n  );\n};\n\nexport default Header; ","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { \n  Container, \n  MainContent, \n  Heading, \n  Button,\n  FormGroup,\n  Input,\n  Label,\n  PageTransition\n} from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\n\n// Анимация пульсации для кнопки\nconst pulse = keyframes`\n  0% { box-shadow: 0 0 0 0 rgba(255, 159, 13, 0.3); }\n  70% { box-shadow: 0 0 0 10px rgba(255, 159, 13, 0); }\n  100% { box-shadow: 0 0 0 0 rgba(255, 159, 13, 0); }\n`;\n\n// Анимация вращения для спиннера\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst CheckoutContainer = styled(PageTransition)`\n  min-height: 70vh;\n`;\n\nconst CheckoutContent = styled.div`\n  margin-bottom: var(--spacing-xl);\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  \n  @media (max-width: 768px) {\n    max-width: 100%;\n  }\n`;\n\nconst CheckoutHeading = styled(Heading)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-lg);\n  font-size: 1.8rem;\n  font-weight: 700;\n  letter-spacing: -0.03em;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n    color: var(--primary-color);\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 1.6rem;\n  }\n`;\n\nconst FormContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-lg);\n  padding: var(--spacing-xl);\n  margin-bottom: var(--spacing-lg);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 14px 40px rgba(0, 0, 0, 0.12);\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 10px;\n    height: 100%;\n    background: linear-gradient(to bottom, var(--primary-color), var(--primary-light));\n    border-top-left-radius: var(--border-radius-lg);\n    border-bottom-left-radius: var(--border-radius-lg);\n  }\n  \n  @media (max-width: 768px) {\n    padding: var(--spacing-lg);\n  }\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.3rem;\n  margin: 0 0 var(--spacing-md) 0;\n  color: var(--text-color);\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n  letter-spacing: -0.02em;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n    color: var(--primary-color);\n  }\n`;\n\nconst RadioGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n  margin-bottom: var(--spacing-lg);\n`;\n\nconst RadioButton = styled.div`\n  display: flex;\n  align-items: center;\n  padding: var(--spacing-md);\n  background-color: var(--background-light);\n  border-radius: var(--border-radius-md);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: 2px solid transparent;\n  overflow: hidden;\n  position: relative;\n  \n  &:hover {\n    background-color: rgba(255, 255, 255, 0.08);\n    transform: translateY(-2px);\n  }\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n    background: linear-gradient(to bottom, var(--primary-color), var(--primary-light));\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n  \n  &.selected {\n    background-color: rgba(255, 159, 13, 0.1);\n    border: 2px solid var(--primary-color);\n    box-shadow: 0 5px 15px rgba(255, 159, 13, 0.15);\n    \n    &::before {\n      opacity: 1;\n    }\n  }\n  \n  input[type=\"radio\"] {\n    appearance: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    width: 18px;\n    height: 18px;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    border-radius: 50%;\n    margin-right: var(--spacing-md);\n    position: relative;\n    flex-shrink: 0;\n    transition: all 0.2s ease;\n    padding: 0;\n    background-color: transparent;\n    \n    &:checked {\n      border-color: var(--primary-color);\n      border-width: 2px;\n      \n      &::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%) scale(1);\n        width: 8px;\n        height: 8px;\n        background-color: var(--primary-color);\n        border-radius: 50%;\n        animation: radioCheck 0.2s ease-in-out;\n      }\n      \n      @keyframes radioCheck {\n        0% {\n          transform: translate(-50%, -50%) scale(0);\n          opacity: 0;\n        }\n        100% {\n          transform: translate(-50%, -50%) scale(1);\n          opacity: 1;\n        }\n      }\n    }\n    \n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 3px rgba(255, 159, 13, 0.25);\n    }\n  }\n  \n  label {\n    cursor: pointer;\n    width: 100%;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: 0;\n    padding: 0;\n    \n    span {\n      display: flex;\n      align-items: center;\n      \n      svg {\n        width: 16px;\n        height: 16px;\n        margin-right: var(--spacing-sm);\n        color: var(--primary-color);\n      }\n    }\n  }\n`;\n\nconst OrderSummary = styled.div`\n  background-color: var(--card-bg);\n  padding: var(--spacing-xl);\n  border-radius: var(--border-radius-lg);\n  margin-bottom: var(--spacing-lg);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);\n  position: relative;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 10px;\n    height: 100%;\n    background: linear-gradient(to bottom, var(--primary-color), var(--primary-light));\n    border-top-left-radius: var(--border-radius-lg);\n    border-bottom-left-radius: var(--border-radius-lg);\n  }\n  \n  @media (max-width: 768px) {\n    padding: var(--spacing-lg);\n  }\n`;\n\nconst SummaryRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-md);\n  \n  &:last-of-type {\n    margin-bottom: 0;\n    padding-top: var(--spacing-md);\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n`;\n\nconst SummaryLabel = styled.span`\n  font-size: 1rem;\n  color: var(--text-secondary);\n`;\n\nconst SummaryValue = styled.span`\n  font-weight: 600;\n  color: var(--text-color);\n`;\n\nconst TotalLabel = styled(SummaryLabel)`\n  font-size: 1.1rem;\n  color: var(--text-color);\n  font-weight: 500;\n`;\n\nconst TotalValue = styled(SummaryValue)`\n  font-size: 1.4rem;\n  color: var(--primary-color);\n  font-weight: 700;\n`;\n\nconst CartItems = styled.div`\n  margin-top: var(--spacing-md);\n  margin-bottom: var(--spacing-lg);\n`;\n\nconst CartItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: var(--spacing-md) 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  transition: transform 0.3s ease;\n  \n  &:hover {\n    transform: translateX(5px);\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst CartItemName = styled.span`\n  font-size: 1rem;\n  color: var(--text-color);\n  font-weight: 500;\n`;\n\nconst CartItemQuantity = styled.span`\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n  margin-left: var(--spacing-sm);\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 2px 8px;\n  border-radius: 12px;\n`;\n\nconst CartItemPrice = styled.span`\n  font-weight: 600;\n  color: var(--text-color);\n`;\n\nconst ConfirmButton = styled(Button)`\n  width: 100%;\n  padding: var(--spacing-md);\n  font-size: 1.1rem;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, var(--primary-color), var(--primary-light));\n  border-radius: var(--border-radius-md);\n  box-shadow: 0 8px 20px rgba(255, 159, 13, 0.3);\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  margin-top: var(--spacing-lg);\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 12px 28px rgba(255, 159, 13, 0.4);\n    background: linear-gradient(135deg, var(--primary-light), var(--primary-color));\n  }\n  \n  &:active {\n    transform: translateY(-1px);\n  }\n  \n  &:disabled {\n    background: #6c757d;\n    cursor: not-allowed;\n    transform: none;\n  }\n  \n  svg {\n    margin-right: var(--spacing-sm);\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: -50%;\n    left: -50%;\n    width: 200%;\n    height: 200%;\n    background: rgba(255, 255, 255, 0.1);\n    transform: rotate(45deg);\n    transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);\n    z-index: 1;\n    opacity: 0;\n  }\n  \n  &:hover::after {\n    opacity: 1;\n    transform: rotate(45deg) translate(10%, 10%);\n  }\n  \n  span {\n    position: relative;\n    z-index: 2;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst StyledInput = styled(Input)<{ error?: string }>`\n  width: 100%;\n  padding: var(--spacing-md);\n  background-color: var(--input-bg);\n  border: 2px solid ${props => props.error ? 'var(--error-color)' : 'rgba(255, 255, 255, 0.1)'};\n  border-radius: var(--border-radius-md);\n  color: var(--text-color);\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(255, 159, 13, 0.2);\n  }\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.4);\n  }\n`;\n\nconst StyledLabel = styled(Label)`\n  font-weight: 500;\n  margin-bottom: var(--spacing-xs);\n  display: flex;\n  align-items: center;\n  \n  svg {\n    margin-right: var(--spacing-xs);\n    color: var(--primary-color);\n  }\n`;\n\nconst ErrorText = styled.span`\n  color: var(--error-color);\n  font-size: 0.85rem;\n  margin-top: var(--spacing-xs);\n  display: flex;\n  align-items: center;\n  \n  svg {\n    margin-right: 4px;\n    flex-shrink: 0;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 2px;\n  margin-bottom: var(--spacing-lg);\n  position: relative;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 75%; /* Третий шаг из четырех */\n    background: linear-gradient(to right, var(--primary-color), var(--primary-light));\n    border-radius: 2px;\n  }\n`;\n\nconst CheckoutSteps = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: var(--spacing-md);\n  \n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst CheckoutStep = styled.div<{ $active?: boolean, $completed?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  \n  .step-number {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: ${props => props.$completed ? 'var(--primary-color)' : props.$active ? 'rgba(255, 159, 13, 0.2)' : 'rgba(255, 255, 255, 0.1)'};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 8px;\n    color: ${props => props.$completed || props.$active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n    font-weight: 600;\n    transition: all 0.3s ease;\n    \n    svg {\n      width: 16px;\n      height: 16px;\n    }\n  }\n  \n  .step-label {\n    font-size: 0.8rem;\n    color: ${props => props.$active ? 'var(--text-color)' : 'var(--text-secondary)'};\n    font-weight: ${props => props.$active ? '600' : '400'};\n  }\n`;\n\nconst PulsingButton = styled(ConfirmButton)`\n  animation: ${pulse} 2s infinite;\n`;\n\n// Локально определим компонент Spinner, чтобы не зависеть от экспорта из Components.tsx\nconst Spinner = styled.div`\n  border: 4px solid rgba(var(--primary-color-rgb), 0.15);\n  border-radius: 50%;\n  border-top: 4px solid var(--primary-color);\n  width: 36px;\n  height: 36px;\n  animation: ${spin} 1s cubic-bezier(0.16, 1, 0.3, 1) infinite;\n`;\n\nconst ButtonSpinner = styled(Spinner)`\n  width: 20px;\n  height: 20px;\n  border-width: 2px;\n  margin-right: var(--spacing-sm);\n`;\n\nconst CheckoutPage: React.FC = () => {\n  const { cart, placeOrder, deliveryMethod, setDeliveryMethod, userAddress, updateUserAddress, resetUserAddressForm } = useAppContext();\n  const navigate = useNavigate();\n  const { showBackButton, hideBackButton, setBackButtonCallback } = useTelegram();\n  \n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    city: '',\n  });\n  \n  const [formErrors, setFormErrors] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    city: '',\n  });\n  \n  const [formSessionId, setFormSessionId] = useState<string>('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  useEffect(() => {\n    showBackButton();\n    \n    setBackButtonCallback(() => {\n      navigate('/cart');\n    });\n\n    return () => {\n      hideBackButton();\n    };\n  }, [hideBackButton, navigate, setBackButtonCallback, showBackButton]);\n  \n  // Инициализируем сессию заказа\n  useEffect(() => {\n    // Проверяем существующую сессию заказа\n    const storedSession = localStorage.getItem('orderFormSession');\n    let sessionId = '';\n    \n    if (storedSession) {\n      try {\n        const sessionData = JSON.parse(storedSession);\n        sessionId = sessionData.timestamp || '';\n      } catch (e) {\n        console.error('Error parsing order form session:', e);\n      }\n    }\n    \n    // Если сессии нет, создаем новую\n    if (!sessionId) {\n      sessionId = new Date().toISOString();\n      localStorage.setItem('orderFormSession', JSON.stringify({ timestamp: sessionId }));\n    }\n    \n    setFormSessionId(sessionId);\n    console.log('Order form session initialized:', sessionId);\n  }, []);\n  \n  useEffect(() => {\n    // Загрузить данные адреса пользователя, если они есть, только при изменении сессии\n    if (userAddress && formSessionId) {\n      setFormData({\n        name: userAddress.name || '',\n        phone: userAddress.phone || '',\n        address: userAddress.address || '',\n        city: typeof userAddress.city === 'object' && userAddress.city !== null \n          ? userAddress.city.name || '' \n          : String(userAddress.city || ''),\n      });\n      console.log('Loaded user address for form session:', formSessionId);\n    }\n  }, [userAddress, formSessionId]);\n  \n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  \n  const deliveryFee = deliveryMethod === 'delivery' ? 150 : 0;\n  const subtotal = calculateSubtotal();\n  const total = subtotal + deliveryFee;\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    \n    // Обновляем адрес пользователя при изменении формы\n    updateUserAddress({\n      ...userAddress || { name: '', phone: '', address: '', city: '' },\n      [name]: value\n    });\n    \n    // Очистить ошибку при вводе\n    setFormErrors({\n      ...formErrors,\n      [name]: '',\n    });\n  };\n  \n  const handleDeliveryMethodChange = (method: 'delivery' | 'pickup') => {\n    setDeliveryMethod(method);\n  };\n  \n  const validateForm = () => {\n    const errors = {\n      name: '',\n      phone: '',\n      address: '',\n      city: '',\n    };\n    \n    let isValid = true;\n    \n    if (!formData.name.trim()) {\n      errors.name = 'Введите имя';\n      isValid = false;\n    }\n    \n    if (!formData.phone.trim()) {\n      errors.phone = 'Введите номер телефона';\n      isValid = false;\n    } else {\n      // Очищаем номер от всех символов, кроме цифр и +\n      const cleanedPhone = formData.phone.replace(/[^0-9+]/g, '');\n      \n      // Проверяем, содержит ли номер только цифры и, возможно, + в начале\n      if (!/^[+]?\\d+$/.test(cleanedPhone)) {\n        errors.phone = 'Номер должен содержать только цифры';\n        isValid = false;\n      }\n      // Валидация международных форматов\n      // Номер должен начинаться с + и иметь от 11 до 15 символов\n      // или начинаться без + и иметь от 10 до 14 символов\n      else if ((cleanedPhone.startsWith('+') && (cleanedPhone.length < 11 || cleanedPhone.length > 15)) || \n              (!cleanedPhone.startsWith('+') && (cleanedPhone.length < 10 || cleanedPhone.length > 14))) {\n        errors.phone = 'Некорректная длина номера';\n        isValid = false;\n      }\n    }\n    \n    if (deliveryMethod === 'delivery') {\n      if (!formData.address.trim()) {\n        errors.address = 'Введите адрес доставки';\n        isValid = false;\n      }\n      \n      if (!formData.city.trim()) {\n        errors.city = 'Введите город';\n        isValid = false;\n      }\n    }\n    \n    setFormErrors(errors);\n    return isValid;\n  };\n  \n  const handleSubmit = async () => {\n    if (validateForm()) {\n      try {\n        setIsSubmitting(true);\n        \n        // Сохранить адрес пользователя\n        updateUserAddress({\n          name: formData.name,\n          phone: formData.phone,\n          address: formData.address,\n          city: formData.city,\n        });\n        \n        // Разместить заказ и дождаться завершения\n        const orderResult = await placeOrder();\n        \n        if (orderResult) {\n          // Создаем новую сессию для следующего заказа\n          resetUserAddressForm();\n          \n          // Перейти на страницу подтверждения заказа\n          navigate('/order-success');\n        } else {\n          // Обработка ошибки заказа\n          alert('Произошла ошибка при оформлении заказа. Пожалуйста, попробуйте снова.');\n        }\n      } catch (error) {\n        console.error(\"Error placing order:\", error);\n        alert('Произошла ошибка при оформлении заказа. Пожалуйста, попробуйте снова.');\n      } finally {\n        setIsSubmitting(false);\n      }\n    }\n  };\n\n  return (\n    <CheckoutContainer>\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          <CheckoutContent>\n            <CheckoutHeading>\n              <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M10 21H4a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8\"></path>\n                  <path d=\"M7 7h10\"></path>\n                  <path d=\"M7 11h5\"></path>\n                  <path d=\"M19 15v6\"></path>\n                  <path d=\"M16 18h6\"></path>\n                </svg>\n                Оформление заказа\n              </div>\n            </CheckoutHeading>\n            \n            <CheckoutSteps>\n              <CheckoutStep $completed={true}>\n                <div className=\"step-number\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <polyline points=\"20 6 9 17 4 12\"></polyline>\n                  </svg>\n                </div>\n                <div className=\"step-label\">Корзина</div>\n              </CheckoutStep>\n              <CheckoutStep $active={true}>\n                <div className=\"step-number\">2</div>\n                <div className=\"step-label\">Оформление</div>\n              </CheckoutStep>\n              <CheckoutStep>\n                <div className=\"step-number\">3</div>\n                <div className=\"step-label\">Оплата</div>\n              </CheckoutStep>\n              <CheckoutStep>\n                <div className=\"step-number\">4</div>\n                <div className=\"step-label\">Готово</div>\n              </CheckoutStep>\n            </CheckoutSteps>\n            \n            <ProgressBar />\n            \n            <FormContainer>\n              <SectionTitle>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                  <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                </svg>\n                Контактная информация\n              </SectionTitle>\n              \n              <FormGroup>\n                <StyledLabel htmlFor=\"name\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                  </svg>\n                  Имя\n                </StyledLabel>\n                <StyledInput\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"Иван Иванов\"\n                  error={formErrors.name}\n                />\n                {formErrors.name && (\n                  <ErrorText>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                      <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                      <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n                    </svg>\n                    {formErrors.name}\n                  </ErrorText>\n                )}\n              </FormGroup>\n              \n              <FormGroup>\n                <StyledLabel htmlFor=\"phone\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>\n                  </svg>\n                  Телефон\n                </StyledLabel>\n                <StyledInput\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleInputChange}\n                  placeholder=\"+7 (XXX) XXX-XX-XX\"\n                  error={formErrors.phone}\n                />\n                {!formErrors.phone && (\n                  <small style={{ color: 'var(--text-secondary)', fontSize: '0.85rem', marginTop: '4px' }}>\n                    Пример: +7 (999) 123-45-67\n                  </small>\n                )}\n                {formErrors.phone && (\n                  <ErrorText>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                      <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                      <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n                    </svg>\n                    {formErrors.phone}\n                  </ErrorText>\n                )}\n              </FormGroup>\n            </FormContainer>\n            \n            <FormContainer>\n              <SectionTitle>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <rect x=\"2\" y=\"7\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\n                  <path d=\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path>\n                </svg>\n                Способ получения\n              </SectionTitle>\n              \n              <RadioGroup>\n                <RadioButton className={deliveryMethod === 'delivery' ? 'selected' : ''} onClick={() => handleDeliveryMethodChange('delivery')}>\n                  <input \n                    type=\"radio\" \n                    id=\"delivery\" \n                    name=\"deliveryMethod\" \n                    checked={deliveryMethod === 'delivery'} \n                    onChange={() => handleDeliveryMethodChange('delivery')} \n                  />\n                  <label htmlFor=\"delivery\">\n                    <span>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M5 18h14M5 14h14M5 6h14M5 10h14\"></path>\n                        <rect x=\"3\" y=\"2\" width=\"18\" height=\"20\" rx=\"2\"></rect>\n                      </svg>\n                      <div>\n                        <div>Доставка курьером</div>\n                        <div style={{ fontSize: '0.8rem', color: 'var(--text-secondary)', marginTop: '4px' }}>Доставим в течение 40-60 минут</div>\n                      </div>\n                    </span>\n                    <span style={{ fontWeight: 'bold', color: 'var(--primary-color)' }}>+₽150</span>\n                  </label>\n                </RadioButton>\n                \n                <RadioButton className={deliveryMethod === 'pickup' ? 'selected' : ''} onClick={() => handleDeliveryMethodChange('pickup')}>\n                  <input \n                    type=\"radio\" \n                    id=\"pickup\" \n                    name=\"deliveryMethod\" \n                    checked={deliveryMethod === 'pickup'} \n                    onChange={() => handleDeliveryMethodChange('pickup')} \n                  />\n                  <label htmlFor=\"pickup\">\n                    <span>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\"></path>\n                        <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                      </svg>\n                      <div>\n                        <div>Самовывоз</div>\n                        <div style={{ fontSize: '0.8rem', color: 'var(--text-secondary)', marginTop: '4px' }}>Заберите заказ из ресторана</div>\n                      </div>\n                    </span>\n                    <span style={{ fontWeight: 'bold', color: 'var(--success-color)' }}>Бесплатно</span>\n                  </label>\n                </RadioButton>\n              </RadioGroup>\n              \n              {deliveryMethod === 'delivery' && (\n                <>\n                  <FormGroup>\n                    <StyledLabel htmlFor=\"city\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                        <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                      </svg>\n                      Город\n                    </StyledLabel>\n                    <StyledInput\n                      type=\"text\"\n                      id=\"city\"\n                      name=\"city\"\n                      value={formData.city}\n                      onChange={handleInputChange}\n                      placeholder=\"Москва\"\n                      error={formErrors.city}\n                    />\n                    {formErrors.city && (\n                      <ErrorText>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                          <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n                        </svg>\n                        {formErrors.city}\n                      </ErrorText>\n                    )}\n                  </FormGroup>\n                  \n                  <FormGroup>\n                    <StyledLabel htmlFor=\"address\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\"></path>\n                        <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                      </svg>\n                      Адрес доставки\n                    </StyledLabel>\n                    <StyledInput\n                      type=\"text\"\n                      id=\"address\"\n                      name=\"address\"\n                      value={formData.address}\n                      onChange={handleInputChange}\n                      placeholder=\"ул. Пушкина, д. 10, кв. 5\"\n                      error={formErrors.address}\n                    />\n                    {formErrors.address && (\n                      <ErrorText>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                          <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n                        </svg>\n                        {formErrors.address}\n                      </ErrorText>\n                    )}\n                  </FormGroup>\n                </>\n              )}\n            </FormContainer>\n            \n            <OrderSummary>\n              <SectionTitle>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path>\n                  <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n                  <path d=\"M16 10a4 4 0 0 1-8 0\"></path>\n                </svg>\n                Ваш заказ\n              </SectionTitle>\n              \n              <CartItems>\n                {cart.map(item => (\n                  <CartItem key={item.id}>\n                    <div>\n                      <CartItemName>{item.name}</CartItemName>\n                      <CartItemQuantity>×{item.quantity}</CartItemQuantity>\n                    </div>\n                    <CartItemPrice>₽{item.price * item.quantity}</CartItemPrice>\n                  </CartItem>\n                ))}\n              </CartItems>\n              \n              <SummaryRow>\n                <SummaryLabel>Подытог</SummaryLabel>\n                <SummaryValue>₽{subtotal}</SummaryValue>\n              </SummaryRow>\n              \n              <SummaryRow>\n                <SummaryLabel>Доставка</SummaryLabel>\n                <SummaryValue>{deliveryFee > 0 ? `₽${deliveryFee}` : 'Бесплатно'}</SummaryValue>\n              </SummaryRow>\n              \n              <SummaryRow>\n                <TotalLabel>Итого к оплате</TotalLabel>\n                <TotalValue>₽{total}</TotalValue>\n              </SummaryRow>\n              \n              <PulsingButton onClick={handleSubmit} disabled={isSubmitting}>\n                {isSubmitting ? (\n                  <span>\n                    <ButtonSpinner />\n                    Оформление...\n                  </span>\n                ) : (\n                  <span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M9 12l2 2 4-4\"></path>\n                      <path d=\"M12 3c4.97 0 9 4.03 9 9s-4.03 9-9 9-9-4.03-9-9 4.03-9 9-9\"></path>\n                    </svg>\n                    Подтвердить заказ\n                  </span>\n                )}\n              </PulsingButton>\n            </OrderSummary>\n          </CheckoutContent>\n        </MainContent>\n      </Container>\n    </CheckoutContainer>\n  );\n};\n\nexport default CheckoutPage; "],"names":["NavContainer","styled","nav","NavButton","button","props","active","Navigation","navigate","useNavigate","location","useLocation","selectedCity","selectedRestaurant","restaurants","deliveryMethod","setDeliveryMethod","useAppContext","activeTab","setActiveTab","useState","useEffect","pathname","includes","selectedRestaurantData","find","r","id","_jsxs","children","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_jsx","d","cx","cy","name","disabled","HeaderContainer","header","LogoContainer","div","ProfileButton","Logo","img","Header","src","alt","pulse","keyframes","spin","CheckoutContainer","PageTransition","CheckoutContent","CheckoutHeading","Heading","FormContainer","SectionTitle","h3","RadioGroup","RadioButton","OrderSummary","SummaryRow","SummaryLabel","span","SummaryValue","TotalLabel","TotalValue","CartItems","CartItem","CartItemName","CartItemQuantity","CartItemPrice","ConfirmButton","Button","StyledInput","Input","error","StyledLabel","Label","ErrorText","ProgressBar","CheckoutSteps","CheckoutStep","$completed","$active","PulsingButton","Spinner","ButtonSpinner","CheckoutPage","cart","placeOrder","userAddress","updateUserAddress","resetUserAddressForm","showBackButton","hideBackButton","setBackButtonCallback","useTelegram","formData","setFormData","phone","address","city","formErrors","setFormErrors","formSessionId","setFormSessionId","isSubmitting","setIsSubmitting","storedSession","localStorage","getItem","sessionId","JSON","parse","timestamp","e","console","Date","toISOString","setItem","stringify","log","String","deliveryFee","subtotal","reduce","total","item","price","quantity","handleInputChange","value","target","handleDeliveryMethodChange","method","Container","MainContent","className","points","FormGroup","htmlFor","type","onChange","placeholder","x1","y1","x2","y2","style","color","fontSize","marginTop","x","y","rx","ry","checked","fontWeight","_Fragment","map","async","validateForm","errors","isValid","trim","cleanedPhone","replace","test","startsWith","length","alert"],"sourceRoot":""}