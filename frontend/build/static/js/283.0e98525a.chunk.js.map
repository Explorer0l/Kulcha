{"version":3,"file":"static/js/283.0e98525a.chunk.js","mappings":"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","sources":["pages/AdminMenuManagementPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { PageTransition } from '../styles/Components';\nimport { \n  getRestaurantMenu, \n  updateMenuItem, \n  createMenuItem, \n  deleteMenuItem,\n  MenuItem,\n  getRestaurantData\n} from '../data/adminDatabase';\n\nconst Container = styled(PageTransition)`\n  min-height: 100vh;\n  background-color: var(--background-color);\n`;\n\nconst DashboardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-lg);\n  background-color: var(--card-bg);\n  border-bottom: 1px solid var(--border-color);\n`;\n\nconst Title = styled.h1`\n  color: var(--text-color);\n  margin: 0;\n  font-size: 1.5rem;\n`;\n\nconst BackButton = styled.button`\n  padding: var(--spacing-sm) var(--spacing-md);\n  border: none;\n  border-radius: var(--border-radius-md);\n  background-color: var(--primary-color);\n  color: white;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    background-color: var(--primary-dark);\n  }\n`;\n\nconst MainContent = styled.div`\n  padding: var(--spacing-lg);\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst SectionTitle = styled.h2`\n  color: var(--text-color);\n  margin: var(--spacing-xl) 0 var(--spacing-md) 0;\n  font-size: 1.3rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst AddButton = styled.button`\n  padding: var(--spacing-sm) var(--spacing-md);\n  border: none;\n  border-radius: var(--border-radius-md);\n  background-color: var(--success-color);\n  color: white;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  &:hover {\n    background-color: var(--success-dark);\n  }\n`;\n\nconst MenuTable = styled.div`\n  width: 100%;\n  border-radius: var(--border-radius-md);\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  margin-top: var(--spacing-md);\n`;\n\nconst TableHead = styled.div`\n  display: grid;\n  grid-template-columns: 0.6fr 1.5fr 2fr 0.8fr 0.6fr 0.8fr;\n  background-color: var(--card-bg);\n  padding: var(--spacing-md);\n  font-weight: 600;\n  border-bottom: 1px solid var(--border-color);\n  color: var(--text-color);\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 0.6fr 1.5fr 0.8fr 0.6fr 0.6fr;\n  }\n`;\n\nconst TableRow = styled.div`\n  display: grid;\n  grid-template-columns: 0.6fr 1.5fr 2fr 0.8fr 0.6fr 0.8fr;\n  padding: var(--spacing-md);\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--card-bg);\n  transition: background-color 0.2s;\n  align-items: center;\n\n  &:hover {\n    background-color: var(--card-hover);\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 0.6fr 1.5fr 0.8fr 0.6fr 0.6fr;\n  }\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StatusBadge = styled.span<{ available: boolean }>`\n  padding: var(--spacing-xs) var(--spacing-sm);\n  border-radius: var(--border-radius-sm);\n  font-size: 0.8rem;\n  background-color: ${(props) => (props.available ? 'var(--success-bg)' : 'var(--error-bg)')};\n  color: ${(props) => (props.available ? 'var(--success-color)' : 'var(--error-color)')};\n`;\n\nconst ActionButton = styled.button<{ variant: 'edit' | 'delete' }>`\n  padding: 6px;\n  border: none;\n  border-radius: var(--border-radius-sm);\n  background-color: ${(props) => \n    props.variant === 'edit' ? 'var(--primary-bg)' : 'var(--error-bg)'};\n  color: ${(props) => \n    props.variant === 'edit' ? 'var(--primary-color)' : 'var(--error-color)'};\n  cursor: pointer;\n  margin-right: 5px;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${(props) => \n      props.variant === 'edit' ? 'var(--primary-light-bg)' : 'var(--error-light-bg)'};\n  }\n`;\n\n// Модальное окно для редактирования/создания пункта меню\nconst Modal = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: ${(props) => (props.isOpen ? 'flex' : 'none')};\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background-color: var(--card-bg);\n  padding: var(--spacing-lg);\n  border-radius: var(--border-radius-md);\n  width: 100%;\n  max-width: 500px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n`;\n\nconst ModalTitle = styled.h2`\n  color: var(--text-color);\n  margin-top: 0;\n  margin-bottom: var(--spacing-lg);\n  font-size: 1.3rem;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: var(--spacing-md);\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: var(--spacing-xs);\n  color: var(--text-color);\n  font-size: 0.9rem;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border-radius: var(--border-radius-sm);\n  border: 1px solid var(--border-color);\n  background-color: var(--input-bg);\n  color: var(--text-color);\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(255, 159, 13, 0.2);\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border-radius: var(--border-radius-sm);\n  border: 1px solid var(--border-color);\n  background-color: var(--input-bg);\n  color: var(--text-color);\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(255, 159, 13, 0.2);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border-radius: var(--border-radius-sm);\n  border: 1px solid var(--border-color);\n  background-color: var(--input-bg);\n  color: var(--text-color);\n  font-size: 1rem;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(255, 159, 13, 0.2);\n  }\n`;\n\nconst Checkbox = styled.div`\n  display: flex;\n  align-items: center;\n  \n  input {\n    margin-right: var(--spacing-sm);\n  }\n  \n  label {\n    margin-bottom: 0;\n  }\n`;\n\nconst ModalActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--spacing-md);\n  margin-top: var(--spacing-lg);\n`;\n\nconst Button = styled.button<{ variant: 'primary' | 'cancel' | 'danger' }>`\n  padding: var(--spacing-sm) var(--spacing-md);\n  border: none;\n  border-radius: var(--border-radius-md);\n  background-color: ${(props) => {\n    switch (props.variant) {\n      case 'primary':\n        return 'var(--primary-color)';\n      case 'danger':\n        return 'var(--error-color)';\n      case 'cancel':\n      default:\n        return 'var(--card-hover)';\n    }\n  }};\n  color: ${(props) => (props.variant === 'cancel' ? 'var(--text-color)' : 'white')};\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${(props) => {\n      switch (props.variant) {\n        case 'primary':\n          return 'var(--primary-dark)';\n        case 'danger':\n          return 'var(--error-dark)';\n        case 'cancel':\n        default:\n          return 'var(--border-color)';\n      }\n    }};\n  }\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  padding: var(--spacing-xl);\n  color: var(--text-muted);\n`;\n\n// Форма пункта меню для редактирования/создания\ntype MenuItemForm = {\n  name: string;\n  description: string;\n  price: string; // используем строку для ввода чисел\n  image: string;\n  category: string; // Изменено с конкретного типа на string для большей гибкости\n  available: boolean;\n};\n\nconst AdminMenuManagementPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [restaurantName, setRestaurantName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalMode, setModalMode] = useState<'create' | 'edit'>('create');\n  const [editItemId, setEditItemId] = useState<number | null>(null);\n  const [restaurantId, setRestaurantId] = useState<number>(0);\n  \n  // Состояние формы\n  const [formData, setFormData] = useState<MenuItemForm>({\n    name: '',\n    description: '',\n    price: '',\n    image: '',\n    category: 'main',\n    available: true\n  });\n  \n  // Состояние удаления\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [deleteItemId, setDeleteItemId] = useState<number | null>(null);\n\n  useEffect(() => {\n    // Проверка аутентификации\n    const auth = localStorage.getItem('isAuthenticated');\n    const role = localStorage.getItem('userRole');\n    const currentUserStr = localStorage.getItem('currentUser');\n    \n    if (auth !== 'true' || role !== 'admin') {\n      navigate('/admin/login');\n      return;\n    }\n\n    const loadData = async () => {\n      if (currentUserStr) {\n        const currentUser = JSON.parse(currentUserStr);\n        \n        try {\n          // Загрузка меню ресторана\n          const menu = await getRestaurantMenu(currentUser.restaurantId);\n          setMenuItems(menu);\n          setRestaurantId(currentUser.restaurantId);\n          \n          // Получаем имя ресторана\n          const restaurant = await getRestaurantData(currentUser.restaurantId);\n          if (restaurant) {\n            setRestaurantName(restaurant.name);\n          }\n          \n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Ошибка загрузки данных:', error);\n        }\n      } else {\n        navigate('/admin/login');\n      }\n      \n      setLoading(false);\n    };\n\n    loadData();\n  }, [navigate]);\n\n  const handleCreateItem = () => {\n    setModalMode('create');\n    setFormData({\n      name: '',\n      description: '',\n      price: '',\n      image: '',\n      category: 'main',\n      available: true\n    });\n    setModalOpen(true);\n  };\n\n  const handleEditItem = (item: MenuItem) => {\n    setEditItemId(item.id);\n    setModalMode('edit');\n    setFormData({\n      name: item.name,\n      description: item.description,\n      price: item.price.toString(),\n      image: item.imageUrl || '', // Изменено с image на imageUrl\n      category: item.category || 'main',\n      available: item.available || true\n    });\n    setModalOpen(true);\n  };\n\n  const handleDeleteItem = (itemId: number) => {\n    setDeleteItemId(itemId);\n    setDeleteModalOpen(true);\n  };\n\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    \n    if (type === 'checkbox') {\n      const checked = (e.target as HTMLInputElement).checked;\n      setFormData(prev => ({ ...prev, [name]: checked }));\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    setFormData(prev => ({ ...prev, [name]: checked }));\n  };\n\n  const validateForm = (): boolean => {\n    if (!formData.name.trim()) return false;\n    if (!formData.description.trim()) return false;\n    \n    const price = Number(formData.price);\n    if (isNaN(price) || price <= 0) return false;\n    \n    if (!formData.category) return false;\n    \n    return true;\n  };\n\n  const handleSaveItem = async () => {\n    if (!validateForm()) {\n      alert('Пожалуйста, заполните все поля корректно');\n      return;\n    }\n    \n    if (modalMode === 'create') {\n      // Создаем новый пункт меню\n      const menuItemData: MenuItem = {\n        id: Date.now(), // Генерируем временный ID\n        name: formData.name,\n        description: formData.description,\n        price: parseFloat(formData.price),\n        imageUrl: formData.image, // Используем imageUrl вместо image\n        category: formData.category,\n        available: formData.available,\n        restaurantId: restaurantId\n      };\n      \n      try {\n        const newItem = await createMenuItem(menuItemData);\n        if (newItem) {\n          setMenuItems(prev => [...prev, newItem]);\n        } else {\n          throw new Error('Failed to create menu item');\n        }\n      } catch (error) {\n        console.error('Ошибка при создании элемента меню:', error);\n        alert('Не удалось создать элемент меню');\n      }\n    } else if (modalMode === 'edit' && editItemId !== null) {\n      // Обновляем существующий пункт меню\n      const menuItemData: MenuItem = {\n        id: editItemId,\n        name: formData.name,\n        description: formData.description,\n        price: parseFloat(formData.price),\n        imageUrl: formData.image, // Используем imageUrl вместо image\n        category: formData.category,\n        available: formData.available,\n        restaurantId: restaurantId\n      };\n      \n      try {\n        const updatedItem = await updateMenuItem(menuItemData);\n        setMenuItems(prev => \n          prev.map(item => item.id === editItemId ? (updatedItem || item) : item)\n        );\n      } catch (error) {\n        console.error('Ошибка при обновлении элемента меню:', error);\n        alert('Не удалось обновить элемент меню');\n      }\n    }\n    \n    setModalOpen(false);\n    setFormData({\n      name: '',\n      description: '',\n      price: '',\n      image: '',\n      category: 'main',\n      available: true\n    });\n    setEditItemId(null);\n  };\n\n  const confirmDeleteItem = async () => {\n    if (deleteItemId) {\n      try {\n        await deleteMenuItem(deleteItemId);\n        setMenuItems(prev => prev.filter(item => item.id !== deleteItemId));\n      } catch (error) {\n        console.error('Ошибка при удалении элемента меню:', error);\n        alert('Не удалось удалить элемент меню');\n      }\n      setDeleteModalOpen(false);\n      setDeleteItemId(null);\n    }\n  };\n\n  const handleToggleAvailability = async (item: MenuItem) => {\n    // Создаем новый объект с обновленным available\n    const updatedItem: MenuItem = {\n      ...item,\n      available: !item.available\n    };\n    \n    try {\n      const updated = await updateMenuItem(updatedItem);\n      setMenuItems(prev => \n        prev.map(menuItem => menuItem.id === item.id ? (updated || menuItem) : menuItem)\n      );\n    } catch (error) {\n      console.error('Ошибка при обновлении доступности:', error);\n    }\n  };\n\n  const getCategoryName = (category: string): string => {\n    switch(category) {\n      case 'main': return 'Основное блюдо';\n      case 'appetizers': return 'Закуска';\n      case 'desserts': return 'Десерт';\n      case 'drinks': return 'Напиток';\n      default: return category;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'center', \n          alignItems: 'center', \n          height: '100vh',\n          color: 'var(--text-color)'\n        }}>\n          Загрузка...\n        </div>\n      </Container>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <DashboardHeader>\n        <Title>Управление меню</Title>\n        <BackButton onClick={() => navigate('/admin/dashboard')}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <path d=\"M15 18l-6-6 6-6\" />\n          </svg>\n          Назад\n        </BackButton>\n      </DashboardHeader>\n      \n      <MainContent>\n        <SectionTitle>\n          {restaurantName ? `Меню ресторана \"${restaurantName}\"` : 'Меню ресторана'}\n          <AddButton onClick={handleCreateItem}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n            </svg>\n            Добавить блюдо\n          </AddButton>\n        </SectionTitle>\n        \n        {menuItems.length > 0 ? (\n          <MenuTable>\n            <TableHead>\n              <TableCell>ID</TableCell>\n              <TableCell>Название</TableCell>\n              <TableCell>Описание</TableCell>\n              <TableCell>Цена</TableCell>\n              <TableCell>Статус</TableCell>\n              <TableCell>Действия</TableCell>\n            </TableHead>\n            {menuItems.map((item) => (\n              <TableRow key={item.id}>\n                <TableCell>#{item.id}</TableCell>\n                <TableCell>{item.name}</TableCell>\n                <TableCell style={{ fontSize: '0.9rem' }}>\n                  {item.description.length > 100 \n                    ? `${item.description.substring(0, 100)}...` \n                    : item.description}\n                </TableCell>\n                <TableCell>₽{item.price}</TableCell>\n                <TableCell>\n                  <StatusBadge \n                    available={item.available ?? false}\n                    onClick={() => handleToggleAvailability(item)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    {item.available ?? false ? 'Доступно' : 'Не доступно'}\n                  </StatusBadge>\n                </TableCell>\n                <TableCell>\n                  <div style={{ display: 'flex' }}>\n                    <ActionButton \n                      variant=\"edit\" \n                      onClick={() => handleEditItem(item)}\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M17 3a2.85 2.85 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3Z\"></path>\n                      </svg>\n                    </ActionButton>\n                    <ActionButton \n                      variant=\"delete\" \n                      onClick={() => handleDeleteItem(item.id)}\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M3 6h18\"></path>\n                        <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\n                        <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\n                      </svg>\n                    </ActionButton>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </MenuTable>\n        ) : (\n          <EmptyMessage>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ margin: '0 auto 16px', display: 'block', opacity: 0.6 }}>\n              <path d=\"M8 3v3a2 2 0 0 1-2 2H3\"></path>\n              <path d=\"M21 8h-3a2 2 0 0 1-2-2V3\"></path>\n              <path d=\"M3 16h3a2 2 0 0 1 2 2v3\"></path>\n              <path d=\"M16 21v-3a2 2 0 0 1 2-2h3\"></path>\n            </svg>\n            <p>В меню пока нет блюд. Добавьте первое блюдо!</p>\n            <Button variant=\"primary\" onClick={handleCreateItem} style={{ margin: '16px auto', display: 'block' }}>\n              Добавить блюдо\n            </Button>\n          </EmptyMessage>\n        )}\n      </MainContent>\n      \n      {/* Модальное окно для создания/редактирования пункта меню */}\n      <Modal isOpen={modalOpen}>\n        <ModalContent>\n          <ModalTitle>\n            {modalMode === 'create' ? 'Добавить новое блюдо' : 'Редактировать блюдо'}\n          </ModalTitle>\n          \n          <FormGroup>\n            <Label htmlFor=\"name\">Название</Label>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleFormChange}\n              placeholder=\"Введите название блюда\"\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"description\">Описание</Label>\n            <TextArea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleFormChange}\n              placeholder=\"Введите описание блюда\"\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"price\">Цена (₽)</Label>\n            <Input\n              id=\"price\"\n              name=\"price\"\n              type=\"number\"\n              value={formData.price}\n              onChange={handleFormChange}\n              placeholder=\"Введите цену блюда\"\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"image\">URL изображения</Label>\n            <Input\n              id=\"image\"\n              name=\"image\"\n              value={formData.image}\n              onChange={handleFormChange}\n              placeholder=\"Введите URL изображения блюда\"\n            />\n          </FormGroup>\n          \n          <FormGroup>\n            <Label htmlFor=\"category\">Категория</Label>\n            <Select\n              id=\"category\"\n              name=\"category\"\n              value={formData.category}\n              onChange={handleFormChange}\n            >\n              <option value=\"main\">Основные блюда</option>\n              <option value=\"appetizers\">Закуски</option>\n              <option value=\"desserts\">Десерты</option>\n              <option value=\"drinks\">Напитки</option>\n            </Select>\n          </FormGroup>\n          \n          <FormGroup>\n            <Checkbox>\n              <input\n                id=\"available\"\n                name=\"available\"\n                type=\"checkbox\"\n                checked={formData.available}\n                onChange={handleCheckboxChange}\n              />\n              <Label htmlFor=\"available\">Доступно для заказа</Label>\n            </Checkbox>\n          </FormGroup>\n          \n          <ModalActions>\n            <Button variant=\"cancel\" onClick={() => setModalOpen(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"primary\" onClick={handleSaveItem}>\n              {modalMode === 'create' ? 'Создать' : 'Сохранить'}\n            </Button>\n          </ModalActions>\n        </ModalContent>\n      </Modal>\n      \n      {/* Модальное окно для подтверждения удаления */}\n      <Modal isOpen={deleteModalOpen}>\n        <ModalContent>\n          <ModalTitle>Подтверждение удаления</ModalTitle>\n          <p style={{ color: 'var(--text-color)', marginBottom: 'var(--spacing-lg)' }}>\n            Вы уверены, что хотите удалить этот пункт меню? Это действие нельзя отменить.\n          </p>\n          \n          <ModalActions>\n            <Button variant=\"cancel\" onClick={() => setDeleteModalOpen(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"danger\" onClick={confirmDeleteItem}>\n              Удалить\n            </Button>\n          </ModalActions>\n        </ModalContent>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default AdminMenuManagementPage; "],"names":["Container","styled","PageTransition","DashboardHeader","div","Title","h1","BackButton","button","MainContent","SectionTitle","h2","AddButton","MenuTable","TableHead","TableRow","TableCell","StatusBadge","span","props","available","ActionButton","variant","Modal","isOpen","ModalContent","ModalTitle","FormGroup","Label","label","Input","input","TextArea","textarea","Select","select","Checkbox","ModalActions","Button","EmptyMessage","AdminMenuManagementPage","navigate","useNavigate","menuItems","setMenuItems","useState","isAuthenticated","setIsAuthenticated","restaurantName","setRestaurantName","loading","setLoading","modalOpen","setModalOpen","modalMode","setModalMode","editItemId","setEditItemId","restaurantId","setRestaurantId","formData","setFormData","name","description","price","image","category","deleteModalOpen","setDeleteModalOpen","deleteItemId","setDeleteItemId","useEffect","auth","localStorage","getItem","role","currentUserStr","async","currentUser","JSON","parse","menu","getRestaurantMenu","restaurant","getRestaurantData","error","console","loadData","handleCreateItem","handleFormChange","e","value","type","target","checked","prev","_jsx","children","style","display","justifyContent","alignItems","height","color","_jsxs","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","length","map","item","_item$available","_item$available2","id","fontSize","substring","updatedItem","updated","updateMenuItem","menuItem","handleToggleAvailability","cursor","toString","imageUrl","handleEditItem","width","handleDeleteItem","itemId","margin","opacity","htmlFor","onChange","placeholder","validateForm","trim","Number","isNaN","menuItemData","Date","now","parseFloat","newItem","createMenuItem","Error","alert","marginBottom","deleteMenuItem","filter"],"sourceRoot":""}