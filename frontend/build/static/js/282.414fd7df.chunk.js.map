{"version":3,"file":"static/js/282.414fd7df.chunk.js","mappings":"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","sources":["components/Navigation.tsx","pages/RestaurantMenu.tsx","pages/HomePage.tsx","components/CartButton.tsx","components/Header.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Обновленная навигационная панель в стиле Apple/Nvidia\nconst NavContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  margin: var(--spacing-md) 0;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  overflow: hidden;\n  \n  @media (max-width: 767px) {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    border-radius: var(--border-radius-md) var(--border-radius-md) 0 0;\n    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.12);\n    margin: 0;\n  }\n`;\n\n// Улучшенная навигационная кнопка с визуальными эффектами\nconst NavButton = styled.button<{ active?: boolean }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: var(--spacing-md) var(--spacing-sm);\n  background: ${props => props.active ? 'linear-gradient(to bottom, rgba(var(--primary-color-rgb), 0.08), transparent)' : 'transparent'};\n  border: none;\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  font-size: 0.9rem;\n  position: relative;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  cursor: pointer;\n  font-weight: ${props => props.active ? '600' : '500'};\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: ${props => props.active ? '40%' : '0'};\n    height: 3px;\n    background-color: var(--primary-color);\n    border-radius: 3px 3px 0 0;\n    transition: width 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  &:hover:not(:disabled) {\n    color: var(--primary-color);\n    background-color: rgba(var(--primary-color-rgb), 0.05);\n    \n    &::after {\n      width: ${props => props.active ? '60%' : '30%'};\n    }\n    \n    svg {\n      transform: translateY(-2px);\n    }\n  }\n  \n  svg {\n    margin-bottom: var(--spacing-xs);\n    width: 20px;\n    height: 20px;\n    stroke-width: 2;\n    transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-sm) var(--spacing-xs);\n    font-size: 0.8rem;\n    \n    svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst Navigation: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { \n    selectedCity, \n    selectedRestaurant, \n    restaurants,\n    deliveryMethod,\n    setDeliveryMethod\n  } = useAppContext();\n  \n  const [activeTab, setActiveTab] = useState('home');\n  \n  // Определяем активную вкладку на основе текущего URL\n  useEffect(() => {\n    if (location.pathname.includes('city-selection')) {\n      setActiveTab('city');\n    } else if (location.pathname.includes('restaurant-selection')) {\n      setActiveTab('restaurant');\n    } else if (location.pathname === '/') {\n      setActiveTab('home');\n    }\n  }, [location.pathname]);\n  \n  // Получаем данные о выбранном ресторане\n  const selectedRestaurantData = selectedRestaurant !== null\n    ? restaurants.find(r => r.id === selectedRestaurant)\n    : null;\n  \n  return (\n    <NavContainer>\n      <NavButton \n        onClick={() => { navigate('/city-selection') }}\n        active={activeTab === 'city'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z\"></path>\n          <circle cx=\"12\" cy=\"9\" r=\"2.5\"></circle>\n        </svg>\n        {selectedCity ? selectedCity.name : 'Город'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => { selectedCity && navigate(selectedRestaurant ? '/home' : '/restaurant-selection') }}\n        disabled={!selectedCity}\n        active={activeTab === 'restaurant'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M17 11H3c-.6 0-1 .4-1 1v9c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9c0-.6-.4-1-1-1Z\"></path>\n          <path d=\"M14 11V6c0-2.8-2.2-5-5-5S4 3.2 4 6v5\"></path>\n          <path d=\"M21 11v9c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-9c0-.6.4-1 1-1h2c.6 0 1 .4 1 1Z\"></path>\n        </svg>\n        {selectedRestaurantData ? selectedRestaurantData.name : 'Ресторан'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('delivery')}\n        active={deliveryMethod === 'delivery'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n          <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n          <path d=\"M5 17H3v-6l2-2h8l3 3h1a2 2 0 0 1 2 2v3h-2\"></path>\n          <path d=\"M15 8h5l-1.5 5h-5\"></path>\n        </svg>\n        Доставка\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('pickup')}\n        active={deliveryMethod === 'pickup'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M4 10h12\"></path>\n          <path d=\"M4 14h9\"></path>\n          <path d=\"M4 18h6\"></path>\n          <path d=\"M18 15v6\"></path>\n          <path d=\"M15 18h6\"></path>\n          <path d=\"m14.5 7.5-8-4-2 3 8 4Z\"></path>\n        </svg>\n        Самовывоз\n      </NavButton>\n    </NavContainer>\n  );\n};\n\nexport default Navigation; ","import React, { useMemo, useCallback, useState, useLayoutEffect, useRef, useEffect, memo } from 'react';\nimport styled from 'styled-components';\nimport { MenuItem } from '../data/adminDatabase';\nimport { useAppContext } from '../contexts/AppContext';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\n// Оптимизированные стили с уменьшенным количеством CSS\nconst MenuContainer = styled.div`\n  padding: var(--spacing-md);\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nconst MenuHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-md);\n`;\n\nconst MenuTitle = styled.h2`\n  margin: 0;\n  color: var(--text-color);\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  gap: var(--spacing-sm);\n  margin-bottom: var(--spacing-md);\n  overflow-x: auto;\n  padding-bottom: var(--spacing-xs);\n  \n  &::-webkit-scrollbar {\n    height: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: var(--card-bg);\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: var(--primary-color);\n    border-radius: 4px;\n  }\n`;\n\nconst FilterButton = styled.button<{ $active: boolean }>`\n  background-color: ${props => props.$active ? 'var(--primary-color)' : 'var(--card-bg)'};\n  color: ${props => props.$active ? 'white' : 'var(--text-color)'};\n  border: none;\n  padding: var(--spacing-xs) var(--spacing-md);\n  border-radius: var(--border-radius-md);\n  font-weight: ${props => props.$active ? '600' : '400'};\n  cursor: pointer;\n  white-space: nowrap;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  \n  svg, span {\n    margin-right: var(--spacing-xs);\n    font-size: 1.1rem;\n  }\n  \n  &:hover {\n    background-color: ${props => props.$active ? 'var(--primary-light)' : 'var(--card-hover)'};\n    transform: translateY(-2px);\n  }\n`;\n\nconst FoodGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: var(--spacing-md);\n  transition: opacity 0.3s ease;\n`;\n\n// Комбинированные стили карточки для лучшей производительности\nconst FoodCard = styled.div`\n  border-radius: var(--border-radius-md);\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  background-color: var(--card-bg);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    \n    img {\n      transform: scale(1.05);\n    }\n  }\n`;\n\nconst ImageContainer = styled.div`\n  height: 180px;\n  overflow: hidden;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom, transparent 70%, rgba(0, 0, 0, 0.2) 100%);\n    pointer-events: none;\n  }\n`;\n\nconst FoodImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n  \n  // Добавляем стили для ускорения рендеринга на мобильных устройствах\n  will-change: transform;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -webkit-transform-style: preserve-3d;\n  transform-style: preserve-3d;\n`;\n\nconst FoodDetails = styled.div`\n  padding: var(--spacing-md);\n`;\n\nconst FoodName = styled.h3`\n  margin: 0 0 var(--spacing-xs) 0;\n  font-size: 1.1rem;\n  color: var(--text-color);\n`;\n\nconst FoodDescription = styled.p`\n  margin: 0 0 var(--spacing-md) 0;\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst FoodPrice = styled.div`\n  font-weight: 700;\n  color: var(--primary-color);\n  font-size: 1.1rem;\n  margin-bottom: var(--spacing-sm);\n`;\n\n// Обновляем стиль контроля количества для анимации появления\nconst QuantityControl = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: var(--spacing-sm);\n  height: 32px;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  max-height: 0;\n  opacity: 0;\n  \n  &.visible {\n    max-height: 40px;\n    opacity: 1;\n    margin-bottom: var(--spacing-sm);\n  }\n`;\n\nconst QuantityButton = styled.button`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: var(--card-hover);\n  color: var(--text-color);\n  border: none;\n  font-size: 1.2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: var(--primary-light);\n    color: white;\n    transform: scale(1.1);\n  }\n  \n  &:disabled {\n    background-color: var(--border-color);\n    color: var(--text-secondary);\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst QuantityDisplay = styled.span`\n  font-weight: 600;\n  color: var(--text-color);\n  font-size: 1.1rem;\n`;\n\n// Анимация добавления в корзину\nconst CartAnimation = styled.div`\n  position: absolute;\n  top: -20px;\n  right: 10px;\n  color: var(--primary-color);\n  font-weight: bold;\n  font-size: 1.2rem;\n  animation: flyUp 0.8s forwards;\n  opacity: 0;\n  z-index: 10;\n  \n  @keyframes flyUp {\n    0% { transform: translateY(0); opacity: 0; }\n    10% { opacity: 1; }\n    70% { opacity: 1; }\n    100% { transform: translateY(-40px); opacity: 0; }\n  }\n`;\n\n// Анимированная карточка с появлением\nconst AnimatedFoodCard = styled(FoodCard)<{ $delay: number }>`\n  opacity: 0;\n  transform: translateY(30px);\n  animation: fadeInUp 0.6s ease forwards;\n  animation-delay: ${props => props.$delay}s;\n  \n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\n// Анимированная сетка меню\nconst AnimatedFoodGrid = styled(FoodGrid)`\n  opacity: 0;\n  animation: fadeIn 0.4s ease forwards;\n  \n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n`;\n\n// Анимированная кнопка добавления в корзину\nconst AddToCartButton = styled.button`\n  width: 100%;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: var(--spacing-sm);\n  border-radius: var(--border-radius-sm);\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  gap: var(--spacing-xs);\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    background-color: var(--primary-light);\n    transform: translateY(-2px);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  &.added {\n    background-color: #4CAF50; /* Зеленый цвет для успешного добавления */\n    animation: pulse 0.6s ease-in-out;\n  }\n  \n  &.active {\n    background-color: var(--secondary-color); /* Контрастный цвет при активации */\n    box-shadow: 0 0 12px rgba(46, 196, 182, 0.6); /* Свечение для привлечения внимания */\n    transform: translateY(-2px); /* Легкий подъем для объемности */\n  }\n  \n  &.added svg {\n    transform: scale(1.2);\n    animation: checkmarkAnim 0.5s ease-in-out;\n  }\n  \n  @keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n    100% { transform: scale(1); }\n  }\n  \n  @keyframes checkmarkAnim {\n    0% { transform: scale(0); opacity: 0; }\n    50% { transform: scale(1.4); opacity: 1; }\n    100% { transform: scale(1.2); opacity: 1; }\n  }\n`;\n\n// Добавляем стиль для кнопки подтверждения добавления\nconst ConfirmAddButton = styled.button`\n  width: 100%;\n  background-color: var(--success-color);\n  color: white;\n  border: none;\n  padding: var(--spacing-sm);\n  border-radius: var(--border-radius-sm);\n  font-weight: 600;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  gap: var(--spacing-xs);\n  position: relative;\n  overflow: hidden;\n  margin-top: var(--spacing-sm);\n  opacity: 0;\n  max-height: 0;\n  \n  &.visible {\n    opacity: 1;\n    max-height: 60px;\n    margin-top: var(--spacing-sm);\n  }\n  \n  &:hover {\n    background-color: var(--success-color);\n    filter: brightness(1.1);\n    transform: translateY(-2px);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n\n// Добавляем оверлей с подсказкой\nconst HintOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--spacing-md);\n  text-align: center;\n  border-radius: var(--border-radius-md);\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 0.3s ease;\n  z-index: 10;\n  \n  &.visible {\n    opacity: 1;\n    animation: pulse-hint 2s ease-in-out;\n  }\n  \n  @keyframes pulse-hint {\n    0% { opacity: 0; }\n    20% { opacity: 1; }\n    80% { opacity: 1; }\n    100% { opacity: 0; }\n  }\n`;\n\nconst CategoryTag = styled.span`\n  position: absolute;\n  top: var(--spacing-sm);\n  left: var(--spacing-sm);\n  background-color: rgba(0, 0, 0, 0.6);\n  color: white;\n  padding: 4px 8px;\n  border-radius: var(--border-radius-sm);\n  font-size: 0.8rem;\n  z-index: 5;\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: var(--spacing-xl);\n  color: var(--text-secondary);\n  \n  svg {\n    width: 48px;\n    height: 48px;\n    margin-bottom: var(--spacing-md);\n    color: var(--border-color);\n  }\n  \n  h3 {\n    margin: 0 0 var(--spacing-xs) 0;\n    color: var(--text-color);\n  }\n  \n  p {\n    margin: 0;\n  }\n`;\n\n// Более оптимизированная функция форматирования цены\nconst formatPrice = (price: number): string => {\n  return new Intl.NumberFormat('ru-RU').format(price);\n};\n\n// Обновлённые фильтры для категорий меню с иконками\nconst MENU_FILTERS = [\n  { id: 'all', name: 'Все', icon: '🍽️' },\n  { id: 'main', name: 'Основное', icon: '🍲' },\n  { id: 'soups', name: 'Супы', icon: '🥣' },\n  { id: 'appetizers', name: 'Закуски', icon: '🥪' },\n  { id: 'desserts', name: 'Десерты', icon: '🍰' },\n  { id: 'drinks', name: 'Напитки', icon: '🥤' }\n];\n\n// Русское наименование категорий для тегов\nconst CATEGORY_NAMES: {[key: string]: string} = {\n  'main': 'Основное',\n  'soups': 'Суп',\n  'appetizers': 'Закуска',\n  'desserts': 'Десерт',\n  'drinks': 'Напиток'\n};\n\n// Функция нормализации категорий для отображения\nconst normalizeCategory = (category: string): string => {\n  if (!category) return 'main'; // Значение по умолчанию, если категория не указана\n  \n  const lowerCategory = category.toLowerCase();\n  \n  if (['суп', 'супы', 'soup', 'soups'].includes(lowerCategory)) {\n    return 'soups';\n  }\n  if (['основное', 'основные блюда', 'main course', 'main'].includes(lowerCategory)) {\n    return 'main';\n  }\n  if (['закуска', 'закуски', 'appetizer', 'appetizers'].includes(lowerCategory)) {\n    return 'appetizers';\n  }\n  if (['десерт', 'десерты', 'dessert', 'desserts'].includes(lowerCategory)) {\n    return 'desserts';\n  }\n  if (['напиток', 'напитки', 'drink', 'drinks'].includes(lowerCategory)) {\n    return 'drinks';\n  }\n  \n  return 'main'; // По умолчанию возвращаем \"основное\"\n};\n\n// Обработчик ошибок загрузки изображений\nconst handleImageError = (e: React.SyntheticEvent<HTMLImageElement>) => {\n  try {\n    // Безопасно устанавливаем placeholder\n    if (e.target && e.currentTarget) {\n      (e.target as HTMLImageElement).src = '/food-placeholder.png';\n    \n      // Добавляем класс для применения стилей ошибки, если элемент существует\n      if (e.currentTarget.classList) {\n        e.currentTarget.classList.add('image-error');\n      }\n    }\n  } catch (error) {\n    // Игнорируем любые ошибки в обработчике ошибок\n    console.warn('Error handling image error:', error);\n  }\n};\n\n// Специальный компонент для безопасной загрузки изображений с обработкой ошибок\nconst SafeImage = memo(({ src, alt, ...props }: React.ComponentProps<typeof FoodImage>) => {\n  const [error, setError] = useState(false);\n\n  const handleError = useCallback((e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    setError(true);\n    if (handleImageError) {\n      handleImageError(e);\n    }\n  }, []);\n\n  return (\n    <FoodImage \n      src={error ? '/food-placeholder.png' : (src || '/food-placeholder.png')}\n      alt={alt || 'Изображение'}\n      onError={handleError}\n      loading=\"lazy\"\n      decoding=\"async\"\n      {...props}\n    />\n  );\n});\n\nSafeImage.displayName = 'SafeImage';\n\n// Интерфейс пропсов для компонента\ninterface RestaurantMenuProps {\n  menuItems: MenuItem[];\n}\n\nconst RestaurantMenu: React.FC<RestaurantMenuProps> = ({ menuItems }) => {\n  const [activeFilter, setActiveFilter] = useState('all');\n  const { addToCart, cart } = useAppContext();\n  const [addedItems, setAddedItems] = useState<{ [key: number]: boolean }>({});\n  const [quantities, setQuantities] = useState<{ [key: number]: number }>({});\n  const [animations, setAnimations] = useState<{ [key: number]: boolean }>({});\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Состояние для отслеживания элементов в корзине  \n  const [itemsInCart, setItemsInCart] = useState<{ [key: number]: boolean }>({});\n  \n  // Новое состояние для отслеживания элементов в режиме выбора количества\n  const [selectedItems, setSelectedItems] = useState<{ [key: number]: boolean }>({});\n  \n  // Новое состояние для отображения подсказки\n  const [showHint, setShowHint] = useState<{ [key: number]: boolean }>({});\n  \n  // Проверяем, какие товары уже есть в корзине при загрузке компонента\n  useEffect(() => {\n    const inCartMap: { [key: number]: boolean } = {};\n    cart.forEach(item => {\n      inCartMap[item.id] = true;\n    });\n    setItemsInCart(inCartMap);\n  }, [cart]);\n  \n  // Имитируем загрузку данных при первом рендере и при изменении фильтра\n  useEffect(() => {\n    setIsLoading(true);\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 800); // Задержка загрузки для демонстрации эффекта\n    \n    return () => clearTimeout(timer);\n  }, [activeFilter]);\n  \n  // Получить или установить количество для товара\n  const getQuantity = useCallback((itemId: number) => {\n    return quantities[itemId] || 1;\n  }, [quantities]);\n  \n  // Увеличить количество товара\n  const increaseQuantity = useCallback((itemId: number) => {\n    setQuantities(prev => ({ ...prev, [itemId]: Math.min((prev[itemId] || 1) + 1, 10) }));\n  }, []);\n  \n  // Уменьшить количество товара\n  const decreaseQuantity = useCallback((itemId: number) => {\n    setQuantities(prev => ({ ...prev, [itemId]: Math.max((prev[itemId] || 1) - 1, 1) }));\n  }, []);\n  \n  // Обновляем обработчик нажатия на кнопку \"В корзину\"\n  const handleSelectItem = useCallback((item: MenuItem) => {\n    // Если товар уже выбран - игнорируем\n    if (selectedItems[item.id]) return;\n    \n    // Отмечаем товар как выбранный для отображения счетчика\n    setSelectedItems(prev => ({ ...prev, [item.id]: true }));\n    \n    // Показываем подсказку\n    setShowHint(prev => ({ ...prev, [item.id]: true }));\n    \n    // Через 3 секунды скрываем подсказку\n    setTimeout(() => {\n      setShowHint(prev => ({ ...prev, [item.id]: false }));\n    }, 3000);\n    \n  }, [selectedItems]);\n  \n  // Добавляем обработчик для подтверждения добавления в корзину\n  const handleConfirmAddToCart = useCallback((item: MenuItem) => {\n    // Предотвращаем повторное добавление если кнопка уже в состоянии \"Добавлено\"\n    if (addedItems[item.id]) return;\n    \n    // Устанавливаем состояние \"Добавлено\" для этого товара\n    setAddedItems(prev => ({ ...prev, [item.id]: true }));\n    \n    // Получаем текущее количество\n    const quantity = getQuantity(item.id);\n    \n    // Запускаем анимацию\n    setAnimations(prev => ({ ...prev, [item.id]: true }));\n    setTimeout(() => {\n      setAnimations(prev => ({ ...prev, [item.id]: false }));\n    }, 800);\n    \n    // Добавляем в корзину с указанным количеством\n    addToCart({\n      ...item,\n      quantity: quantity\n    });\n    \n    // Сбрасываем режим выбора количества\n    setSelectedItems(prev => ({ ...prev, [item.id]: false }));\n    \n    // Сбрасываем состояние через 1.5 секунды\n    setTimeout(() => {\n      setAddedItems(prev => ({ ...prev, [item.id]: false }));\n    }, 1500);\n  }, [addToCart, addedItems, getQuantity]);\n  \n  // Добавляем обработчик отмены выбора\n  const handleCancelSelection = useCallback((itemId: number) => {\n    // Сбрасываем режим выбора количества для данного товара\n    setSelectedItems(prev => ({ ...prev, [itemId]: false }));\n    \n    // Сбрасываем показ подсказки\n    setShowHint(prev => ({ ...prev, [itemId]: false }));\n  }, []);\n  \n  // Мемоизированное фильтрованное меню\n  const filteredItems = useMemo(() => {\n    if (activeFilter === 'all') {\n      return menuItems.filter((item: MenuItem) => item.available);\n    }\n    \n    return menuItems.filter((item: MenuItem) => {\n      // Нормализуем категорию элемента один раз перед сравнением\n      const normalizedItemCategory = normalizeCategory(item.category);\n      \n      // Проверяем совпадение нормализованной категории с выбранным фильтром\n      const categoryMatches = normalizedItemCategory === activeFilter;\n      \n      return categoryMatches && item.available;\n    });\n  }, [menuItems, activeFilter]);\n  \n  // Обработчик изменения фильтра\n  const handleFilterChange = useCallback((filterId: string) => {\n    setActiveFilter(filterId);\n  }, []);\n  \n  // Обновляем компонент загрузки\n  const loadingComponent = useMemo(() => (\n    <LoadingSpinner text=\"Загрузка меню...\" />\n  ), []);\n  \n  // Мемоизированное содержимое меню\n  const menuContent = useMemo(() => {\n    if (isLoading) {\n      return loadingComponent;\n    }\n    \n    if (filteredItems.length === 0) {\n      return (\n        <EmptyState>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <path d=\"M3 2h18\"></path>\n            <path d=\"M10 11v4\"></path>\n            <path d=\"M14 9v6\"></path>\n            <path d=\"M4 22h16a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2Z\"></path>\n          </svg>\n          <h3>Нет доступных блюд</h3>\n          <p>В данной категории пока нет блюд.</p>\n        </EmptyState>\n      );\n    }\n    \n    return (\n      <AnimatedFoodGrid>\n        {filteredItems.map((item: MenuItem, index: number) => (\n          <AnimatedFoodCard \n            key={item.id} \n            $delay={0.05 * (index % 8)} // Стаггерированная задержка, циклично для каждой строки\n          >\n            <ImageContainer>\n              {/* Показываем тег категории */}\n              <CategoryTag>\n                {CATEGORY_NAMES[normalizeCategory(item.category)] || 'Блюдо'}\n              </CategoryTag>\n              <SafeImage \n                src={item.imageUrl || '/food-placeholder.png'} \n                alt={item.name} \n              />\n              \n              {/* Подсказка для выбора количества */}\n              <HintOverlay className={showHint[item.id] ? 'visible' : ''}>\n                Выберите количество и нажмите \"Добавить\"\n              </HintOverlay>\n            </ImageContainer>\n            <FoodDetails>\n              <FoodName>{item.name}</FoodName>\n              <FoodDescription>{item.description}</FoodDescription>\n              <FoodPrice>₽{formatPrice(item.price)}</FoodPrice>\n              \n              {/* Контроль количества - показываем в режиме выбора */}\n              <QuantityControl className={selectedItems[item.id] ? 'visible' : ''}>\n                <QuantityButton \n                  onClick={() => decreaseQuantity(item.id)}\n                  disabled={getQuantity(item.id) <= 1 || addedItems[item.id]}\n                >\n                  -\n                </QuantityButton>\n                <QuantityDisplay>{getQuantity(item.id)}</QuantityDisplay>\n                <QuantityButton \n                  onClick={() => increaseQuantity(item.id)}\n                  disabled={getQuantity(item.id) >= 10 || addedItems[item.id]}\n                >\n                  +\n                </QuantityButton>\n              </QuantityControl>\n              \n              {/* Кнопка добавления в корзину - показываем когда не в режиме выбора */}\n              {!selectedItems[item.id] && (\n                <AddToCartButton \n                  onClick={() => handleSelectItem(item)}\n                  disabled={addedItems[item.id]}\n                  className={addedItems[item.id] ? 'added' : (selectedItems[item.id] ? 'active' : '')}\n                >\n                  {addedItems[item.id] ? (\n                    <>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                      </svg>\n                      Ваш заказ добавлен\n                    </>\n                  ) : (\n                    <>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M9 20a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"></path>\n                        <path d=\"M20 20a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"></path>\n                        <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n                      </svg>\n                      В корзину\n                    </>\n                  )}\n                </AddToCartButton>\n              )}\n              \n              {/* Кнопка подтверждения добавления - показываем только в режиме выбора количества */}\n              <ConfirmAddButton \n                className={selectedItems[item.id] ? 'visible' : ''}\n                onClick={() => handleConfirmAddToCart(item)}\n                disabled={addedItems[item.id]}\n              >\n                {animations[item.id] && (\n                  <CartAnimation>+{getQuantity(item.id)}</CartAnimation>\n                )}\n                {addedItems[item.id] ? (\n                  <>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <polyline points=\"20 6 9 17 4 12\"></polyline>\n                    </svg>\n                    Добавлено\n                  </>\n                ) : (\n                  <>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <polyline points=\"20 6 9 17 4 12\"></polyline>\n                    </svg>\n                    Добавить {getQuantity(item.id) > 1 ? `(${getQuantity(item.id)})` : ''}\n                  </>\n                )}\n              </ConfirmAddButton>\n              \n              {/* Добавляем кнопку отмены выбора */}\n              {selectedItems[item.id] && (\n                <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 'var(--spacing-xs)' }}>\n                  <button \n                    onClick={() => handleCancelSelection(item.id)}\n                    style={{ \n                      background: 'transparent', \n                      border: 'none', \n                      color: 'var(--text-secondary)', \n                      cursor: 'pointer',\n                      fontSize: '0.9rem',\n                      padding: 'var(--spacing-xs)'\n                    }}\n                  >\n                    Отмена\n                  </button>\n                </div>\n              )}\n            </FoodDetails>\n          </AnimatedFoodCard>\n        ))}\n      </AnimatedFoodGrid>\n    );\n  }, [filteredItems, handleSelectItem, handleConfirmAddToCart, handleCancelSelection, selectedItems, addedItems, getQuantity, increaseQuantity, decreaseQuantity, animations, isLoading, loadingComponent, showHint]);\n  \n  return (\n    <MenuContainer>\n      <MenuHeader>\n        <MenuTitle>Меню</MenuTitle>\n      </MenuHeader>\n      \n      <FiltersContainer>\n        {MENU_FILTERS.map((filter) => (\n          <FilterButton \n            key={filter.id}\n            $active={activeFilter === filter.id}\n            onClick={() => handleFilterChange(filter.id)}\n          >\n            <span>{filter.icon}</span> {filter.name}\n          </FilterButton>\n        ))}\n      </FiltersContainer>\n      \n      {menuContent}\n    </MenuContainer>\n  );\n};\n\nexport default React.memo(RestaurantMenu); ","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  Container, \n  MainContent,\n  EmptyState,\n  PageTransition\n} from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\nimport CartButton from '../components/CartButton';\nimport { getMenuItems } from '../data/adminDatabase';\nimport RestaurantMenu from './RestaurantMenu';\n\n// Основной контейнер с обновленной адаптивностью\nconst HomeContainer = styled(PageTransition)`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  \n  @media (max-width: 768px) {\n    padding-bottom: 60px; /* Учитываем навигацию снизу в Telegram */\n  }\n`;\n\n// Модернизированный Hero\nconst Hero = styled.div`\n  position: relative;\n  overflow: hidden;\n  border-radius: var(--border-radius-lg);\n  margin-bottom: var(--spacing-lg);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n  transition: transform 0.3s ease;\n  \n  @media (min-width: 768px) {\n    height: 380px;\n  }\n  \n  @media (max-width: 767px) {\n    height: 280px;\n    margin: var(--spacing-sm) var(--spacing-sm) var(--spacing-lg);\n    border-radius: var(--border-radius-md);\n  }\n  \n  &:hover {\n    transform: translateY(-4px);\n  }\n`;\n\n// Градиент фона с более современным и чистым видом\nconst HeroContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: var(--spacing-xl);\n  background: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 0.85) 0%,\n    rgba(0, 0, 0, 0.6) 50%,\n    rgba(0, 0, 0, 0.2) 100%\n  );\n  z-index: 1;\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-lg);\n    background: linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.85) 0%,\n      rgba(0, 0, 0, 0.6) 70%,\n      rgba(0, 0, 0, 0.4) 100%\n    );\n  }\n`;\n\n// Улучшенный фон с более сложной анимацией\nconst HeroImage = styled.div<{ $bgImage?: string }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.$bgImage ? `url(${props.$bgImage})` : 'url(\\'/assets/images/paneer-tikka.jpg\\')'};\n  background-position: center;\n  background-size: cover;\n  filter: brightness(0.9) contrast(1.05);\n  animation: subtle-zoom 30s infinite alternate;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: radial-gradient(circle at bottom right, \n                rgba(255, 159, 13, 0.1), \n                transparent 60%);\n  }\n  \n  @keyframes subtle-zoom {\n    0% {\n      transform: scale(1.05) translate(0%, 0%);\n    }\n    50% {\n      transform: scale(1.1) translate(-1%, -0.5%);\n    }\n    100% {\n      transform: scale(1.15) translate(-2%, -1%);\n    }\n  }\n`;\n\n// Типографика в стиле Apple с улучшенной иерархией\nconst HeroTitle = styled.h1`\n  font-size: 3rem;\n  font-weight: 700;\n  margin-bottom: var(--spacing-md);\n  color: white;\n  text-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  max-width: 70%;\n  letter-spacing: -0.02em;\n  line-height: 1.1;\n  \n  @media (max-width: 767px) {\n    font-size: 2rem;\n    max-width: 100%;\n    margin-bottom: var(--spacing-sm);\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-size: 1.4rem;\n  margin-bottom: var(--spacing-lg);\n  color: rgba(255, 255, 255, 0.9);\n  max-width: 60%;\n  font-weight: 400;\n  line-height: 1.4;\n  \n  @media (max-width: 767px) {\n    font-size: 1.1rem;\n    max-width: 100%;\n    margin-bottom: var(--spacing-md);\n  }\n`;\n\n// Обновленная кнопка в стиле Apple\nconst HeroButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: var(--spacing-md) var(--spacing-lg);\n  border-radius: var(--border-radius-md);\n  font-weight: 600;\n  cursor: pointer;\n  align-self: flex-start;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 8px 20px rgba(255, 159, 13, 0.4);\n  transition: all 0.3s ease;\n  letter-spacing: 0.02em;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n    transition: transform 0.3s ease;\n  }\n  \n  &:hover {\n    background-color: var(--primary-light);\n    transform: translateY(-4px);\n    box-shadow: 0 12px 24px rgba(255, 159, 13, 0.5);\n    \n    svg {\n      transform: translateX(2px);\n    }\n  }\n  \n  &:active {\n    transform: translateY(-2px);\n  }\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-sm) var(--spacing-md);\n    font-size: 0.95rem;\n  }\n`;\n\n// Более современная карточка для информации о ресторане\nconst RestaurantInfo = styled.div`\n  margin-bottom: var(--spacing-lg);\n  padding: var(--spacing-lg);\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n  }\n  \n  @media (max-width: 767px) {\n    margin: 0 var(--spacing-sm) var(--spacing-lg);\n    padding: var(--spacing-md);\n  }\n`;\n\nconst RestaurantName = styled.h2`\n  color: var(--text-color);\n  margin: 0 0 var(--spacing-xs) 0;\n  font-weight: 700;\n  letter-spacing: -0.01em;\n  font-size: 1.6rem;\n`;\n\nconst RestaurantAdditionalInfo = styled.p`\n  color: var(--text-secondary);\n  margin: 0;\n  font-size: 1.05rem;\n  display: flex;\n  align-items: center;\n  \n  svg {\n    margin-right: var(--spacing-xs);\n    color: var(--primary-color);\n  }\n`;\n\n// Контейнер для состояния пустой страницы\nconst EnhancedEmptyState = styled(EmptyState)`\n  padding: var(--spacing-xl) var(--spacing-lg);\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-lg);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);\n  max-width: 600px;\n  margin: var(--spacing-xl) auto;\n  text-align: center;\n  \n  svg {\n    width: 64px;\n    height: 64px;\n    color: var(--primary-color);\n    margin-bottom: var(--spacing-lg);\n  }\n  \n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: var(--spacing-md);\n    font-weight: 600;\n  }\n  \n  p {\n    color: var(--text-secondary);\n    margin-bottom: var(--spacing-lg);\n    font-size: 1.1rem;\n    line-height: 1.5;\n  }\n  \n  @media (max-width: 767px) {\n    margin: var(--spacing-lg) var(--spacing-sm);\n    padding: var(--spacing-lg) var(--spacing-md);\n  }\n`;\n\nconst HomePage: React.FC = () => {\n  const navigate = useNavigate();\n  const { \n    selectedCity, \n    selectedRestaurant, \n    setSelectedRestaurant,\n    restaurants\n  } = useAppContext();\n  const { hideBackButton, hideMainButton } = useTelegram();\n  \n  // Используем меню из adminDatabase вместо mockData\n  const [menuItems, setMenuItems] = useState<any[]>([]);\n  \n  // Получаем данные о выбранном ресторане и city из контекста\n  const selectedRestaurantData = selectedRestaurant \n    ? restaurants.find(r => r.id === selectedRestaurant) \n    : null;\n  \n  // Добавим логирование для отслеживания данных ресторана\n  useEffect(() => {\n    if (selectedRestaurantData) {\n      console.log('HomePage: данные выбранного ресторана:', selectedRestaurantData);\n      console.log('HomePage: URL изображения:', selectedRestaurantData.coverImage);\n    }\n  }, [selectedRestaurantData]);\n  \n  useEffect(() => {\n    hideBackButton();\n    hideMainButton();\n\n    // Проверяем выбран ли город и ресторан\n    if (!selectedCity) {\n      // Если город не выбран, перенаправляем на выбор города\n      navigate('/city-selection', { replace: true });\n    } else if (!selectedRestaurant) {\n      // Если город выбран, но ресторан нет, перенаправляем на выбор ресторана\n      navigate('/restaurant-selection', { replace: true });\n    }\n  }, [hideBackButton, hideMainButton, selectedCity, selectedRestaurant, navigate]);\n  \n  useEffect(() => {\n    if (selectedRestaurant) {\n      // Загружаем меню для выбранного ресторана\n      const loadMenu = async () => {\n        try {\n          const items = await getMenuItems(selectedRestaurant);\n          setMenuItems(items);\n        } catch (error) {\n          console.error(\"Ошибка при загрузке меню:\", error);\n          setMenuItems([]);\n        }\n      };\n      \n      loadMenu();\n    }\n  }, [selectedRestaurant]);\n  \n  const handleExploreMenu = () => {\n    // Скрываем кнопку Telegram перед переходом на страницы выбора\n    hideMainButton();\n    \n    if (!selectedCity) {\n      navigate('/city-selection');\n    } else if (!selectedRestaurant) {\n      navigate('/restaurant-selection');\n    }\n  };\n  \n  const handleStartOver = async () => {\n    try {\n      await setSelectedRestaurant(null);\n      navigate('/restaurant-selection');\n    } catch (error) {\n      console.error('Ошибка при сбросе выбранного ресторана:', error);\n    }\n  };\n  \n  return (\n    <HomeContainer>\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          {!selectedCity || !selectedRestaurant ? (\n            <>\n              <Hero>\n                <HeroImage />\n                <HeroContent>\n                  <HeroTitle>Вкусная еда с доставкой</HeroTitle>\n                  <HeroSubtitle>\n                    Откройте для себя аутентичные вкусы лучших ресторанов\n                  </HeroSubtitle>\n                  <HeroButton onClick={handleExploreMenu}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                      <polyline points=\"12 6 12 12 16 14\"></polyline>\n                    </svg>\n                    Начать\n                  </HeroButton>\n                </HeroContent>\n              </Hero>\n              \n              <EnhancedEmptyState>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                  <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                </svg>\n                <h3>Выберите местоположение</h3>\n                <p>Выберите город и ресторан, чтобы просмотреть меню</p>\n                <HeroButton onClick={handleExploreMenu}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                    <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                  </svg>\n                  Выбрать местоположение\n                </HeroButton>\n              </EnhancedEmptyState>\n            </>\n          ) : (\n            <>\n              <Hero>\n                <HeroImage $bgImage={selectedRestaurantData?.coverImage} />\n                <HeroContent>\n                  <HeroTitle>{selectedRestaurantData?.name}</HeroTitle>\n                  <HeroSubtitle>\n                    Насладитесь лучшей едой в {selectedCity?.name || ''}\n                  </HeroSubtitle>\n                  <HeroButton onClick={handleStartOver}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M11 17l-5-5 5-5\"></path>\n                      <path d=\"M18 17l-5-5 5-5\"></path>\n                    </svg>\n                    Сменить ресторан\n                  </HeroButton>\n                </HeroContent>\n              </Hero>\n              \n              <RestaurantInfo>\n                <RestaurantName>{selectedRestaurantData?.name}</RestaurantName>\n                <RestaurantAdditionalInfo>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                    <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                  </svg>\n                  {selectedCity?.name}, {selectedRestaurantData?.address}\n                </RestaurantAdditionalInfo>\n              </RestaurantInfo>\n              \n              <RestaurantMenu menuItems={menuItems} />\n            </>\n          )}\n        </MainContent>\n      </Container>\n      \n      <CartButton />\n    </HomeContainer>\n  );\n};\n\nexport default React.memo(HomePage); ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Плавающая кнопка корзины в стиле Apple/Nvidia\nconst CartButtonContainer = styled.button`\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 0 4px 16px rgba(var(--primary-color-rgb), 0.4);\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  z-index: 99;\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    stroke-width: 2;\n    transition: transform 0.3s ease;\n  }\n  \n  span {\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    background-color: var(--secondary-color);\n    color: white;\n    font-size: 0.75rem;\n    font-weight: 700;\n    min-width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 4px;\n    border: 2px solid var(--background-color);\n    transform-origin: center;\n    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n  }\n  \n  &:hover {\n    transform: translateY(-4px) scale(1.05);\n    box-shadow: 0 8px 24px rgba(var(--primary-color-rgb), 0.5);\n    \n    svg {\n      transform: scale(1.1);\n    }\n    \n    span {\n      transform: scale(1.1);\n    }\n  }\n  \n  &:active {\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 6px 20px rgba(var(--primary-color-rgb), 0.45);\n  }\n  \n  @media (max-width: 767px) {\n    bottom: 80px;\n    right: 16px;\n    width: 52px;\n    height: 52px;\n  }\n`;\n\n// Анимация появления для количества товаров в корзине\nconst cartItemAppear = `\n  @keyframes cartItemAppear {\n    0% {\n      transform: scale(0);\n      opacity: 0;\n    }\n    50% {\n      transform: scale(1.2);\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n\nconst CartButton: React.FC = () => {\n  const navigate = useNavigate();\n  const { cart } = useAppContext();\n  \n  // Подсчитываем общее количество товаров в корзине\n  const totalItems = cart.reduce((total, item) => total + item.quantity, 0);\n  \n  return (\n    <CartButtonContainer onClick={() => navigate('/cart')}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <circle cx=\"8\" cy=\"21\" r=\"1\"></circle>\n        <circle cx=\"19\" cy=\"21\" r=\"1\"></circle>\n        <path d=\"M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12\"></path>\n      </svg>\n      {totalItems > 0 && <span>{totalItems}</span>}\n      <style>\n        {cartItemAppear}\n      </style>\n    </CartButtonContainer>\n  );\n};\n\nexport default CartButton; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Современный контейнер шапки в стиле Apple/Nvidia\nconst HeaderContainer = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-md) 0;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      transparent,\n      var(--border-color),\n      transparent\n    );\n    opacity: 0.6;\n  }\n`;\n\n// Контейнер логотипа с анимацией\nconst LogoContainer = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n  \n  img {\n    height: 38px;\n    object-fit: contain;\n    \n    @media (max-width: 767px) {\n      height: 32px;\n    }\n  }\n`;\n\n// Анимированная кнопка профиля\nconst ProfileButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-color);\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom right, \n                 rgba(var(--primary-color-rgb), 0.1), \n                 rgba(var(--primary-color-rgb), 0));\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    z-index: -1;\n    border-radius: 50%;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    color: var(--primary-color);\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    svg {\n      stroke-width: 2.2;\n    }\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    transition: all 0.3s ease;\n  }\n`;\n\n// Компонент логотипа с изображением\nconst Logo = styled.img`\n  height: 38px;\n  object-fit: contain;\n  transition: filter 0.3s ease;\n  \n  @media (max-width: 767px) {\n    height: 32px;\n  }\n`;\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n  const { selectedCity, selectedRestaurant } = useAppContext();\n\n  return (\n    <HeaderContainer>\n      <LogoContainer onClick={() => navigate('/')}>\n        <Logo src=\"/assets/images/logo.png\" alt=\"Kulcha\" />\n      </LogoContainer>\n      \n      <ProfileButton onClick={() => navigate('/profile')}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n          <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n        </svg>\n      </ProfileButton>\n    </HeaderContainer>\n  );\n};\n\nexport default Header; "],"names":["NavContainer","styled","nav","NavButton","button","props","active","Navigation","navigate","useNavigate","location","useLocation","selectedCity","selectedRestaurant","restaurants","deliveryMethod","setDeliveryMethod","useAppContext","activeTab","setActiveTab","useState","useEffect","pathname","includes","selectedRestaurantData","find","r","id","_jsxs","children","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_jsx","d","cx","cy","name","disabled","MenuContainer","div","MenuHeader","MenuTitle","h2","FiltersContainer","FilterButton","$active","FoodGrid","FoodCard","ImageContainer","FoodImage","img","FoodDetails","FoodName","h3","FoodDescription","p","FoodPrice","QuantityControl","QuantityButton","QuantityDisplay","span","CartAnimation","AnimatedFoodCard","$delay","AnimatedFoodGrid","AddToCartButton","ConfirmAddButton","HintOverlay","CategoryTag","EmptyState","MENU_FILTERS","icon","CATEGORY_NAMES","normalizeCategory","category","lowerCategory","toLowerCase","handleImageError","e","target","currentTarget","src","classList","add","error","console","warn","SafeImage","memo","_ref","alt","setError","handleError","useCallback","onError","loading","decoding","displayName","RestaurantMenu","_ref2","menuItems","activeFilter","setActiveFilter","addToCart","cart","addedItems","setAddedItems","quantities","setQuantities","animations","setAnimations","isLoading","setIsLoading","itemsInCart","setItemsInCart","selectedItems","setSelectedItems","showHint","setShowHint","inCartMap","forEach","item","timer","setTimeout","clearTimeout","getQuantity","itemId","increaseQuantity","prev","Math","min","decreaseQuantity","max","handleSelectItem","handleConfirmAddToCart","quantity","handleCancelSelection","filteredItems","useMemo","filter","available","handleFilterChange","filterId","loadingComponent","LoadingSpinner","text","menuContent","length","map","index","imageUrl","className","description","price","Intl","NumberFormat","format","_Fragment","points","style","display","justifyContent","marginTop","background","border","color","cursor","fontSize","padding","React","HomeContainer","PageTransition","Hero","HeroContent","HeroImage","$bgImage","HeroTitle","h1","HeroSubtitle","HeroButton","RestaurantInfo","RestaurantName","RestaurantAdditionalInfo","EnhancedEmptyState","HomePage","setSelectedRestaurant","hideBackButton","hideMainButton","useTelegram","setMenuItems","log","coverImage","replace","async","items","getMenuItems","loadMenu","handleExploreMenu","Container","Header","MainContent","address","CartButton","CartButtonContainer","totalItems","reduce","total","HeaderContainer","header","LogoContainer","ProfileButton","Logo"],"sourceRoot":""}