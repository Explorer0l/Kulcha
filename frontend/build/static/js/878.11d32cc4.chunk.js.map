{"version":3,"file":"static/js/878.11d32cc4.chunk.js","mappings":"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","sources":["pages/owner/OwnerMenuPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getMenuItems, MenuItem, updateMenuItem, createMenuItem, deleteMenuItem } from '../../data/adminDatabase';\nimport { useAppContext } from '../../contexts/AppContext';\n\n// Основные стили компонентов\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: sans-serif;\n  background-color: #181818;\n  min-height: 100vh;\n  color: #f1f1f1;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #333;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: -2px;\n    width: 100px;\n    height: 2px;\n    background: linear-gradient(90deg, #FF9F0D, #ffb74d);\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 15px;\n    position: sticky;\n    top: 0;\n    z-index: 100;\n    background-color: #181818;\n    padding-top: 10px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  color: #fff;\n  margin: 0;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 20px;\n    text-align: center;\n    width: 100%;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n  border: none;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 13px;\n    padding: 8px 12px;\n  }\n`;\n\nconst PrimaryButton = styled(Button)`\n  background-color: #FF9F0D;\n  color: white;\n  &:hover {\n    background-color: #f08c00;\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background-color: #232323;\n  color: white;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #181818;\n  }\n`;\n\nconst BackButton = styled(Button)`\n  background-color: transparent;\n  color: white;\n  border: 1px solid #333;\n  padding: 6px 12px;\n  \n  &:hover {\n    background-color: #232323;\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    padding: 5px 10px;\n    z-index: 101;\n  }\n`;\n\n// Добавляем компонент для фильтрации по категориям\nconst CategoryFilters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 25px;\n  background-color: #222;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    white-space: nowrap;\n    overflow-x: auto;\n    flex-wrap: nowrap;\n    padding: 12px 10px;\n    position: sticky;\n    top: 85px;\n    z-index: 99;\n    -ms-overflow-style: none;  /* для Internet Explorer и Edge */\n    scrollbar-width: none;  /* для Firefox */\n    \n    &::-webkit-scrollbar {\n      display: none; /* для Chrome, Safari и Opera */\n    }\n  }\n`;\n\nconst CategoryFilter = styled.button<{ active: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 15px;\n  border-radius: 20px;\n  border: none;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background-color: ${props => props.active ? '#FF9F0D' : '#333'};\n  color: white;\n  font-weight: ${props => props.active ? '600' : '400'};\n  box-shadow: ${props => props.active ? '0 4px 12px rgba(255, 159, 13, 0.3)' : 'none'};\n  \n  &:hover {\n    background-color: ${props => props.active ? '#f08c00' : '#444'};\n    transform: translateY(-2px);\n    box-shadow: ${props => props.active \n      ? '0 6px 14px rgba(255, 159, 13, 0.4)' \n      : '0 4px 10px rgba(0, 0, 0, 0.2)'};\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 6px 12px;\n    font-size: 13px;\n    flex-shrink: 0;\n  }\n`;\n\nconst CategoryIcon = styled.span`\n  font-size: 18px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst MenuGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n    gap: 15px;\n  }\n`;\n\nconst MenuCard = styled.div`\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);\n  background-color: #222;\n  transition: all 0.3s ease;\n  position: relative;\n  border: 1px solid #333;\n  \n  &:hover {\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4), 0 0 15px rgba(255, 159, 13, 0.2);\n    transform: translateY(-5px);\n    border-color: #FF9F0D;\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    &:hover {\n      transform: translateY(-3px);\n    }\n  }\n`;\n\nconst FoodImage = styled.div<{ imageUrl: string }>`\n  height: 200px;\n  background-image: url(${props => props.imageUrl || 'https://via.placeholder.com/400x300/333/555?text=Нет+изображения'});\n  background-size: cover;\n  background-position: center;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    height: 150px;\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: 20px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst FoodName = styled.h3`\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: #fff;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 16px;\n    margin-bottom: 6px;\n  }\n`;\n\nconst FoodPrice = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  color: #FF9F0D;\n  margin-bottom: 8px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 14px;\n    margin-bottom: 6px;\n  }\n`;\n\nconst FoodCategory = styled.div`\n  display: inline-block;\n  padding: 5px 10px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: 500;\n  margin-bottom: 10px;\n  color: white;\n  background-color: ${props => {\n    switch (props.children) {\n      case 'Основное': return '#FF9F0D';\n      case 'Супы': return '#34a853';\n      case 'Закуски': return '#fbbc05';\n      case 'Десерты': return '#ea4335';\n      case 'Напитки': return '#9c27b0';\n      default: return '#888';\n    }\n  }};\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 10px;\n    padding: 4px 8px;\n    margin-bottom: 8px;\n  }\n`;\n\nconst FoodDescription = styled.p`\n  margin: 0 0 15px 0;\n  font-size: 14px;\n  color: #ccc;\n  line-height: 1.5;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 12px;\n    margin-bottom: 12px;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n`;\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  margin-top: auto;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 8px;\n  }\n`;\n\nconst ActionButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  padding: 8px 15px;\n  border-radius: 4px;\n  border: none;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  background-color: #333;\n  color: white;\n  \n  svg {\n    width: 16px;\n    height: 16px;\n  }\n  \n  &:hover {\n    background-color: #444;\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 12px;\n    padding: 6px 12px;\n  }\n`;\n\nconst EditButton = styled(ActionButton)`\n  background-color: #2196f3;\n  \n  &:hover {\n    background-color: #1976d2;\n  }\n`;\n\nconst DeleteButton = styled(ActionButton)`\n  background-color: #f44336;\n  \n  &:hover {\n    background-color: #d32f2f;\n  }\n`;\n\nconst Badge = styled.div<{ isAvailable: boolean }>`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding: 5px 10px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: 600;\n  background-color: ${(props) => (props.isAvailable ? '#4caf50' : '#f44336')};\n  color: white;\n  z-index: 2;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 10px;\n    padding: 4px 8px;\n  }\n`;\n\n// Стили для модального окна\nconst ModalOverlay = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: ${props => props.isOpen ? 'flex' : 'none'};\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background-color: #222;\n  border-radius: 12px;\n  padding: 25px;\n  width: 100%;\n  max-width: 600px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  border: 1px solid #333;\n  max-height: 90vh;\n  overflow-y: auto;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 20px;\n    width: 90%;\n    max-height: 80vh;\n  }\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #333;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n  }\n`;\n\nconst ModalTitle = styled.h2`\n  margin: 0;\n  color: white;\n  font-size: 20px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: #aaa;\n  font-size: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  \n  &:hover {\n    color: white;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    gap: 15px;\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst Label = styled.label`\n  color: #ccc;\n  font-size: 14px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  border-radius: 4px;\n  border: 1px solid #444;\n  background-color: #333;\n  color: white;\n  font-size: 14px;\n  \n  &:focus {\n    outline: none;\n    border-color: #FF9F0D;\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 8px;\n    font-size: 13px;\n  }\n`;\n\nconst Textarea = styled.textarea`\n  padding: 10px;\n  border-radius: 4px;\n  border: 1px solid #444;\n  background-color: #333;\n  color: white;\n  font-size: 14px;\n  min-height: 100px;\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: #FF9F0D;\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 8px;\n    font-size: 13px;\n    min-height: 80px;\n  }\n`;\n\nconst RadioGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    gap: 8px;\n  }\n`;\n\nconst RadioItem = styled.label<{ active: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 14px;\n  background-color: ${props => props.active ? '#FF9F0D' : '#333'};\n  color: white;\n  \n  &:hover {\n    background-color: ${props => props.active ? '#f08c00' : '#444'};\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 6px 10px;\n    font-size: 12px;\n  }\n`;\n\nconst RadioInput = styled.input`\n  display: none;\n`;\n\nconst CategoryLabel = styled.span`\n  margin-left: 5px;\n`;\n\nconst CheckboxGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Checkbox = styled.input`\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n`;\n\nconst SubmitButton = styled.button`\n  padding: 12px;\n  border-radius: 4px;\n  border: none;\n  background-color: #FF9F0D;\n  color: white;\n  font-weight: 600;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover {\n    background-color: #f08c00;\n  }\n  \n  &:disabled {\n    background-color: #666;\n    cursor: not-allowed;\n  }\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 10px;\n    font-size: 14px;\n  }\n`;\n\n// Категории для меню\nconst MENU_CATEGORIES = [\n  { id: 'main', name: 'Основное', icon: '🍲' },\n  { id: 'soups', name: 'Супы', icon: '🥣' },\n  { id: 'appetizers', name: 'Закуски', icon: '🥪' },\n  { id: 'desserts', name: 'Десерты', icon: '🍰' },\n  { id: 'drinks', name: 'Напитки', icon: '🥤' }\n];\n\n// Вспомогательная функция для получения названия категории\nconst getCategoryName = (categoryId: string): string => {\n  if (!categoryId) return 'Основное'; // Если категория не указана, возвращаем дефолтную\n  \n  // Сначала нормализуем категорию\n  const normalizedCategoryId = normalizeCategory(categoryId);\n  \n  // Ищем в массиве категорий\n  const category = MENU_CATEGORIES.find(cat => cat.id === normalizedCategoryId);\n  return category ? category.name : 'Неизвестная категория';\n};\n\n// Нормализация категорий для правильного сохранения\nconst normalizeCategory = (category: string): string => {\n  const lowerCategory = category.toLowerCase();\n  \n  // Соответствие категорий стандартным ID\n  if (['суп', 'супы', 'soup', 'soups'].includes(lowerCategory)) {\n    return 'soups';\n  }\n  if (['основное', 'основные блюда', 'main course', 'main'].includes(lowerCategory)) {\n    return 'main';\n  }\n  if (['закуска', 'закуски', 'appetizer', 'appetizers'].includes(lowerCategory)) {\n    return 'appetizers';\n  }\n  if (['десерт', 'десерты', 'dessert', 'desserts'].includes(lowerCategory)) {\n    return 'desserts';\n  }\n  if (['напиток', 'напитки', 'drink', 'drinks'].includes(lowerCategory)) {\n    return 'drinks';\n  }\n  \n  // По умолчанию возвращаем как есть, если не подходит ни одна из категорий\n  return category;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getCategoryIcon = (categoryId: string): string => {\n  const category = MENU_CATEGORIES.find(cat => cat.id === categoryId);\n  return category ? category.icon : '🍽️';\n};\n\n// Fix the Image preview section for mobile\nconst ImagePreview = styled.div`\n  margin-top: 8px;\n  padding: 12px;\n  border: 1px solid #444;\n  border-radius: 8px;\n  background-color: #282828;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    padding: 10px;\n  }\n`;\n\nconst PreviewImage = styled.img`\n  max-width: 100%;\n  max-height: 200px;\n  display: block;\n  margin: 0 auto;\n  border-radius: 4px;\n  \n  /* Адаптация для Telegram WebApp */\n  @media (max-width: 768px) {\n    max-height: 150px;\n  }\n`;\n\n// Основной компонент страницы\nconst OwnerMenuPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [restaurantId, setRestaurantId] = useState<number | null>(null);\n  \n  // Состояния\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // Более строгая типизация для currentItem\n  const [currentItem, setCurrentItem] = useState<{\n    id?: number;\n    name: string;\n    description: string;\n    price: number;\n    imageUrl: string;\n    imageFile?: File;\n    category: string;\n    available: boolean;\n    restaurantId: number;\n  }>({\n    name: '',\n    description: '',\n    price: 0,\n    imageUrl: '',\n    category: '',\n    available: true,\n    restaurantId: 0\n  });\n  // Добавляем состояние для ошибок, загрузки и успешных операций\n  const [error, setError] = useState<string | null>(null);\n  const [loadingData, setLoadingData] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  \n  // Добавляем состояние для активного фильтра категорий\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  // Добавляем состояния для категорий\n  const [availableCategories, setAvailableCategories] = useState<string[]>([]);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  \n  // Ref для input[type=\"file\"]\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  \n  // Получаем ID ресторана из данных пользователя в localStorage\n  useEffect(() => {\n    const storedUser = localStorage.getItem('adminUser') || localStorage.getItem('currentUser');\n    \n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        if (parsedUser.restaurantId) {\n          console.log('Using restaurant ID from authenticated owner:', parsedUser.restaurantId);\n          setRestaurantId(parsedUser.restaurantId);\n          setCurrentItem(prev => ({\n            ...prev,\n            restaurantId: parsedUser.restaurantId\n          }));\n        } else {\n          console.error('Restaurant ID is missing in user data');\n          navigate('/admin/login');\n        }\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        navigate('/admin/login');\n      }\n    } else {\n      console.error('No authenticated user found');\n      navigate('/admin/login');\n    }\n  }, [navigate]);\n\n  // Загрузка меню при монтировании компонента и изменении restaurantId\n  useEffect(() => {\n    if (restaurantId) {\n      loadMenuItems();\n    }\n  }, [restaurantId]);\n  \n  const loadMenuItems = async () => {\n    if (!restaurantId) {\n      console.error('Cannot load menu: Restaurant ID is missing');\n      return;\n    }\n    \n    setLoadingData(true);\n    setError(null);\n    \n    try {\n      console.log('Loading menu items for restaurant ID:', restaurantId);\n      const items = await getMenuItems(restaurantId);\n      \n      if (!items || !Array.isArray(items)) {\n        throw new Error('Failed to load menu items: Invalid response format');\n      }\n      \n      console.log(`Loaded ${items.length} menu items`);\n      setMenuItems(items);\n      \n      // Извлекаем уникальные категории из полученных элементов меню\n      const categories = Array.from(new Set(items.map(item => item.category)));\n      setAvailableCategories(categories);\n      \n      // Сбрасываем фильтр категорий\n      setSelectedCategory('all');\n    } catch (err) {\n      console.error('Error loading menu items:', err);\n      setError('Не удалось загрузить меню. Пожалуйста, попробуйте позже.');\n    } finally {\n      setLoadingData(false);\n    }\n  };\n  \n  // Add beforeunload handler to prevent accidental navigation when modal is open\n  useEffect(() => {\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n      if (isModalOpen) {\n        e.preventDefault();\n        e.returnValue = '';\n        return '';\n      }\n    };\n    \n    window.addEventListener('beforeunload', handleBeforeUnload);\n    \n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isModalOpen]);\n  \n  // Интеграция с Telegram WebApp\n  useEffect(() => {\n    // Безопасная проверка наличия Telegram WebApp API\n    const telegram = window.Telegram;\n    const telegramWebApp = telegram && telegram.WebApp;\n    \n    if (telegramWebApp) {\n      try {\n        // Базовые функции, которые должны поддерживаться всеми версиями WebApp\n        telegramWebApp.expand();\n        telegramWebApp.BackButton.show();\n        telegramWebApp.BackButton.onClick(() => navigate('/owner/statistics'));\n        \n        // Дополнительные функции, проверяем их наличие перед вызовом\n        // @ts-ignore - игнорируем проблемы типизации для методов WebApp API\n        if (typeof telegramWebApp.enableClosingConfirmation === 'function') {\n          // @ts-ignore\n          telegramWebApp.enableClosingConfirmation();\n        }\n        \n        // @ts-ignore\n        if (typeof telegramWebApp.setHeaderColor === 'function') {\n          // @ts-ignore\n          telegramWebApp.setHeaderColor('#FF9F0D');\n        }\n        \n        return () => {\n          // Очистка при размонтировании\n          telegramWebApp.BackButton.onClick(() => {}); // Сбрасываем обработчик\n          \n          // @ts-ignore\n          if (typeof telegramWebApp.disableClosingConfirmation === 'function') {\n            // @ts-ignore\n            telegramWebApp.disableClosingConfirmation();\n          }\n        };\n      } catch (error) {\n        console.error('Error setting up Telegram WebApp:', error);\n      }\n    }\n  }, [navigate]);\n  \n  // Обработчики событий\n  const handleStatsClick = () => {\n    navigate('/owner/statistics');\n  };\n  \n  const handleBackClick = () => {\n    navigate('/owner/statistics');\n  };\n  \n  const handleProfileClick = () => {\n    navigate('/owner/profile');\n  };\n  \n  const handleAddClick = () => {\n    setCurrentItem({\n      name: '',\n      description: '',\n      price: 0,\n      imageUrl: '',\n      category: '',\n      available: true,\n      restaurantId: restaurantId || 0\n    });\n    setIsModalOpen(true);\n  };\n  \n  const handleEditClick = (item: MenuItem) => {\n    // Make sure to clean up any previous object URLs\n    if (currentItem.imageUrl && currentItem.imageUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(currentItem.imageUrl);\n    }\n    \n    // Set the current item with imageFile as undefined (since we're loading existing item)\n    setCurrentItem({ \n      id: item.id,\n      name: item.name,\n      description: item.description || '',\n      price: item.price,\n      category: item.category || 'main',\n      imageUrl: item.imageUrl || '',\n      available: item.available !== undefined ? item.available : true,\n      restaurantId: item.restaurantId,\n      imageFile: undefined // Clear any previous files since we're loading from server\n    });\n    setIsModalOpen(true);\n  };\n  \n  const handleDeleteClick = async (id: number) => {\n    if (window.confirm('Вы уверены, что хотите удалить это блюдо?')) {\n      try {\n        await deleteMenuItem(id);\n        setMenuItems(prev => prev.filter(item => item.id !== id));\n      } catch (error) {\n        console.error('Ошибка при удалении блюда:', error);\n        alert('Не удалось удалить блюдо');\n      }\n    }\n  };\n  \n  const handleCloseModal = () => {\n    // Revoke object URLs to avoid memory leaks\n    if (currentItem.imageUrl && currentItem.imageUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(currentItem.imageUrl);\n    }\n    \n    // Reset the form\n    setCurrentItem({\n      name: '',\n      description: '',\n      price: 0,\n      imageUrl: '',\n      category: '',\n      available: true,\n      restaurantId: restaurantId || 0\n    });\n    \n    // Reset error states\n    setSubmitError(null);\n    setSuccessMessage(null);\n    \n    // Close the modal\n    setIsModalOpen(false);\n  };\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.target;\n    \n    if (type === 'number') {\n      const numValue = value === '' ? 0 : parseFloat(value);\n      setCurrentItem(prev => ({ ...prev, [name]: numValue }));\n    } else {\n      setCurrentItem(prev => ({ ...prev, [name]: value }));\n    }\n  };\n  \n  const handleCategoryChange = (categoryId: string) => {\n    setCurrentItem(prev => ({ ...prev, category: categoryId }));\n  };\n  \n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    setCurrentItem(prev => ({ ...prev, [name]: checked }));\n  };\n  \n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      // Store the file object for FormData upload\n      setCurrentItem(prev => ({\n        ...prev,\n        imageFile: file,\n        // Still create a preview URL for display purposes\n        imageUrl: URL.createObjectURL(file)\n      }));\n    }\n  };\n  \n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    setSubmitError(null);\n    \n    // Validate required fields\n    if (!currentItem.name || !currentItem.price || !currentItem.category) {\n      setSubmitError('Пожалуйста, заполните все обязательные поля');\n      setIsSubmitting(false);\n      return;\n    }\n    \n    // Нормализуем категорию перед сохранением\n    const normalizedItem = {\n      ...currentItem,\n      category: normalizeCategory(currentItem.category || 'main') // Гарантируем, что category не undefined\n    };\n    \n    console.log('Submitting menu item with normalized category:', normalizedItem);\n    \n    try {\n      let result;\n      if (normalizedItem.id) {\n        // Update existing item - use as MenuItem with type assertion since we validated required fields\n        result = await updateMenuItem(normalizedItem as MenuItem);\n      } else {\n        // Create new item - provide all required fields for a new MenuItem\n        result = await createMenuItem({\n          id: -1, // Temporary ID that will be replaced by the backend\n          restaurantId: restaurantId || 0,\n          name: normalizedItem.name || '', // Гарантируем строку, не undefined\n          description: normalizedItem.description || '',\n          price: normalizedItem.price || 0,\n          category: normalizedItem.category || 'main', // Гарантируем строку, не undefined\n          imageUrl: normalizedItem.imageUrl || '',\n          imageFile: normalizedItem.imageFile, // Pass the file to the API function\n          available: normalizedItem.available !== undefined ? normalizedItem.available : true\n        });\n      }\n      \n      if (result) {\n        setSuccessMessage(normalizedItem.id ? 'Пункт меню успешно обновлен!' : 'Новый пункт меню успешно создан!');\n        \n        // Reset form and update menu items list\n        setCurrentItem({\n          name: '',\n          description: '',\n          price: 0,\n          imageUrl: '',\n          category: '',\n          available: true,\n          restaurantId: restaurantId || 0\n        });\n        setIsModalOpen(false);\n        \n        // Reload menu items\n        loadMenuItems();\n      } else {\n        setSubmitError(normalizedItem.id ? 'Ошибка при обновлении пункта меню' : 'Ошибка при создании пункта меню');\n      }\n    } catch (error) {\n      console.error('Error submitting menu item:', error);\n      setSubmitError('Произошла ошибка при обработке запроса');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Фильтруем элементы по выбранной категории\n  const filteredMenuItems = useMemo(() => {\n    if (!activeCategory) {\n      return menuItems;\n    }\n    \n    return menuItems.filter(item => {\n      // Нормализуем категорию элемента перед сравнением\n      const normalizedItemCategory = normalizeCategory(item.category);\n      \n      // Сравниваем нормализованную категорию с выбранным фильтром\n      return normalizedItemCategory === activeCategory;\n    });\n  }, [menuItems, activeCategory]);\n  \n  return (\n    <Container>\n      <Header>\n        <BackButton onClick={handleBackClick}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <path d=\"M15 18l-6-6 6-6\"/>\n          </svg>\n          Назад\n        </BackButton>\n        \n        <Title>Управление меню</Title>\n        \n        <ButtonGroup>\n          <SecondaryButton onClick={handleProfileClick}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M17 3a2.83 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3Z\"/>\n            </svg>\n            Профиль ресторана\n          </SecondaryButton>\n          \n          <SecondaryButton onClick={handleStatsClick}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"></path>\n              <path d=\"M22 12A10 10 0 0 0 12 2v10z\"></path>\n            </svg>\n            Статистика\n          </SecondaryButton>\n          \n          <PrimaryButton onClick={handleAddClick}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M12 5v14M5 12h14\"/>\n            </svg>\n            Добавить блюдо\n          </PrimaryButton>\n        </ButtonGroup>\n      </Header>\n      \n      {/* Фильтры категорий */}\n      <CategoryFilters>\n        <CategoryFilter \n          active={activeCategory === null} \n          onClick={() => setActiveCategory(null)}\n        >\n          <CategoryIcon>🍽️</CategoryIcon> Все категории\n        </CategoryFilter>\n        {MENU_CATEGORIES.map(category => (\n          <CategoryFilter \n            key={category.id}\n            active={activeCategory === category.id}\n            onClick={() => setActiveCategory(category.id)}\n          >\n            <CategoryIcon>{category.icon}</CategoryIcon> {category.name}\n          </CategoryFilter>\n        ))}\n      </CategoryFilters>\n      \n      {filteredMenuItems.length > 0 ? (\n        <MenuGrid>\n          {filteredMenuItems.map(item => (\n            <MenuCard key={item.id}>\n              <Badge isAvailable={item.available ?? false}>\n                {item.available ? 'Доступно' : 'Недоступно'}\n              </Badge>\n              <FoodImage imageUrl={item.imageUrl} />\n              <CardContent>\n                <FoodName>{item.name}</FoodName>\n                <FoodPrice>₽{item.price.toLocaleString('ru-RU')}</FoodPrice>\n                <FoodCategory>{getCategoryName(item.category)}</FoodCategory>\n                <FoodDescription>{item.description}</FoodDescription>\n                <CardActions>\n                  <EditButton onClick={() => handleEditClick(item)}>\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n                      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n                    </svg>\n                    Изменить\n                  </EditButton>\n                  <DeleteButton onClick={() => handleDeleteClick(item.id)}>\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <path d=\"M3 6h18\" />\n                      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n                      <path d=\"M10 11v6\" />\n                      <path d=\"M14 11v6\" />\n                    </svg>\n                    Удалить\n                  </DeleteButton>\n                </CardActions>\n              </CardContent>\n            </MenuCard>\n          ))}\n        </MenuGrid>\n      ) : (\n        <div style={{ \n          textAlign: 'center', \n          padding: '40px 0', \n          backgroundColor: '#222', \n          borderRadius: '12px', \n          boxShadow: '0 4px 15px rgba(0, 0, 0, 0.2)',\n          color: '#ccc',\n          border: '1px solid #333'\n        }}>\n          {activeCategory ? (\n            <p>В категории {getCategoryName(activeCategory)} пока нет блюд. <br />Добавьте новое блюдо в эту категорию.</p>\n          ) : (\n            <p>В меню пока нет блюд. Добавьте новое блюдо, чтобы оно появилось здесь.</p>\n          )}\n        </div>\n      )}\n      \n      {/* Модальное окно для добавления/редактирования блюда */}\n      <ModalOverlay isOpen={isModalOpen}>\n        <ModalContent>\n          <ModalHeader>\n            <ModalTitle>{currentItem.id ? 'Редактировать блюдо' : 'Добавить новое блюдо'}</ModalTitle>\n            <CloseButton onClick={handleCloseModal}>&times;</CloseButton>\n          </ModalHeader>\n          \n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label htmlFor=\"name\">Название блюда</Label>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                value={currentItem.name || ''}\n                onChange={handleInputChange}\n                placeholder=\"Введите название блюда\"\n                required\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"description\">Описание</Label>\n              <Textarea\n                id=\"description\"\n                name=\"description\"\n                value={currentItem.description || ''}\n                onChange={handleInputChange}\n                placeholder=\"Введите описание блюда\"\n                required\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"price\">Цена (₽)</Label>\n              <Input\n                id=\"price\"\n                name=\"price\"\n                type=\"number\"\n                min=\"1\"\n                step=\"1\"\n                value={currentItem.price || ''}\n                onChange={handleInputChange}\n                placeholder=\"Введите цену\"\n                required\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <Label>Категория</Label>\n              <RadioGroup>\n                {MENU_CATEGORIES.map(category => (\n                  <RadioItem \n                    key={category.id} \n                    active={currentItem.category === category.id}\n                  >\n                    <RadioInput\n                      type=\"radio\"\n                      name=\"categoryGroup\"\n                      value={category.id}\n                      checked={currentItem.category === category.id}\n                      onChange={() => handleCategoryChange(category.id)}\n                    />\n                    <CategoryIcon style={{ marginRight: '10px' }}>{category.icon}</CategoryIcon>\n                    <CategoryLabel>{category.name}</CategoryLabel>\n                  </RadioItem>\n                ))}\n              </RadioGroup>\n            </FormGroup>\n            \n            <FormGroup>\n              <Label htmlFor=\"imageFile\">Изображение</Label>\n              <Input\n                id=\"imageFile\"\n                name=\"imageFile\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleFileChange}\n                ref={fileInputRef}\n              />\n              \n              {currentItem.imageUrl && (\n                <ImagePreview>\n                  <PreviewImage \n                    src={currentItem.imageUrl} \n                    alt=\"Предпросмотр\" \n                    onError={(e) => {\n                      (e.target as HTMLImageElement).src = 'https://via.placeholder.com/400x300/333/555?text=Ошибка+загрузки';\n                    }}\n                  />\n                </ImagePreview>\n              )}\n            </FormGroup>\n            \n            <CheckboxGroup>\n              <Input\n                id=\"available\"\n                name=\"available\"\n                type=\"checkbox\"\n                checked={currentItem.available === undefined ? true : currentItem.available}\n                onChange={handleCheckboxChange}\n                style={{ width: 'auto' }}\n              />\n              <Label htmlFor=\"available\" style={{ fontWeight: 'normal' }}>Доступно для заказа</Label>\n            </CheckboxGroup>\n            \n            <SubmitButton type=\"submit\" disabled={!currentItem.name?.trim() || !currentItem.category || !currentItem.price || currentItem.price <= 0}>\n              {currentItem.id ? 'Сохранить изменения' : 'Добавить блюдо'}\n            </SubmitButton>\n          </Form>\n        </ModalContent>\n      </ModalOverlay>\n    </Container>\n  );\n};\n\nexport default OwnerMenuPage; "],"names":["Container","styled","div","Header","header","Title","h1","ButtonGroup","Button","button","PrimaryButton","SecondaryButton","BackButton","CategoryFilters","CategoryFilter","props","active","CategoryIcon","span","MenuGrid","MenuCard","FoodImage","imageUrl","CardContent","FoodName","h3","FoodPrice","FoodCategory","children","FoodDescription","p","CardActions","ActionButton","EditButton","DeleteButton","Badge","isAvailable","ModalOverlay","isOpen","ModalContent","ModalHeader","ModalTitle","h2","CloseButton","Form","form","FormGroup","Label","label","Input","input","Textarea","textarea","RadioGroup","RadioItem","RadioInput","CategoryLabel","CheckboxGroup","SubmitButton","MENU_CATEGORIES","id","name","icon","getCategoryName","categoryId","normalizedCategoryId","normalizeCategory","category","find","cat","lowerCategory","toLowerCase","includes","ImagePreview","PreviewImage","img","OwnerMenuPage","_currentItem$name","navigate","useNavigate","restaurantId","setRestaurantId","useState","menuItems","setMenuItems","isModalOpen","setIsModalOpen","currentItem","setCurrentItem","description","price","available","error","setError","loadingData","setLoadingData","isSubmitting","setIsSubmitting","submitError","setSubmitError","successMessage","setSuccessMessage","activeCategory","setActiveCategory","availableCategories","setAvailableCategories","selectedCategory","setSelectedCategory","fileInputRef","useRef","useEffect","storedUser","localStorage","getItem","parsedUser","JSON","parse","console","log","prev","loadMenuItems","async","items","getMenuItems","Array","isArray","Error","length","categories","from","Set","map","item","err","handleBeforeUnload","e","preventDefault","returnValue","window","addEventListener","removeEventListener","telegram","Telegram","telegramWebApp","WebApp","expand","show","onClick","enableClosingConfirmation","setHeaderColor","disableClosingConfirmation","handleInputChange","value","type","target","numValue","parseFloat","filteredMenuItems","useMemo","filter","_jsxs","handleBackClick","_jsx","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","handleProfileClick","handleStatsClick","handleAddClick","_item$available","toLocaleString","startsWith","URL","revokeObjectURL","undefined","imageFile","handleEditClick","confirm","deleteMenuItem","alert","handleDeleteClick","style","textAlign","padding","backgroundColor","borderRadius","boxShadow","color","border","handleCloseModal","onSubmit","event","normalizedItem","result","updateMenuItem","createMenuItem","htmlFor","onChange","placeholder","required","min","step","checked","handleCategoryChange","marginRight","accept","_event$target$files","file","files","createObjectURL","ref","src","alt","onError","fontWeight","disabled","trim"],"sourceRoot":""}