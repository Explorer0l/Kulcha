{"version":3,"file":"static/js/718.8e097d4e.chunk.js","mappings":"6LAOA,MAAMA,EAAgBC,EAAAA,GAAOC,GAAG;;;;;EAO1BC,EAASF,EAAAA,GAAOC,GAAG;;;;;;;EASnBE,EAAYH,EAAAA,GAAOI,EAAE;;;;EAMrBC,EAAOL,EAAAA,GAAOC,GAAG;;;;;;EAQjBK,EAAYN,EAAAA,GAAOO,EAAE;;;;;;;;;;;EAarBC,EAAYR,EAAAA,GAAOC,GAAG;;EAItBQ,EAAQT,EAAAA,GAAOU,KAAK;;;;EAMpBC,EAAQX,EAAAA,GAAOY,KAAK;;;;;;;;;;;;;;;;;;;EAqBpBC,EAAWb,EAAAA,GAAOc,QAAQ;;;;;;;;;;;;;;;;EAkB1BC,EAASf,EAAAA,GAAOgB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BtBC,GAAajB,EAAAA,EAAAA,IAAOe,EAAO;;;;;;;;;;EAY3BG,EAAclB,EAAAA,GAAOC,GAAG;;;;EAMxBkB,EAAuBnB,EAAAA,GAAOC,GAAG;;EAIjCmB,EAAapB,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;EAqBvBoB,EAAcrB,EAAAA,GAAOY,KAAK;;EA0C1BU,GAtCetB,EAAAA,GAAOC,GAAG;;;;;;;EASVD,EAAAA,GAAOuB,GAAG;;;;;EAOVvB,EAAAA,GAAOgB,MAAM;;;;;;;;;;;;;;;;;;;;EAsBbhB,EAAAA,GAAOC,GAAG;;;;;;;GASzBuB,EAAiBxB,EAAAA,GAAOC,GAAG;;;;;;;EAS3BwB,EAAyBzB,EAAAA,GAAO0B,CAAC;;;;EAMjCC,EAAwB3B,EAAAA,GAAOC,GAAG;;;;EAMlC2B,EAAY5B,EAAAA,GAAOgB,MAA2B;;;;WAIzCa,GAASA,EAAMC,OAAS,UAAY;iBAC9BD,GAASA,EAAMC,OAAS,MAAQ;6BACpBD,GAASA,EAAMC,OAAS,UAAY;;;;;;;EAS3DC,EAAmB/B,EAAAA,GAAOC,GAAG;;;;;EAO7B+B,EAAgBhC,EAAAA,GAAOC,GAAG;;;;;;;;EAW1BgC,EAAgBjC,EAAAA,GAAOC,GAAG;;;;;;;;;;EAa1BiC,EAAiBlC,EAAAA,GAAOC,GAAG;;;;;;;;;;;EA8hBjC,EAzgBmCkC,KACjC,MAAMC,GAAWC,EAAAA,EAAAA,OACX,sBAAEC,IAA0BC,EAAAA,EAAAA,OAC3BC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAqC,OAC1EC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAsB,OACjDK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAwB,OACzDO,EAAOC,IAAYR,EAAAA,EAAAA,UAAwB,OAC3CS,EAASC,IAAcV,EAAAA,EAAAA,UAAwB,OAC/CW,EAAUC,IAAeZ,EAAAA,EAAAA,WAAS,IAClCa,EAAeC,IAAoBd,EAAAA,EAAAA,UAA+B,YAClEe,EAAYC,IAAiBhB,EAAAA,EAAAA,WAAS,GAEvCiB,GAAeC,EAAAA,EAAAA,QAAyB,OAG9CC,EAAAA,EAAAA,YAAU,KACUC,WAChB,MAAMC,EAAaC,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,eACvEC,EAAkBF,aAAaC,QAAQ,mBACvCE,EAAWH,aAAaC,QAAQ,YAEtC,GAAIF,GAAkC,SAApBG,GAA2C,UAAbC,EAC9C,IACE,MAAMC,EAAaC,KAAKC,MAAMP,GAGxBQ,QAAmBC,EAAAA,EAAAA,IAAkBJ,EAAWK,cAClDF,GACF9B,EAAkB8B,IAGdA,EAAWG,YAAcH,EAAWI,cACtC3B,EAAgBuB,EAAWG,YAAcH,EAAWI,aAAe,KAGrEzB,EAAS,kCAEb,CAAE,MAAOD,GACP2B,QAAQ3B,MAAM,kCAAmCA,GACjDC,EAAS,mDACX,MAEAd,EAAS,gBAGXQ,GAAW,EAAM,EAGnBiC,EAAW,GACV,CAACzC,IAGJ,MASM0C,EAAuBC,IAG3B,IADmB,CAAC,aAAc,YAAa,cAC/BC,SAASD,EAAKE,MAE5B,YADA/B,EAAS,yDAMX,GAAI6B,EAAKG,KADO,QAGd,YADAhC,EAAS,sCAIXA,EAAS,MACTJ,EAAaiC,GAGb,MAAMI,EAAaC,IAAIC,gBAAgBN,GACvC/B,EAAgBmC,EAAW,EAuDvBG,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAE1BjD,GAAkBkD,GACXA,EACE,IAAKA,EAAM,CAACH,GAAOC,GADRE,GAElB,EA+EJ,OACEC,EAAAA,EAAAA,MAAC7F,EAAa,CAAA8F,SAAA,EACZC,EAAAA,EAAAA,KAAC5F,EAAM,CAAA2F,UACLC,EAAAA,EAAAA,KAAC3F,EAAS,CAAA0F,SAAC,yBAGZlD,GACCmD,EAAAA,EAAAA,KAACzF,EAAI,CAAAwF,UACHC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,QAAS,UAAWJ,UACrDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oCAIPD,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAL,SAAA,CACG5C,IAAS6C,EAAAA,EAAAA,KAACxE,EAAY,CAAAuE,SAAE5C,IACxBE,IAAW2C,EAAAA,EAAAA,KAACtE,EAAc,CAAAqE,SAAE1C,KAE7ByC,EAAAA,EAAAA,MAAA,QAAMO,SA5FOrC,UAGnB,GAFAyB,EAAEa,iBAEG5D,EAAL,CAEAc,GAAY,GACZJ,EAAS,MACTE,EAAW,MAEX,IAEE,MAAMiD,EAA2C,CAC/Cb,KAAMhD,EAAegD,KACrBc,YAAa9D,EAAe8D,YAC5BC,QAAS/D,EAAe+D,SAI1B,GAAI1D,EAAW,CAab,MAAM2D,EAAS,IAAIC,WACnBD,EAAOE,cAAc7D,SAEf,IAAI8D,SAAeC,IACvBJ,EAAOK,UAAY,KACY,kBAAlBL,EAAOM,SAChBT,EAAW3B,WAAa8B,EAAOM,OAC/BF,IACF,CACD,GAEL,MAA4B,OAAjB7D,IAETsD,EAAW3B,WAAa,IAI1B,MAAMqC,QAA0BC,EAAAA,EAAAA,IAAqBxE,EAAeyE,GAAIZ,GAEpEU,GACFtE,EAAkBsE,GAClB3D,EAAW,iDAGLd,EAAsBE,EAAeyE,IAGvClE,GAAgBA,EAAamE,WAAW,WAC1C9B,IAAI+B,gBAAgBpE,GAGpBC,EAAgB+D,EAAkBrC,YAAcqC,EAAkBpC,aAAe,QAGnFzB,EAAS,sCAEb,CAAE,MAAOD,GACP2B,QAAQ3B,MAAM,kCAAmCA,GACjDC,EAAS,sDACX,CAAC,QACCI,GAAY,EACd,CArE2B,CAqE3B,EAoBmCuC,SAAA,EAC3BD,EAAAA,EAAAA,MAACvF,EAAI,CAAAwF,SAAA,EACHD,EAAAA,EAAAA,MAACtF,EAAS,CAAAuF,SAAA,EACRD,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAO/B,SAAA,EAC/KC,EAAAA,EAAAA,KAAA,UAAQ+B,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAC1BjC,EAAAA,EAAAA,KAAA,QAAMkC,EAAE,aACRlC,EAAAA,EAAAA,KAAA,QAAMkC,EAAE,eACJ,wBAIRpC,EAAAA,EAAAA,MAACpF,EAAS,CAAAqF,SAAA,EACRC,EAAAA,EAAAA,KAACrF,EAAK,CAACwH,QAAQ,OAAMpC,SAAC,qBACtBC,EAAAA,EAAAA,KAACnF,EAAK,CACJsE,KAAK,OACLgC,GAAG,OACHzB,KAAK,OACLC,OAAqB,OAAdjD,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,OAAQ,GAC/B0C,SAAU5C,EACV6C,UAAQ,QAIZvC,EAAAA,EAAAA,MAACpF,EAAS,CAAAqF,SAAA,EACRC,EAAAA,EAAAA,KAACrF,EAAK,CAACwH,QAAQ,UAASpC,SAAC,aACzBC,EAAAA,EAAAA,KAACnF,EAAK,CACJsE,KAAK,OACLgC,GAAG,UACHzB,KAAK,UACLC,OAAqB,OAAdjD,QAAc,IAAdA,OAAc,EAAdA,EAAgB+D,UAAW,GAClC2B,SAAU5C,EACV6C,UAAQ,QAIZvC,EAAAA,EAAAA,MAACpF,EAAS,CAAAqF,SAAA,EACRC,EAAAA,EAAAA,KAACrF,EAAK,CAACwH,QAAQ,cAAapC,SAAC,iBAC7BC,EAAAA,EAAAA,KAACjF,EAAQ,CACPoG,GAAG,cACHzB,KAAK,cACLC,OAAqB,OAAdjD,QAAc,IAAdA,OAAc,EAAdA,EAAgB8D,cAAe,GACtC4B,SAAU5C,EACV6C,UAAQ,WAKdvC,EAAAA,EAAAA,MAACvF,EAAI,CAAAwF,SAAA,EACHD,EAAAA,EAAAA,MAACtF,EAAS,CAAAuF,SAAA,EACRD,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAO/B,SAAA,EAC/KC,EAAAA,EAAAA,KAAA,QAAMsC,EAAE,IAAIC,EAAE,IAAIhB,MAAM,KAAKC,OAAO,KAAKgB,GAAG,IAAIC,GAAG,OACnDzC,EAAAA,EAAAA,KAAA,UAAQ+B,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAC5BjC,EAAAA,EAAAA,KAAA,YAAU0C,OAAO,wBACb,iBAIR5C,EAAAA,EAAAA,MAACzE,EAAoB,CAAA0E,SAAA,EACnBD,EAAAA,EAAAA,MAACxE,EAAU,CACTqH,QApNUC,KACpB/E,EAAagF,SACfhF,EAAagF,QAAQC,OACvB,EAkNcC,YA9MStD,IACvBA,EAAEa,iBACFb,EAAEuD,kBACFpF,GAAc,EAAK,EA4MLqF,YAzMSxD,IACvBA,EAAEa,iBACFb,EAAEuD,kBACFpF,GAAc,EAAM,EAuMNsF,WApMQzD,IACtBA,EAAEa,iBACFb,EAAEuD,iBAAiB,EAmMLG,OAhMI1D,IAClBA,EAAEa,iBACFb,EAAEuD,kBACFpF,GAAc,GAEd,MAAMwF,EAAQ3D,EAAE4D,aAAaD,MACzBA,GAASA,EAAME,OAAS,GAC1BtE,EAAoBoE,EAAM,GAC5B,EAyLcG,UAAW5F,EAAa,WAAa,GAAGoC,SAAA,EAExCD,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAO/B,SAAA,EAC1KC,EAAAA,EAAAA,KAAA,QAAMkC,EAAE,+CACRlC,EAAAA,EAAAA,KAAA,YAAU0C,OAAO,mBACjB1C,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,WAElC3D,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mDACHC,EAAAA,EAAAA,KAACzE,EAAW,CACV4D,KAAK,OACLyE,IAAK/F,EACLuE,SArQQyB,IACxB,MAAMT,EAAQS,EAAMjE,OAAOwD,MAC3B,GAAIA,GAASA,EAAME,OAAS,EAAG,CAC7B,MAAMrE,EAAOmE,EAAM,GACnBpE,EAAoBC,EACtB,GAiQgB6E,OAAO,wCAIX9D,EAAAA,EAAAA,KAACrE,EAAsB,CAAAoE,SAAC,uDAIvB9C,IACC6C,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAL,SAAA,EACED,EAAAA,EAAAA,MAACjE,EAAqB,CAAAkE,SAAA,EACpBC,EAAAA,EAAAA,KAAClE,EAAS,CACRE,OAA0B,YAAlByB,EACRkF,QAASA,IAAMjF,EAAiB,WAAWqC,SAC5C,aAGDC,EAAAA,EAAAA,KAAClE,EAAS,CACRE,OAA0B,WAAlByB,EACRkF,QAASA,IAAMjF,EAAiB,UAAUqC,SAC3C,eAKHD,EAAAA,EAAAA,MAAC7D,EAAgB,CAAA8D,SAAA,EACfC,EAAAA,EAAAA,KAAC9D,EAAa,CAAA6D,SACO,YAAlBtC,EAA8B,kBAAoB,sCAGlC,YAAlBA,GACCuC,EAAAA,EAAAA,KAAC5D,EAAc,CAAA2D,UACbD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACV8D,SAAU,WACVxC,MAAO,OACPC,OAAQ,QACRwC,SAAU,SACVC,aAAc,OACdlE,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACV8D,SAAU,WACVG,IAAK,EACLC,KAAM,EACN5C,MAAO,OACPC,OAAQ,OACR4C,gBAAiB,OAAOnH,KACxBoH,eAAgB,QAChBC,mBAAoB,SACpBC,OAAQ,qCAEVzE,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACV8D,SAAU,WACVG,IAAK,EACLC,KAAM,EACN5C,MAAO,OACPC,OAAQ,OACRgD,WAAY,qGACZC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBxE,QAAS,OACTyE,MAAO,SACP7E,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAE4E,SAAU,SAAUC,WAAY,IAAKC,aAAc,QAAShF,UACxD,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,OAAQ,qBAE3BM,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAE4E,SAAU,SAAUE,aAAc,OAAQC,SAAU,OAAQjF,SAAC,iCAGzEC,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CACbgF,gBAAiB,UACjBL,MAAO,QACPM,OAAQ,OACR/E,QAAS,YACT8D,aAAc,MACda,WAAY,IACZvD,MAAO,eACPxB,SAAC,yBAOTD,EAAAA,EAAAA,MAAC3D,EAAa,CAAA4D,SAAA,EACZD,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACV8D,SAAU,WACVxC,MAAO,OACPC,OAAQ,QACRwC,SAAU,UACVjE,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACV8D,SAAU,WACVG,IAAK,EACLC,KAAM,EACN5C,MAAO,OACPC,OAAQ,OACR4C,gBAAiB,OAAOnH,KACxBoH,eAAgB,QAChBC,mBAAoB,SACpBC,OAAQ,qCAEVzE,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CACV8D,SAAU,WACVG,IAAK,EACLC,KAAM,EACN5C,MAAO,OACPC,OAAQ,OACRgD,WAAY,qGACZC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBxE,QAAS,OACTyE,MAAO,SACP7E,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAE4E,SAAU,SAAUC,WAAY,IAAKC,aAAc,OAAQhF,UACvD,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,OAAQ,qBAE3BM,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAE4E,SAAU,OAAQE,aAAc,QAAShF,SAAC,iCAGtDC,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CACbgF,gBAAiB,UACjBL,MAAO,QACPM,OAAQ,OACR/E,QAAS,WACT8D,aAAc,MACda,WAAY,IACZvD,MAAO,eACPxB,SAAC,uBAMPC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVE,QAAS,OACT8E,gBAAiB,UACjBL,MAAO,UACPC,SAAU,UACV9E,UACAC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sCAMXC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEwE,QAAS,OAAQE,eAAgB,SAAUQ,UAAW,QAASpF,UAC3ED,EAAAA,EAAAA,MAAC7E,EAAM,CAACkE,KAAK,SAASwD,QArVhByC,KACpBnI,GAAgBA,EAAamE,WAAW,UAC1C9B,IAAI+B,gBAAgBpE,GAGtBC,EAAgB,MAChBF,EAAa,MAGTa,EAAagF,UACfhF,EAAagF,QAAQlD,MAAQ,GAC/B,EA0UmEI,SAAA,EAC/CD,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAO/B,SAAA,EAC/KC,EAAAA,EAAAA,KAAA,YAAU0C,OAAO,kBACjB1C,EAAAA,EAAAA,KAAA,QAAMkC,EAAE,8CACRlC,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,UAC7B,8BASlB7D,EAAAA,EAAAA,MAAC1E,EAAW,CAAA2E,SAAA,EACVD,EAAAA,EAAAA,MAAC3E,EAAU,CAACgE,KAAK,SAASwD,QAASA,IAAMrG,EAAS,qBAAqByD,SAAA,EACrED,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAO/B,SAAA,EAC/KC,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAChC3D,EAAAA,EAAAA,KAAA,YAAU0C,OAAO,uBACb,WAIR1C,EAAAA,EAAAA,KAAC/E,EAAM,CAACkE,KAAK,SAASkG,SAAU9H,EAASwC,SACtCxC,GACCuC,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAL,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAQ7B,MAAO,CAAEqF,UAAW,2BAA4BvF,SAAA,EAChOC,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,UACvC3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,QAAQC,GAAG,QAAQC,GAAG,QAAQC,GAAG,WAC1C3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAC/B3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,OAAOC,GAAG,QAAQC,GAAG,OAAOC,GAAG,WACxC3D,EAAAA,EAAAA,KAAA,QAAMwD,GAAG,QAAQC,GAAG,OAAOC,GAAG,QAAQC,GAAG,YACrC,gBAIR7D,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAL,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAO/B,SAAA,EAC/KC,EAAAA,EAAAA,KAAA,QAAMkC,EAAE,qEACRlC,EAAAA,EAAAA,KAAA,YAAU0C,OAAO,2BACjB1C,EAAAA,EAAAA,KAAA,YAAU0C,OAAO,oBACb,+BASN,C","sources":["pages/owner/OwnerProfilePage.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { getRestaurantData, updateRestaurantData, RestaurantAdminData } from '../../data/adminDatabase';\r\nimport { useAppContext } from '../../contexts/AppContext';\r\n\r\n// Styled components\r\nconst PageContainer = styled.div`\r\n  padding: 20px;\r\n  background-color: #1e1e1e;\r\n  min-height: 100vh;\r\n  color: #f8f9fa;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n  padding-bottom: 16px;\r\n  border-bottom: 1px solid #2d2d2d;\r\n`;\r\n\r\nconst PageTitle = styled.h1`\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  margin: 0;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background-color: #2d2d2d;\r\n  border-radius: 8px;\r\n  padding: 24px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst CardTitle = styled.h2`\r\n  font-size: 1.4rem;\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  svg {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px 12px;\r\n  background-color: #3a3a3a;\r\n  border: 1px solid #4d4d4d;\r\n  border-radius: 4px;\r\n  color: #f8f9fa;\r\n  font-size: 1rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #ff9f0d;\r\n    box-shadow: 0 0 0 2px rgba(255, 159, 13, 0.2);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  padding: 10px 12px;\r\n  background-color: #3a3a3a;\r\n  border: 1px solid #4d4d4d;\r\n  border-radius: 4px;\r\n  color: #f8f9fa;\r\n  font-size: 1rem;\r\n  min-height: 100px;\r\n  resize: vertical;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #ff9f0d;\r\n    box-shadow: 0 0 0 2px rgba(255, 159, 13, 0.2);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #ff9f0d;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  border-radius: 4px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background-color: #f5960c;\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  &:disabled {\r\n    background-color: #6c757d;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n  \r\n  svg {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled(Button)`\r\n  background-color: transparent;\r\n  border: 1px solid #6c757d;\r\n  color: #f8f9fa;\r\n  margin-right: 10px;\r\n  \r\n  &:hover {\r\n    background-color: #2d2d2d;\r\n    border-color: #f8f9fa;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImageUploadContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst UploadArea = styled.div`\r\n  border: 2px dashed #4d4d4d;\r\n  border-radius: 8px;\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n  margin-bottom: 16px;\r\n  background-color: #333;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    border-color: #ff9f0d;\r\n    background-color: #3a3a3a;\r\n  }\r\n  \r\n  &.dragover {\r\n    border-color: #ff9f0d;\r\n    background-color: rgba(255, 159, 13, 0.1);\r\n  }\r\n`;\r\n\r\nconst HiddenInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst ImagePreview = styled.div`\r\n  margin-top: 16px;\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst PreviewImage = styled.img`\r\n  width: 100%;\r\n  display: block;\r\n  max-height: 300px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst RemoveButton = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: white;\r\n  border: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background-color: rgba(220, 53, 69, 0.8);\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #dc3545;\r\n  background-color: rgba(220, 53, 69, 0.1);\r\n  padding: 12px 16px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst SuccessMessage = styled.div`\r\n  color: #28a745;\r\n  background-color: rgba(40, 167, 69, 0.1);\r\n  padding: 12px 16px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst ImageValidationMessage = styled.p`\r\n  margin-top: 8px;\r\n  font-size: 0.85rem;\r\n  color: #adb5bd;\r\n`;\r\n\r\nconst PreviewDeviceSelector = styled.div`\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  border-bottom: 1px solid #4d4d4d;\r\n`;\r\n\r\nconst DeviceTab = styled.button<{ active: boolean }>`\r\n  background: none;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  color: ${props => props.active ? '#ff9f0d' : '#adb5bd'};\r\n  font-weight: ${props => props.active ? '600' : '400'};\r\n  border-bottom: 2px solid ${props => props.active ? '#ff9f0d' : 'transparent'};\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    color: #ff9f0d;\r\n  }\r\n`;\r\n\r\nconst PreviewContainer = styled.div`\r\n  margin-top: 20px;\r\n  border: 1px solid #4d4d4d;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst PreviewHeader = styled.div`\r\n  padding: 10px;\r\n  background-color: #333;\r\n  border-bottom: 1px solid #4d4d4d;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 0.8rem;\r\n  color: #adb5bd;\r\n`;\r\n\r\n// Mobile device frame\r\nconst MobilePreview = styled.div`\r\n  max-width: 375px;\r\n  height: 667px;\r\n  margin: 20px auto;\r\n  border: 10px solid #333;\r\n  border-radius: 30px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\r\n  background-color: #1e1e1e;\r\n`;\r\n\r\n// Desktop device frame\r\nconst DesktopPreview = styled.div`\r\n  max-width: 900px;\r\n  height: 500px;\r\n  margin: 20px auto;\r\n  border: 10px solid #333;\r\n  border-top-width: 20px;\r\n  border-bottom-width: 20px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\r\n  background-color: #1e1e1e;\r\n`;\r\n\r\n// Interface for user info\r\ninterface UserInfo {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  restaurantId: number;\r\n}\r\n\r\nconst OwnerProfilePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { refreshRestaurantData } = useAppContext();\r\n  const [restaurantData, setRestaurantData] = useState<RestaurantAdminData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [imageFile, setImageFile] = useState<File | null>(null);\r\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [devicePreview, setDevicePreview] = useState<'mobile' | 'desktop'>('desktop');\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  \r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  // Get user info from local storage\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const storedUser = localStorage.getItem('adminUser') || localStorage.getItem('currentUser');\r\n      const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n      const userRole = localStorage.getItem('userRole');\r\n      \r\n      if (storedUser && isAuthenticated === 'true' && userRole === 'admin') {\r\n        try {\r\n          const parsedUser = JSON.parse(storedUser) as UserInfo;\r\n          \r\n          // Fetch restaurant data\r\n          const restaurant = await getRestaurantData(parsedUser.restaurantId);\r\n          if (restaurant) {\r\n            setRestaurantData(restaurant);\r\n            \r\n            // If there's a cover image, set it as preview\r\n            if (restaurant.coverImage || restaurant.cover_image) {\r\n              setPreviewImage(restaurant.coverImage || restaurant.cover_image || '');\r\n            }\r\n          } else {\r\n            setError('Failed to fetch restaurant data');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching restaurant data:', error);\r\n          setError('An error occurred while fetching restaurant data');\r\n        }\r\n      } else {\r\n        navigate('/admin/login');\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n    \r\n    fetchData();\r\n  }, [navigate]);\r\n  \r\n  // Handle file input change\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n    if (files && files.length > 0) {\r\n      const file = files[0];\r\n      validateAndSetImage(file);\r\n    }\r\n  };\r\n  \r\n  // Validate file type and size\r\n  const validateAndSetImage = (file: File) => {\r\n    // Check file type\r\n    const validTypes = ['image/jpeg', 'image/png', 'image/webp'];\r\n    if (!validTypes.includes(file.type)) {\r\n      setError('Please upload a valid image file (JPEG, PNG, or WebP)');\r\n      return;\r\n    }\r\n    \r\n    // Check file size (max 5MB)\r\n    const maxSize = 5 * 1024 * 1024; // 5MB in bytes\r\n    if (file.size > maxSize) {\r\n      setError('Image size should be less than 5MB');\r\n      return;\r\n    }\r\n    \r\n    setError(null);\r\n    setImageFile(file);\r\n    \r\n    // Create preview URL\r\n    const previewURL = URL.createObjectURL(file);\r\n    setPreviewImage(previewURL);\r\n  };\r\n  \r\n  // Handle drop area click\r\n  const handleUploadClick = () => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n  \r\n  // Handle drag events\r\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(true);\r\n  };\r\n  \r\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n  };\r\n  \r\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n  \r\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n    \r\n    const files = e.dataTransfer.files;\r\n    if (files && files.length > 0) {\r\n      validateAndSetImage(files[0]);\r\n    }\r\n  };\r\n  \r\n  // Remove preview image\r\n  const handleRemoveImage = () => {\r\n    if (previewImage && previewImage.startsWith('blob:')) {\r\n      URL.revokeObjectURL(previewImage);\r\n    }\r\n    \r\n    setPreviewImage(null);\r\n    setImageFile(null);\r\n    \r\n    // Reset file input\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n  \r\n  // Handle form input changes\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    \r\n    setRestaurantData(prev => {\r\n      if (!prev) return prev;\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!restaurantData) return;\r\n    \r\n    setIsSaving(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n    \r\n    try {\r\n      // Prepare data for update\r\n      const updateData: Partial<RestaurantAdminData> = {\r\n        name: restaurantData.name,\r\n        description: restaurantData.description,\r\n        address: restaurantData.address\r\n      };\r\n      \r\n      // If we have a new image file, process it\r\n      if (imageFile) {\r\n        // In a real implementation, you would typically:\r\n        // 1. Upload the file to a server or storage service\r\n        // 2. Get back a URL to the uploaded file\r\n        // 3. Store that URL in the database\r\n        \r\n        // For this implementation, we'll simulate it by:\r\n        // 1. Converting the file to a data URL\r\n        // 2. Saving that in our update data\r\n        \r\n        // In production, you'd use FormData and call an API endpoint\r\n        // that handles multipart/form-data uploads\r\n        \r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(imageFile);\r\n        \r\n        await new Promise<void>((resolve) => {\r\n          reader.onloadend = () => {\r\n            if (typeof reader.result === 'string') {\r\n              updateData.coverImage = reader.result;\r\n              resolve();\r\n            }\r\n          };\r\n        });\r\n      } else if (previewImage === null) {\r\n        // If preview is null but imageFile is also null, it means user removed the image\r\n        updateData.coverImage = '';\r\n      }\r\n      \r\n      // Update restaurant data\r\n      const updatedRestaurant = await updateRestaurantData(restaurantData.id, updateData);\r\n      \r\n      if (updatedRestaurant) {\r\n        setRestaurantData(updatedRestaurant);\r\n        setSuccess('Restaurant profile updated successfully');\r\n        \r\n        // Refresh restaurant data in AppContext to update the hero image on HomePage\r\n        await refreshRestaurantData(restaurantData.id);\r\n        \r\n        // If we had a blob URL, revoke it to avoid memory leaks\r\n        if (previewImage && previewImage.startsWith('blob:')) {\r\n          URL.revokeObjectURL(previewImage);\r\n          \r\n          // Set the new image URL from the updated restaurant data\r\n          setPreviewImage(updatedRestaurant.coverImage || updatedRestaurant.cover_image || null);\r\n        }\r\n      } else {\r\n        setError('Failed to update restaurant profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating restaurant data:', error);\r\n      setError('An error occurred while updating restaurant profile');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <PageContainer>\r\n      <Header>\r\n        <PageTitle>Restaurant Profile</PageTitle>\r\n      </Header>\r\n      \r\n      {loading ? (\r\n        <Card>\r\n          <div style={{ textAlign: 'center', padding: '40px 0' }}>\r\n            <p>Loading restaurant data...</p>\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <>\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          {success && <SuccessMessage>{success}</SuccessMessage>}\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n            <Card>\r\n              <CardTitle>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                  <path d=\"M12 8v8\"></path>\r\n                  <path d=\"M8 12h8\"></path>\r\n                </svg>\r\n                Basic Information\r\n              </CardTitle>\r\n              \r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Restaurant Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  id=\"name\" \r\n                  name=\"name\" \r\n                  value={restaurantData?.name || ''}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label htmlFor=\"address\">Address</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  id=\"address\" \r\n                  name=\"address\" \r\n                  value={restaurantData?.address || ''}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label htmlFor=\"description\">Description</Label>\r\n                <TextArea \r\n                  id=\"description\" \r\n                  name=\"description\" \r\n                  value={restaurantData?.description || ''}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n            </Card>\r\n            \r\n            <Card>\r\n              <CardTitle>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n                  <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"></circle>\r\n                  <polyline points=\"21 15 16 10 5 21\"></polyline>\r\n                </svg>\r\n                Hero Image\r\n              </CardTitle>\r\n              \r\n              <ImageUploadContainer>\r\n                <UploadArea \r\n                  onClick={handleUploadClick}\r\n                  onDragEnter={handleDragEnter}\r\n                  onDragLeave={handleDragLeave}\r\n                  onDragOver={handleDragOver}\r\n                  onDrop={handleDrop}\r\n                  className={isDragging ? 'dragover' : ''}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#adb5bd\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n                    <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n                    <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n                  </svg>\r\n                  <p>Drag & drop an image here, or click to select</p>\r\n                  <HiddenInput \r\n                    type=\"file\" \r\n                    ref={fileInputRef} \r\n                    onChange={handleFileChange}\r\n                    accept=\"image/jpeg,image/png,image/webp\"\r\n                  />\r\n                </UploadArea>\r\n                \r\n                <ImageValidationMessage>\r\n                  Supported formats: JPEG, PNG, WebP | Max size: 5MB\r\n                </ImageValidationMessage>\r\n                \r\n                {previewImage && (\r\n                  <>\r\n                    <PreviewDeviceSelector>\r\n                      <DeviceTab \r\n                        active={devicePreview === 'desktop'} \r\n                        onClick={() => setDevicePreview('desktop')}\r\n                      >\r\n                        Desktop\r\n                      </DeviceTab>\r\n                      <DeviceTab \r\n                        active={devicePreview === 'mobile'} \r\n                        onClick={() => setDevicePreview('mobile')}\r\n                      >\r\n                        Mobile\r\n                      </DeviceTab>\r\n                    </PreviewDeviceSelector>\r\n                    \r\n                    <PreviewContainer>\r\n                      <PreviewHeader>\r\n                        {devicePreview === 'desktop' ? 'Desktop Preview' : 'Mobile Preview (Telegram Web App)'}\r\n                      </PreviewHeader>\r\n                      \r\n                      {devicePreview === 'desktop' ? (\r\n                        <DesktopPreview>\r\n                          <div style={{ \r\n                            position: 'relative', \r\n                            width: '100%', \r\n                            height: '380px', \r\n                            overflow: 'hidden',\r\n                            borderRadius: '8px',\r\n                          }}>\r\n                            <div style={{\r\n                              position: 'absolute',\r\n                              top: 0,\r\n                              left: 0,\r\n                              width: '100%',\r\n                              height: '100%',\r\n                              backgroundImage: `url(${previewImage})`,\r\n                              backgroundSize: 'cover',\r\n                              backgroundPosition: 'center',\r\n                              filter: 'brightness(0.9) contrast(1.05)',\r\n                            }} />\r\n                            <div style={{\r\n                              position: 'absolute',\r\n                              top: 0,\r\n                              left: 0,\r\n                              width: '100%',\r\n                              height: '100%',\r\n                              background: 'linear-gradient(to right, rgba(0, 0, 0, 0.85) 0%, rgba(0, 0, 0, 0.6) 50%, rgba(0, 0, 0, 0.2) 100%)',\r\n                              display: 'flex',\r\n                              flexDirection: 'column',\r\n                              justifyContent: 'center',\r\n                              padding: '40px',\r\n                              color: 'white',\r\n                            }}>\r\n                              <h2 style={{ fontSize: '2.5rem', fontWeight: 700, marginBottom: '12px' }}>\r\n                                {restaurantData?.name || 'Restaurant Name'}\r\n                              </h2>\r\n                              <p style={{ fontSize: '1.2rem', marginBottom: '24px', maxWidth: '60%' }}>\r\n                                Enjoy the best food in town\r\n                              </p>\r\n                              <button style={{ \r\n                                backgroundColor: '#ff9f0d',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                padding: '12px 20px',\r\n                                borderRadius: '6px',\r\n                                fontWeight: 600,\r\n                                width: 'fit-content',\r\n                              }}>\r\n                                Browse Menu\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </DesktopPreview>\r\n                      ) : (\r\n                        <MobilePreview>\r\n                          <div style={{ \r\n                            position: 'relative', \r\n                            width: '100%', \r\n                            height: '280px', \r\n                            overflow: 'hidden',\r\n                          }}>\r\n                            <div style={{\r\n                              position: 'absolute',\r\n                              top: 0,\r\n                              left: 0,\r\n                              width: '100%',\r\n                              height: '100%',\r\n                              backgroundImage: `url(${previewImage})`,\r\n                              backgroundSize: 'cover',\r\n                              backgroundPosition: 'center',\r\n                              filter: 'brightness(0.9) contrast(1.05)',\r\n                            }} />\r\n                            <div style={{\r\n                              position: 'absolute',\r\n                              top: 0,\r\n                              left: 0,\r\n                              width: '100%',\r\n                              height: '100%',\r\n                              background: 'linear-gradient(to right, rgba(0, 0, 0, 0.85) 0%, rgba(0, 0, 0, 0.6) 70%, rgba(0, 0, 0, 0.4) 100%)',\r\n                              display: 'flex',\r\n                              flexDirection: 'column',\r\n                              justifyContent: 'center',\r\n                              padding: '20px',\r\n                              color: 'white',\r\n                            }}>\r\n                              <h2 style={{ fontSize: '1.8rem', fontWeight: 700, marginBottom: '8px' }}>\r\n                                {restaurantData?.name || 'Restaurant Name'}\r\n                              </h2>\r\n                              <p style={{ fontSize: '1rem', marginBottom: '16px' }}>\r\n                                Enjoy the best food in town\r\n                              </p>\r\n                              <button style={{ \r\n                                backgroundColor: '#ff9f0d',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                padding: '8px 16px',\r\n                                borderRadius: '6px',\r\n                                fontWeight: 600,\r\n                                width: 'fit-content',\r\n                              }}>\r\n                                Browse Menu\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          <div style={{\r\n                            padding: '16px',\r\n                            backgroundColor: '#1e1e1e',\r\n                            color: '#adb5bd',\r\n                            fontSize: '0.8rem',\r\n                          }}>\r\n                            <p>Telegram Web App Preview</p>\r\n                          </div>\r\n                        </MobilePreview>\r\n                      )}\r\n                    </PreviewContainer>\r\n                    \r\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '16px' }}>\r\n                      <Button type=\"button\" onClick={handleRemoveImage}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                          <polyline points=\"3 6 5 6 21 6\"></polyline>\r\n                          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6\"></path>\r\n                          <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\r\n                          <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\r\n                        </svg>\r\n                        Remove Image\r\n                      </Button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </ImageUploadContainer>\r\n            </Card>\r\n            \r\n            <ButtonGroup>\r\n              <BackButton type=\"button\" onClick={() => navigate('/owner/statistics')}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\r\n                  <polyline points=\"12 19 5 12 12 5\"></polyline>\r\n                </svg>\r\n                Back\r\n              </BackButton>\r\n              \r\n              <Button type=\"submit\" disabled={isSaving}>\r\n                {isSaving ? (\r\n                  <>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" style={{ animation: 'spin 1s linear infinite' }}>\r\n                      <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\"></line>\r\n                      <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\"></line>\r\n                      <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\"></line>\r\n                      <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\"></line>\r\n                      <line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\"></line>\r\n                      <line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\r\n                      <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\"></line>\r\n                      <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\"></line>\r\n                    </svg>\r\n                    Saving...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\r\n                      <polyline points=\"17 21 17 13 7 13 7 21\"></polyline>\r\n                      <polyline points=\"7 3 7 8 15 8\"></polyline>\r\n                    </svg>\r\n                    Save Changes\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </ButtonGroup>\r\n          </form>\r\n        </>\r\n      )}\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default OwnerProfilePage; "],"names":["PageContainer","styled","div","Header","PageTitle","h1","Card","CardTitle","h2","FormGroup","Label","label","Input","input","TextArea","textarea","Button","button","BackButton","ButtonGroup","ImageUploadContainer","UploadArea","HiddenInput","ErrorMessage","img","SuccessMessage","ImageValidationMessage","p","PreviewDeviceSelector","DeviceTab","props","active","PreviewContainer","PreviewHeader","MobilePreview","DesktopPreview","OwnerProfilePage","navigate","useNavigate","refreshRestaurantData","useAppContext","restaurantData","setRestaurantData","useState","loading","setLoading","imageFile","setImageFile","previewImage","setPreviewImage","error","setError","success","setSuccess","isSaving","setIsSaving","devicePreview","setDevicePreview","isDragging","setIsDragging","fileInputRef","useRef","useEffect","async","storedUser","localStorage","getItem","isAuthenticated","userRole","parsedUser","JSON","parse","restaurant","getRestaurantData","restaurantId","coverImage","cover_image","console","fetchData","validateAndSetImage","file","includes","type","size","previewURL","URL","createObjectURL","handleInputChange","e","name","value","target","prev","_jsxs","children","_jsx","style","textAlign","padding","_Fragment","onSubmit","preventDefault","updateData","description","address","reader","FileReader","readAsDataURL","Promise","resolve","onloadend","result","updatedRestaurant","updateRestaurantData","id","startsWith","revokeObjectURL","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","htmlFor","onChange","required","x","y","rx","ry","points","onClick","handleUploadClick","current","click","onDragEnter","stopPropagation","onDragLeave","onDragOver","onDrop","files","dataTransfer","length","className","x1","y1","x2","y2","ref","event","accept","position","overflow","borderRadius","top","left","backgroundImage","backgroundSize","backgroundPosition","filter","background","display","flexDirection","justifyContent","color","fontSize","fontWeight","marginBottom","maxWidth","backgroundColor","border","marginTop","handleRemoveImage","disabled","animation"],"sourceRoot":""}