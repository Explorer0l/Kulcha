{"version":3,"file":"static/js/636.fc9bce58.chunk.js","mappings":"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","sources":["components/Navigation.tsx","components/Header.tsx","pages/OrderDetailsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Обновленная навигационная панель в стиле Apple/Nvidia\nconst NavContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  margin: var(--spacing-md) 0;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  overflow: hidden;\n  \n  @media (max-width: 767px) {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    border-radius: var(--border-radius-md) var(--border-radius-md) 0 0;\n    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.12);\n    margin: 0;\n  }\n`;\n\n// Улучшенная навигационная кнопка с визуальными эффектами\nconst NavButton = styled.button<{ active?: boolean }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: var(--spacing-md) var(--spacing-sm);\n  background: ${props => props.active ? 'linear-gradient(to bottom, rgba(var(--primary-color-rgb), 0.08), transparent)' : 'transparent'};\n  border: none;\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  font-size: 0.9rem;\n  position: relative;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  cursor: pointer;\n  font-weight: ${props => props.active ? '600' : '500'};\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: ${props => props.active ? '40%' : '0'};\n    height: 3px;\n    background-color: var(--primary-color);\n    border-radius: 3px 3px 0 0;\n    transition: width 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  &:hover:not(:disabled) {\n    color: var(--primary-color);\n    background-color: rgba(var(--primary-color-rgb), 0.05);\n    \n    &::after {\n      width: ${props => props.active ? '60%' : '30%'};\n    }\n    \n    svg {\n      transform: translateY(-2px);\n    }\n  }\n  \n  svg {\n    margin-bottom: var(--spacing-xs);\n    width: 20px;\n    height: 20px;\n    stroke-width: 2;\n    transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-sm) var(--spacing-xs);\n    font-size: 0.8rem;\n    \n    svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst Navigation: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { \n    selectedCity, \n    selectedRestaurant, \n    restaurants,\n    deliveryMethod,\n    setDeliveryMethod\n  } = useAppContext();\n  \n  const [activeTab, setActiveTab] = useState('home');\n  \n  // Определяем активную вкладку на основе текущего URL\n  useEffect(() => {\n    if (location.pathname.includes('city-selection')) {\n      setActiveTab('city');\n    } else if (location.pathname.includes('restaurant-selection')) {\n      setActiveTab('restaurant');\n    } else if (location.pathname === '/') {\n      setActiveTab('home');\n    }\n  }, [location.pathname]);\n  \n  // Получаем данные о выбранном ресторане\n  const selectedRestaurantData = selectedRestaurant !== null\n    ? restaurants.find(r => r.id === selectedRestaurant)\n    : null;\n  \n  return (\n    <NavContainer>\n      <NavButton \n        onClick={() => { navigate('/city-selection') }}\n        active={activeTab === 'city'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z\"></path>\n          <circle cx=\"12\" cy=\"9\" r=\"2.5\"></circle>\n        </svg>\n        {selectedCity ? selectedCity.name : 'Город'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => { selectedCity && navigate(selectedRestaurant ? '/home' : '/restaurant-selection') }}\n        disabled={!selectedCity}\n        active={activeTab === 'restaurant'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M17 11H3c-.6 0-1 .4-1 1v9c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9c0-.6-.4-1-1-1Z\"></path>\n          <path d=\"M14 11V6c0-2.8-2.2-5-5-5S4 3.2 4 6v5\"></path>\n          <path d=\"M21 11v9c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-9c0-.6.4-1 1-1h2c.6 0 1 .4 1 1Z\"></path>\n        </svg>\n        {selectedRestaurantData ? selectedRestaurantData.name : 'Ресторан'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('delivery')}\n        active={deliveryMethod === 'delivery'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n          <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n          <path d=\"M5 17H3v-6l2-2h8l3 3h1a2 2 0 0 1 2 2v3h-2\"></path>\n          <path d=\"M15 8h5l-1.5 5h-5\"></path>\n        </svg>\n        Доставка\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('pickup')}\n        active={deliveryMethod === 'pickup'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M4 10h12\"></path>\n          <path d=\"M4 14h9\"></path>\n          <path d=\"M4 18h6\"></path>\n          <path d=\"M18 15v6\"></path>\n          <path d=\"M15 18h6\"></path>\n          <path d=\"m14.5 7.5-8-4-2 3 8 4Z\"></path>\n        </svg>\n        Самовывоз\n      </NavButton>\n    </NavContainer>\n  );\n};\n\nexport default Navigation; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Современный контейнер шапки в стиле Apple/Nvidia\nconst HeaderContainer = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-md) 0;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      transparent,\n      var(--border-color),\n      transparent\n    );\n    opacity: 0.6;\n  }\n`;\n\n// Контейнер логотипа с анимацией\nconst LogoContainer = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n  \n  img {\n    height: 38px;\n    object-fit: contain;\n    \n    @media (max-width: 767px) {\n      height: 32px;\n    }\n  }\n`;\n\n// Анимированная кнопка профиля\nconst ProfileButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-color);\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom right, \n                 rgba(var(--primary-color-rgb), 0.1), \n                 rgba(var(--primary-color-rgb), 0));\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    z-index: -1;\n    border-radius: 50%;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    color: var(--primary-color);\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    svg {\n      stroke-width: 2.2;\n    }\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    transition: all 0.3s ease;\n  }\n`;\n\n// Компонент логотипа с изображением\nconst Logo = styled.img`\n  height: 38px;\n  object-fit: contain;\n  transition: filter 0.3s ease;\n  \n  @media (max-width: 767px) {\n    height: 32px;\n  }\n`;\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n  const { selectedCity, selectedRestaurant } = useAppContext();\n\n  return (\n    <HeaderContainer>\n      <LogoContainer onClick={() => navigate('/')}>\n        <Logo src=\"/assets/images/logo.png\" alt=\"Kulcha\" />\n      </LogoContainer>\n      \n      <ProfileButton onClick={() => navigate('/profile')}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n          <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n        </svg>\n      </ProfileButton>\n    </HeaderContainer>\n  );\n};\n\nexport default Header; ","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  Container, \n  MainContent, \n  Heading, \n  Button,\n  EmptyState,\n  PageTransition\n} from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\n\nconst DetailsContainer = styled(PageTransition)`\n  min-height: 70vh;\n`;\n\nconst DetailsContent = styled.div`\n  margin-bottom: var(--spacing-xl);\n`;\n\nconst DetailsHeading = styled(Heading)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-lg);\n  \n  svg {\n    margin-right: var(--spacing-xs);\n  }\n`;\n\nconst StatusCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  padding: var(--spacing-lg);\n  margin-bottom: var(--spacing-lg);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst OrderStatus = styled.div`\n  display: inline-block;\n  padding: 8px 16px;\n  background-color: rgba(255, 159, 13, 0.15);\n  color: var(--primary-color);\n  border-radius: 20px;\n  font-weight: 600;\n  font-size: 0.9rem;\n  margin-bottom: var(--spacing-md);\n`;\n\nconst StatusTracker = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: var(--spacing-lg) 0;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 16px;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: rgba(255, 255, 255, 0.1);\n    z-index: 1;\n  }\n`;\n\ninterface StatusStepProps {\n  $active: boolean;\n  $completed: boolean;\n}\n\nconst StatusStep = styled.div<StatusStepProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 2;\n  flex: 1;\n  \n  &:first-child {\n    align-items: flex-start;\n  }\n  \n  &:last-child {\n    align-items: flex-end;\n  }\n`;\n\nconst StepIcon = styled.div<StatusStepProps>`\n  width: 34px;\n  height: 34px;\n  border-radius: 50%;\n  background-color: ${props => props.$completed ? 'var(--primary-color)' : props.$active ? 'var(--primary-dark)' : 'var(--background-light)'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: var(--spacing-xs);\n  transition: all 0.3s ease;\n  border: 2px solid ${props => props.$completed || props.$active ? 'var(--primary-color)' : 'transparent'};\n  \n  svg {\n    color: ${props => props.$completed ? 'white' : props.$active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  }\n`;\n\nconst StepLabel = styled.span<StatusStepProps>`\n  font-size: 0.8rem;\n  color: ${props => props.$completed || props.$active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  font-weight: ${props => props.$completed || props.$active ? '600' : '400'};\n  text-align: center;\n  max-width: 100px;\n  \n  @media (max-width: 600px) {\n    display: none;\n  }\n`;\n\nconst OrderDetailsCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  padding: var(--spacing-lg);\n  margin-bottom: var(--spacing-lg);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst OrderDetailsTitle = styled.h3`\n  font-size: 1.2rem;\n  margin: 0 0 var(--spacing-md) 0;\n  color: var(--text-color);\n  display: flex;\n  align-items: center;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n  }\n`;\n\nconst DetailsRow = styled.div`\n  display: flex;\n  margin-bottom: var(--spacing-sm);\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst DetailsLabel = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-secondary);\n  width: 40%;\n`;\n\nconst DetailsValue = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-color);\n  font-weight: 500;\n`;\n\nconst OrderItemsList = styled.div`\n  margin-top: var(--spacing-md);\n`;\n\nconst OrderItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: var(--spacing-sm) 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ItemName = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-color);\n`;\n\nconst ItemQuantity = styled.span`\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n  margin-left: var(--spacing-xs);\n`;\n\nconst ItemPrice = styled.span`\n  font-weight: 600;\n  color: var(--text-color);\n`;\n\nconst TotalRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: var(--spacing-md);\n  padding-top: var(--spacing-md);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst TotalLabel = styled.span`\n  font-size: 1.1rem;\n  color: var(--text-color);\n  font-weight: 500;\n`;\n\nconst TotalValue = styled.span`\n  font-size: 1.2rem;\n  color: var(--primary-color);\n  font-weight: 600;\n`;\n\nconst BackButton = styled(Button)`\n  padding: var(--spacing-md);\n  background-color: transparent;\n  border: 2px solid var(--primary-color);\n  color: var(--primary-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n  }\n  \n  &:hover {\n    background-color: rgba(255, 159, 13, 0.1);\n    transform: translateY(-2px);\n  }\n`;\n\nconst OrderDetailsPage: React.FC = () => {\n  const { orderHistory } = useAppContext();\n  const navigate = useNavigate();\n  const { orderId } = useParams<{ orderId: string }>();\n  const { showBackButton, hideBackButton, setBackButtonCallback } = useTelegram();\n  \n  const order = orderHistory.find(order => order.id.toString() === orderId);\n  \n  useEffect(() => {\n    showBackButton();\n    \n    setBackButtonCallback(() => {\n      navigate('/profile');\n    });\n\n    return () => {\n      hideBackButton();\n    };\n  }, [hideBackButton, navigate, setBackButtonCallback, showBackButton]);\n  \n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date);\n  };\n  \n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'Ожидает подтверждения';\n      case 'confirmed':\n        return 'Подтвержден';\n      case 'preparing':\n        return 'Готовится';\n      case 'ready':\n        return 'Готов к выдаче';\n      case 'delivered':\n        return 'Доставлен';\n      default:\n        return 'В обработке';\n    }\n  };\n  \n  const getStatusIndex = (status: string) => {\n    const statuses = ['pending', 'confirmed', 'preparing', 'ready', 'delivered'];\n    return statuses.indexOf(status);\n  };\n  \n  const isStatusCompleted = (statusIndex: number, currentStatusIndex: number) => {\n    return statusIndex <= currentStatusIndex;\n  };\n  \n  const isStatusActive = (statusIndex: number, currentStatusIndex: number) => {\n    return statusIndex === currentStatusIndex;\n  };\n  \n  if (!order) {\n    return (\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          <EmptyState>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n              <polyline points=\"14 2 14 8 20 8\"></polyline>\n              <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n              <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n              <polyline points=\"10 9 9 9 8 9\"></polyline>\n            </svg>\n            <h3>Заказ не найден</h3>\n            <p>Запрашиваемый заказ не существует или был удален.</p>\n            <Button onClick={() => navigate('/profile')}>\n              Вернуться к истории заказов\n            </Button>\n          </EmptyState>\n        </MainContent>\n      </Container>\n    );\n  }\n  \n  const currentStatusIndex = getStatusIndex(order.status);\n\n  return (\n    <DetailsContainer>\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          <DetailsContent>\n            <DetailsHeading>\n              <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                  <polyline points=\"14 2 14 8 20 8\"></polyline>\n                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n                  <polyline points=\"10 9 9 9 8 9\"></polyline>\n                </svg>\n                Заказ №{order.id}\n              </div>\n            </DetailsHeading>\n            \n            <StatusCard>\n              <OrderStatus>{getStatusLabel(order.status)}</OrderStatus>\n              \n              <StatusTracker>\n                <StatusStep $active={isStatusActive(0, currentStatusIndex)} $completed={isStatusCompleted(0, currentStatusIndex)}>\n                  <StepIcon $active={isStatusActive(0, currentStatusIndex)} $completed={isStatusCompleted(0, currentStatusIndex)}>\n                    {isStatusCompleted(0, currentStatusIndex) ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                      </svg>\n                    ) : (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                        <polyline points=\"12 6 12 12 16 14\"></polyline>\n                      </svg>\n                    )}\n                  </StepIcon>\n                  <StepLabel $active={isStatusActive(0, currentStatusIndex)} $completed={isStatusCompleted(0, currentStatusIndex)}>\n                    Ожидает подтверждения\n                  </StepLabel>\n                </StatusStep>\n                \n                <StatusStep $active={isStatusActive(1, currentStatusIndex)} $completed={isStatusCompleted(1, currentStatusIndex)}>\n                  <StepIcon $active={isStatusActive(1, currentStatusIndex)} $completed={isStatusCompleted(1, currentStatusIndex)}>\n                    {isStatusCompleted(1, currentStatusIndex) ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                      </svg>\n                    ) : (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                        <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n                      </svg>\n                    )}\n                  </StepIcon>\n                  <StepLabel $active={isStatusActive(1, currentStatusIndex)} $completed={isStatusCompleted(1, currentStatusIndex)}>\n                    Подтвержден\n                  </StepLabel>\n                </StatusStep>\n                \n                <StatusStep $active={isStatusActive(2, currentStatusIndex)} $completed={isStatusCompleted(2, currentStatusIndex)}>\n                  <StepIcon $active={isStatusActive(2, currentStatusIndex)} $completed={isStatusCompleted(2, currentStatusIndex)}>\n                    {isStatusCompleted(2, currentStatusIndex) ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                      </svg>\n                    ) : (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"></path>\n                      </svg>\n                    )}\n                  </StepIcon>\n                  <StepLabel $active={isStatusActive(2, currentStatusIndex)} $completed={isStatusCompleted(2, currentStatusIndex)}>\n                    Готовится\n                  </StepLabel>\n                </StatusStep>\n                \n                <StatusStep $active={isStatusActive(3, currentStatusIndex)} $completed={isStatusCompleted(3, currentStatusIndex)}>\n                  <StepIcon $active={isStatusActive(3, currentStatusIndex)} $completed={isStatusCompleted(3, currentStatusIndex)}>\n                    {isStatusCompleted(3, currentStatusIndex) ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                      </svg>\n                    ) : (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <polyline points=\"20 12 20 22 4 22 4 12\"></polyline>\n                        <rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"></rect>\n                        <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"></line>\n                        <path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"></path>\n                        <path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"></path>\n                      </svg>\n                    )}\n                  </StepIcon>\n                  <StepLabel $active={isStatusActive(3, currentStatusIndex)} $completed={isStatusCompleted(3, currentStatusIndex)}>\n                    Готов к выдаче\n                  </StepLabel>\n                </StatusStep>\n                \n                <StatusStep $active={isStatusActive(4, currentStatusIndex)} $completed={isStatusCompleted(4, currentStatusIndex)}>\n                  <StepIcon $active={isStatusActive(4, currentStatusIndex)} $completed={isStatusCompleted(4, currentStatusIndex)}>\n                    {isStatusCompleted(4, currentStatusIndex) ? (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                      </svg>\n                    ) : (\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                        <line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line>\n                        <line x1=\"9\" y1=\"21\" x2=\"9\" y2=\"9\"></line>\n                      </svg>\n                    )}\n                  </StepIcon>\n                  <StepLabel $active={isStatusActive(4, currentStatusIndex)} $completed={isStatusCompleted(4, currentStatusIndex)}>\n                    Доставлен\n                  </StepLabel>\n                </StatusStep>\n              </StatusTracker>\n            </StatusCard>\n            \n            <OrderDetailsCard>\n              <OrderDetailsTitle>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                  <polyline points=\"14 2 14 8 20 8\"></polyline>\n                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n                  <polyline points=\"10 9 9 9 8 9\"></polyline>\n                </svg>\n                Детали заказа\n              </OrderDetailsTitle>\n              \n              <DetailsRow>\n                <DetailsLabel>Номер заказа:</DetailsLabel>\n                <DetailsValue>#{order.id}</DetailsValue>\n              </DetailsRow>\n              \n              <DetailsRow>\n                <DetailsLabel>Дата и время:</DetailsLabel>\n                <DetailsValue>{formatDate(order.date)}</DetailsValue>\n              </DetailsRow>\n              \n              <DetailsRow>\n                <DetailsLabel>Способ получения:</DetailsLabel>\n                <DetailsValue>{order.deliveryMethod === 'delivery' ? 'Доставка' : 'Самовывоз'}</DetailsValue>\n              </DetailsRow>\n              \n              {order.deliveryMethod === 'delivery' && order.userAddress && (\n                <>\n                  <OrderDetailsTitle style={{ marginTop: 'var(--spacing-md)' }}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                      <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                    </svg>\n                    Адрес доставки\n                  </OrderDetailsTitle>\n                  \n                  <DetailsRow>\n                    <DetailsLabel>Получатель:</DetailsLabel>\n                    <DetailsValue>{order.userAddress.name}</DetailsValue>\n                  </DetailsRow>\n                  \n                  <DetailsRow>\n                    <DetailsLabel>Телефон:</DetailsLabel>\n                    <DetailsValue>{order.userAddress.phone}</DetailsValue>\n                  </DetailsRow>\n                  \n                  <DetailsRow>\n                    <DetailsLabel>Город:</DetailsLabel>\n                    <DetailsValue>\n                      {typeof order.userAddress.city === 'object' && order.userAddress.city !== null \n                        ? order.userAddress.city.name || 'Не указан'\n                        : String(order.userAddress.city || 'Не указан')}\n                    </DetailsValue>\n                  </DetailsRow>\n                  \n                  <DetailsRow>\n                    <DetailsLabel>Адрес:</DetailsLabel>\n                    <DetailsValue>{order.userAddress.address}</DetailsValue>\n                  </DetailsRow>\n                </>\n              )}\n              \n              <OrderDetailsTitle style={{ marginTop: 'var(--spacing-lg)' }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path>\n                  <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n                  <path d=\"M16 10a4 4 0 0 1-8 0\"></path>\n                </svg>\n                Состав заказа\n              </OrderDetailsTitle>\n              \n              <OrderItemsList>\n                {order.items.map((item, index) => (\n                  <OrderItem key={index}>\n                    <div>\n                      <ItemName>{item.name}</ItemName>\n                      <ItemQuantity>x{item.quantity}</ItemQuantity>\n                    </div>\n                    <ItemPrice>₽{item.price * item.quantity}</ItemPrice>\n                  </OrderItem>\n                ))}\n              </OrderItemsList>\n              \n              <TotalRow>\n                <TotalLabel>Итого:</TotalLabel>\n                <TotalValue>₽{order.totalAmount}</TotalValue>\n              </TotalRow>\n            </OrderDetailsCard>\n            \n            <BackButton onClick={() => navigate('/profile')}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\n                <polyline points=\"12 19 5 12 12 5\"></polyline>\n              </svg>\n              Вернуться к истории заказов\n            </BackButton>\n          </DetailsContent>\n        </MainContent>\n      </Container>\n    </DetailsContainer>\n  );\n};\n\nexport default OrderDetailsPage; "],"names":["NavContainer","styled","nav","NavButton","button","props","active","Navigation","navigate","useNavigate","location","useLocation","selectedCity","selectedRestaurant","restaurants","deliveryMethod","setDeliveryMethod","useAppContext","activeTab","setActiveTab","useState","useEffect","pathname","includes","selectedRestaurantData","find","r","id","_jsxs","children","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_jsx","d","cx","cy","name","disabled","HeaderContainer","header","LogoContainer","div","ProfileButton","Logo","img","Header","src","alt","DetailsContainer","PageTransition","DetailsContent","DetailsHeading","Heading","StatusCard","OrderStatus","StatusTracker","StatusStep","StepIcon","$completed","$active","StepLabel","span","OrderDetailsCard","OrderDetailsTitle","h3","DetailsRow","DetailsLabel","DetailsValue","OrderItemsList","OrderItem","ItemName","ItemQuantity","ItemPrice","TotalRow","TotalLabel","TotalValue","BackButton","Button","OrderDetailsPage","orderHistory","orderId","useParams","showBackButton","hideBackButton","setBackButtonCallback","useTelegram","order","toString","isStatusCompleted","statusIndex","currentStatusIndex","isStatusActive","Container","MainContent","EmptyState","points","x1","y1","x2","y2","status","indexOf","getStatusLabel","x","y","rx","ry","dateString","date","Date","Intl","DateTimeFormat","day","month","year","hour","minute","format","formatDate","userAddress","_Fragment","style","marginTop","phone","city","String","address","items","map","item","index","quantity","price","totalAmount"],"sourceRoot":""}