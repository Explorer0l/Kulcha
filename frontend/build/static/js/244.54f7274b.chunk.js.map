{"version":3,"file":"static/js/244.54f7274b.chunk.js","mappings":"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","sources":["components/Navigation.tsx","pages/CartPage.tsx","components/CartButton.tsx","components/Header.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Обновленная навигационная панель в стиле Apple/Nvidia\nconst NavContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  margin: var(--spacing-md) 0;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  overflow: hidden;\n  \n  @media (max-width: 767px) {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    border-radius: var(--border-radius-md) var(--border-radius-md) 0 0;\n    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.12);\n    margin: 0;\n  }\n`;\n\n// Улучшенная навигационная кнопка с визуальными эффектами\nconst NavButton = styled.button<{ active?: boolean }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: var(--spacing-md) var(--spacing-sm);\n  background: ${props => props.active ? 'linear-gradient(to bottom, rgba(var(--primary-color-rgb), 0.08), transparent)' : 'transparent'};\n  border: none;\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  font-size: 0.9rem;\n  position: relative;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  cursor: pointer;\n  font-weight: ${props => props.active ? '600' : '500'};\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: ${props => props.active ? '40%' : '0'};\n    height: 3px;\n    background-color: var(--primary-color);\n    border-radius: 3px 3px 0 0;\n    transition: width 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  &:hover:not(:disabled) {\n    color: var(--primary-color);\n    background-color: rgba(var(--primary-color-rgb), 0.05);\n    \n    &::after {\n      width: ${props => props.active ? '60%' : '30%'};\n    }\n    \n    svg {\n      transform: translateY(-2px);\n    }\n  }\n  \n  svg {\n    margin-bottom: var(--spacing-xs);\n    width: 20px;\n    height: 20px;\n    stroke-width: 2;\n    transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-sm) var(--spacing-xs);\n    font-size: 0.8rem;\n    \n    svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst Navigation: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { \n    selectedCity, \n    selectedRestaurant, \n    restaurants,\n    deliveryMethod,\n    setDeliveryMethod\n  } = useAppContext();\n  \n  const [activeTab, setActiveTab] = useState('home');\n  \n  // Определяем активную вкладку на основе текущего URL\n  useEffect(() => {\n    if (location.pathname.includes('city-selection')) {\n      setActiveTab('city');\n    } else if (location.pathname.includes('restaurant-selection')) {\n      setActiveTab('restaurant');\n    } else if (location.pathname === '/') {\n      setActiveTab('home');\n    }\n  }, [location.pathname]);\n  \n  // Получаем данные о выбранном ресторане\n  const selectedRestaurantData = selectedRestaurant !== null\n    ? restaurants.find(r => r.id === selectedRestaurant)\n    : null;\n  \n  return (\n    <NavContainer>\n      <NavButton \n        onClick={() => { navigate('/city-selection') }}\n        active={activeTab === 'city'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z\"></path>\n          <circle cx=\"12\" cy=\"9\" r=\"2.5\"></circle>\n        </svg>\n        {selectedCity ? selectedCity.name : 'Город'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => { selectedCity && navigate(selectedRestaurant ? '/home' : '/restaurant-selection') }}\n        disabled={!selectedCity}\n        active={activeTab === 'restaurant'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M17 11H3c-.6 0-1 .4-1 1v9c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9c0-.6-.4-1-1-1Z\"></path>\n          <path d=\"M14 11V6c0-2.8-2.2-5-5-5S4 3.2 4 6v5\"></path>\n          <path d=\"M21 11v9c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-9c0-.6.4-1 1-1h2c.6 0 1 .4 1 1Z\"></path>\n        </svg>\n        {selectedRestaurantData ? selectedRestaurantData.name : 'Ресторан'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('delivery')}\n        active={deliveryMethod === 'delivery'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n          <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n          <path d=\"M5 17H3v-6l2-2h8l3 3h1a2 2 0 0 1 2 2v3h-2\"></path>\n          <path d=\"M15 8h5l-1.5 5h-5\"></path>\n        </svg>\n        Доставка\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('pickup')}\n        active={deliveryMethod === 'pickup'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M4 10h12\"></path>\n          <path d=\"M4 14h9\"></path>\n          <path d=\"M4 18h6\"></path>\n          <path d=\"M18 15v6\"></path>\n          <path d=\"M15 18h6\"></path>\n          <path d=\"m14.5 7.5-8-4-2 3 8 4Z\"></path>\n        </svg>\n        Самовывоз\n      </NavButton>\n    </NavContainer>\n  );\n};\n\nexport default Navigation; ","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  Container, \n  MainContent, \n  Heading, \n  Button,\n  EmptyState,\n  PageTransition\n} from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport CartButton from '../components/CartButton';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\n\nconst CartContainer = styled(PageTransition)`\n  min-height: 70vh;\n`;\n\nconst CartContent = styled.div`\n  margin-bottom: var(--spacing-xl);\n`;\n\nconst CartHeading = styled(Heading)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-lg);\n  \n  svg {\n    margin-right: var(--spacing-xs);\n  }\n`;\n\nconst HeadingActions = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ClearCartButton = styled.button`\n  background-color: transparent;\n  color: #F44336;\n  border: 1px solid #F44336;\n  padding: 8px 12px;\n  border-radius: var(--border-radius-sm);\n  font-size: 0.95rem;\n  font-weight: 500;\n  margin-left: var(--spacing-md);\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  \n  svg {\n    margin-right: 8px;\n  }\n  \n  &:hover {\n    background-color: #F44336;\n    color: white;\n    transform: translateY(-2px);\n  }\n`;\n\nconst CartItemsContainer = styled.div`\n  margin-bottom: var(--spacing-xl);\n`;\n\nconst CartItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--spacing-md);\n  margin-bottom: var(--spacing-md);\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ItemDetails = styled.div`\n  flex: 1;\n`;\n\nconst ItemName = styled.h3`\n  font-size: 1.1rem;\n  margin: 0 0 var(--spacing-xs) 0;\n  color: var(--text-color);\n`;\n\nconst ItemPrice = styled.div`\n  font-weight: 600;\n  color: var(--primary-color);\n`;\n\nconst QuantityContainer = styled.div`\n  display: flex;\n  align-items: center;\n  border-radius: var(--border-radius-sm);\n  overflow: hidden;\n  margin-left: var(--spacing-md);\n`;\n\nconst QuantityButton = styled.button`\n  width: 40px;\n  height: 40px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background-color: var(--primary-light);\n  }\n  \n  &:disabled {\n    background-color: var(--primary-dark);\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst QuantityText = styled.span`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--card-bg);\n  color: var(--text-color);\n  font-weight: 600;\n  font-size: 1.1rem;\n`;\n\nconst ItemControls = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst RemoveButton = styled.button`\n  background-color: #F44336;\n  color: white;\n  border: none;\n  width: 40px;\n  height: 40px;\n  border-radius: var(--border-radius-sm);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: var(--spacing-md);\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: #D32F2F;\n    transform: scale(1.05);\n  }\n`;\n\nconst Summary = styled.div`\n  background-color: var(--card-bg);\n  padding: var(--spacing-lg);\n  border-radius: var(--border-radius-md);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst SummaryRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-md);\n  \n  &:last-child {\n    margin-bottom: 0;\n    padding-top: var(--spacing-md);\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n`;\n\nconst SummaryLabel = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-secondary);\n`;\n\nconst SummaryValue = styled.span`\n  font-weight: 600;\n  color: var(--text-color);\n`;\n\nconst TotalLabel = styled(SummaryLabel)`\n  font-size: 1.1rem;\n  color: var(--text-color);\n`;\n\nconst TotalValue = styled(SummaryValue)`\n  font-size: 1.2rem;\n  color: var(--primary-color);\n`;\n\nconst CheckoutButton = styled(Button)`\n  width: 100%;\n  margin-top: var(--spacing-lg);\n  padding: var(--spacing-md);\n  font-size: 1.1rem;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n  }\n`;\n\nconst CartPage: React.FC = () => {\n  const { cart, updateCartItemQuantity, removeFromCart, clearCart } = useAppContext();\n  const navigate = useNavigate();\n  const { showBackButton, hideBackButton, setBackButtonCallback } = useTelegram();\n  \n  useEffect(() => {\n    showBackButton();\n    \n    setBackButtonCallback(() => {\n      navigate(-1);\n    });\n\n    return () => {\n      hideBackButton();\n    };\n  }, [hideBackButton, navigate, setBackButtonCallback, showBackButton]);\n  \n  const calculateTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  \n  const handleCheckout = () => {\n    navigate('/checkout');\n  };\n  \n  const deliveryFee = 150;\n  const subtotal = calculateTotal();\n  const total = subtotal + deliveryFee;\n\n  const handleIncreaseQuantity = (itemId: number, currentQuantity: number) => {\n    updateCartItemQuantity(itemId, currentQuantity + 1);\n  };\n\n  const handleDecreaseQuantity = (itemId: number, currentQuantity: number) => {\n    if (currentQuantity > 1) {\n      updateCartItemQuantity(itemId, currentQuantity - 1);\n    } else {\n      removeFromCart(itemId);\n    }\n  };\n\n  return (\n    <CartContainer>\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          <CartContent>\n            <CartHeading>\n              <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\n                  <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\n                  <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n                </svg>\n                Корзина\n              </div>\n              {cart.length > 0 && (\n                <HeadingActions>\n                  <span style={{ fontSize: '1.1rem' }}>{cart.length} {cart.length === 1 ? 'товар' : cart.length >= 2 && cart.length <= 4 ? 'товара' : 'товаров'}</span>\n                  <ClearCartButton onClick={clearCart}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <polyline points=\"3 6 5 6 21 6\"></polyline>\n                      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                    </svg>\n                    Очистить корзину\n                  </ClearCartButton>\n                </HeadingActions>\n              )}\n            </CartHeading>\n            \n            {cart.length === 0 ? (\n              <EmptyState>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\n                  <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\n                  <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\n                </svg>\n                <h3>Ваша корзина пуста</h3>\n                <p>Добавьте вкусные блюда в корзину и возвращайтесь!</p>\n                <Button onClick={() => navigate('/home')}>\n                  Посмотреть меню\n                </Button>\n              </EmptyState>\n            ) : (\n              <>\n                <CartItemsContainer>\n                  {cart.map(item => (\n                    <CartItem key={item.id}>\n                      <ItemDetails>\n                        <ItemName>{item.name}</ItemName>\n                        <ItemPrice>₽{item.price}</ItemPrice>\n                      </ItemDetails>\n                      <ItemControls>\n                        <QuantityContainer>\n                          <QuantityButton \n                            onClick={() => handleDecreaseQuantity(item.id, item.quantity)}\n                            aria-label=\"Decrease quantity\"\n                          >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                            </svg>\n                          </QuantityButton>\n                          <QuantityText>{item.quantity}</QuantityText>\n                          <QuantityButton \n                            onClick={() => handleIncreaseQuantity(item.id, item.quantity)}\n                            aria-label=\"Increase quantity\"\n                          >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                            </svg>\n                          </QuantityButton>\n                        </QuantityContainer>\n                        <RemoveButton \n                          onClick={() => removeFromCart(item.id)}\n                          aria-label=\"Remove item\"\n                        >\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                            <polyline points=\"3 6 5 6 21 6\"></polyline>\n                            <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                          </svg>\n                        </RemoveButton>\n                      </ItemControls>\n                    </CartItem>\n                  ))}\n                </CartItemsContainer>\n                \n                <Summary>\n                  <SummaryRow>\n                    <SummaryLabel>Подытог</SummaryLabel>\n                    <SummaryValue>₽{subtotal}</SummaryValue>\n                  </SummaryRow>\n                  <SummaryRow>\n                    <SummaryLabel>Доставка</SummaryLabel>\n                    <SummaryValue>₽{deliveryFee}</SummaryValue>\n                  </SummaryRow>\n                  <SummaryRow>\n                    <TotalLabel>Итого</TotalLabel>\n                    <TotalValue>₽{total}</TotalValue>\n                  </SummaryRow>\n                  \n                  <CheckoutButton onClick={handleCheckout}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                      <polyline points=\"12 6 12 12 16 14\"></polyline>\n                    </svg>\n                    Перейти к оформлению\n                  </CheckoutButton>\n                </Summary>\n              </>\n            )}\n          </CartContent>\n        </MainContent>\n        <CartButton />\n      </Container>\n    </CartContainer>\n  );\n};\n\nexport default CartPage; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Плавающая кнопка корзины в стиле Apple/Nvidia\nconst CartButtonContainer = styled.button`\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 0 4px 16px rgba(var(--primary-color-rgb), 0.4);\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  z-index: 99;\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    stroke-width: 2;\n    transition: transform 0.3s ease;\n  }\n  \n  span {\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    background-color: var(--secondary-color);\n    color: white;\n    font-size: 0.75rem;\n    font-weight: 700;\n    min-width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 4px;\n    border: 2px solid var(--background-color);\n    transform-origin: center;\n    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n  }\n  \n  &:hover {\n    transform: translateY(-4px) scale(1.05);\n    box-shadow: 0 8px 24px rgba(var(--primary-color-rgb), 0.5);\n    \n    svg {\n      transform: scale(1.1);\n    }\n    \n    span {\n      transform: scale(1.1);\n    }\n  }\n  \n  &:active {\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 6px 20px rgba(var(--primary-color-rgb), 0.45);\n  }\n  \n  @media (max-width: 767px) {\n    bottom: 80px;\n    right: 16px;\n    width: 52px;\n    height: 52px;\n  }\n`;\n\n// Анимация появления для количества товаров в корзине\nconst cartItemAppear = `\n  @keyframes cartItemAppear {\n    0% {\n      transform: scale(0);\n      opacity: 0;\n    }\n    50% {\n      transform: scale(1.2);\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n\nconst CartButton: React.FC = () => {\n  const navigate = useNavigate();\n  const { cart } = useAppContext();\n  \n  // Подсчитываем общее количество товаров в корзине\n  const totalItems = cart.reduce((total, item) => total + item.quantity, 0);\n  \n  return (\n    <CartButtonContainer onClick={() => navigate('/cart')}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <circle cx=\"8\" cy=\"21\" r=\"1\"></circle>\n        <circle cx=\"19\" cy=\"21\" r=\"1\"></circle>\n        <path d=\"M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12\"></path>\n      </svg>\n      {totalItems > 0 && <span>{totalItems}</span>}\n      <style>\n        {cartItemAppear}\n      </style>\n    </CartButtonContainer>\n  );\n};\n\nexport default CartButton; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Современный контейнер шапки в стиле Apple/Nvidia\nconst HeaderContainer = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-md) 0;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      transparent,\n      var(--border-color),\n      transparent\n    );\n    opacity: 0.6;\n  }\n`;\n\n// Контейнер логотипа с анимацией\nconst LogoContainer = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n  \n  img {\n    height: 38px;\n    object-fit: contain;\n    \n    @media (max-width: 767px) {\n      height: 32px;\n    }\n  }\n`;\n\n// Анимированная кнопка профиля\nconst ProfileButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-color);\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom right, \n                 rgba(var(--primary-color-rgb), 0.1), \n                 rgba(var(--primary-color-rgb), 0));\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    z-index: -1;\n    border-radius: 50%;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    color: var(--primary-color);\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    svg {\n      stroke-width: 2.2;\n    }\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    transition: all 0.3s ease;\n  }\n`;\n\n// Компонент логотипа с изображением\nconst Logo = styled.img`\n  height: 38px;\n  object-fit: contain;\n  transition: filter 0.3s ease;\n  \n  @media (max-width: 767px) {\n    height: 32px;\n  }\n`;\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n  const { selectedCity, selectedRestaurant } = useAppContext();\n\n  return (\n    <HeaderContainer>\n      <LogoContainer onClick={() => navigate('/')}>\n        <Logo src=\"/assets/images/logo.png\" alt=\"Kulcha\" />\n      </LogoContainer>\n      \n      <ProfileButton onClick={() => navigate('/profile')}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n          <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n        </svg>\n      </ProfileButton>\n    </HeaderContainer>\n  );\n};\n\nexport default Header; "],"names":["NavContainer","styled","nav","NavButton","button","props","active","Navigation","navigate","useNavigate","location","useLocation","selectedCity","selectedRestaurant","restaurants","deliveryMethod","setDeliveryMethod","useAppContext","activeTab","setActiveTab","useState","useEffect","pathname","includes","selectedRestaurantData","find","r","id","_jsxs","children","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_jsx","d","cx","cy","name","disabled","CartContainer","PageTransition","CartContent","div","CartHeading","Heading","HeadingActions","ClearCartButton","CartItemsContainer","CartItem","ItemDetails","ItemName","h3","ItemPrice","QuantityContainer","QuantityButton","QuantityText","span","ItemControls","RemoveButton","Summary","SummaryRow","SummaryLabel","SummaryValue","TotalLabel","TotalValue","CheckoutButton","Button","CartPage","cart","updateCartItemQuantity","removeFromCart","clearCart","showBackButton","hideBackButton","setBackButtonCallback","useTelegram","subtotal","reduce","total","item","price","quantity","Container","Header","MainContent","length","style","fontSize","points","EmptyState","_Fragment","map","handleDecreaseQuantity","itemId","currentQuantity","x1","y1","x2","y2","handleIncreaseQuantity","handleCheckout","CartButton","CartButtonContainer","totalItems","HeaderContainer","header","LogoContainer","ProfileButton","Logo","img","src","alt"],"sourceRoot":""}