{"ast":null,"code":"import React,{createContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const AppContext=/*#__PURE__*/createContext(undefined);// Mock data for the demo\nconst mockCities=[{id:1,name:'Moscow'},{id:2,name:'Saint Petersburg'},{id:3,name:'Novosibirsk'}];const mockRestaurants=[{id:1,name:'Kulcha Central',cityId:1,address:'Red Square, 1'},{id:2,name:'Kulcha Express',cityId:1,address:'Tverskaya St, 7'},{id:3,name:'Kulcha Gourmet',cityId:2,address:'Nevsky Prospect, 28'},{id:4,name:'Kulcha Family',cityId:3,address:'Lenin Square, 1'}];const mockFoodItems=[{id:1,name:'Butter Chicken',price:550,image:'/assets/images/butter-chicken.jpg',description:'Chicken curry with a spiced tomato and butter sauce'},{id:2,name:'Paneer Tikka',price:450,image:'/assets/images/paneer-tikka.jpg',description:'Chunks of cottage cheese marinated with spices and grilled'},{id:3,name:'Chicken Biryani',price:600,image:'/assets/images/chicken-biryani.jpg',description:'Fragrant rice dish with chicken, spices and herbs'},{id:4,name:'Masala Dosa',price:300,image:'/assets/images/masala-dosa.jpg',description:'Crispy rice pancake with spiced potato filling'},{id:5,name:'Vegetable Samosa',price:150,image:'/assets/images/vegetable-samosa.jpg',description:'Triangular pastry filled with spiced vegetables'},{id:6,name:'Gulab Jamun',price:200,image:'/assets/images/gulab-jamun.jpg',description:'Sweet milk solid balls soaked in flavored syrup'}];export const AppProvider=_ref=>{let{children}=_ref;const[cities]=useState(mockCities);const[restaurants]=useState(mockRestaurants);const[foodItems]=useState(mockFoodItems);const[cart,setCart]=useState([]);const[cityState,setCityState]=useState(null);const[restaurantState,setRestaurantState]=useState(null);const[deliveryMethod,setDeliveryMethod]=useState('delivery');const[orderHistory,setOrderHistory]=useState([]);const[userAddress,setUserAddress]=useState(null);const[menuItems,setMenuItems]=useState([{id:1,name:'Баттер Чикен',price:450,description:'Нежная курица в богатом сливочно-томатном соусе с маслом и ароматными специями.',image:'/assets/images/paneer-tikka.jpg'},{id:2,name:'Панир Тикка',price:350,description:'Кубики домашнего сыра, маринованные в специях и обжаренные до совершенства.',image:'/assets/images/paneer-tikka.jpg'},{id:3,name:'Чикен Бирьяни',price:420,description:'Ароматный рис басмати, приготовленный с нежной курицей и пряными специями.',image:'/assets/images/chicken-biryani.jpg'},{id:4,name:'Самоса',price:120,description:'Хрустящие пирожки с начинкой из пряного картофеля и гороха.',image:'/assets/images/vegetable-samosa.jpg'},{id:5,name:'Чесночный Наан',price:80,description:'Мягкая лепешка с чесноком и маслом, запеченная в тандыре.',image:'/assets/images/masala-dosa.jpg'},{id:6,name:'Гулаб Джамун',price:150,description:'Сладкие шарики из молока, пропитанные сахарным сиропом с кардамоном и розовой водой.',image:'/assets/images/gulab-jamun.jpg'}]);const setSelectedCity=city=>{setCityState(city);if(!city){setRestaurantState(null);}};const setSelectedRestaurant=restaurant=>{setRestaurantState(restaurant);};// Get derived values for public API\nconst selectedCity=cityState;const selectedRestaurant=restaurantState;const addToCart=item=>{setCart(prevCart=>{const existingItem=prevCart.find(cartItem=>cartItem.id===item.id);if(existingItem){return prevCart.map(cartItem=>cartItem.id===item.id?{...cartItem,quantity:cartItem.quantity+1}:cartItem);}else{return[...prevCart,{...item,quantity:1}];}});};const removeFromCart=itemId=>{setCart(prevCart=>prevCart.filter(item=>item.id!==itemId));};const updateCartItemQuantity=(itemId,quantity)=>{setCart(prevCart=>prevCart.map(item=>item.id===itemId?{...item,quantity}:item));};const clearCart=()=>{setCart([]);};const updateUserAddress=address=>{setUserAddress(address);};const placeOrder=()=>{if(cart.length===0)return;const newOrder={id:Date.now(),items:[...cart],totalAmount:cart.reduce((sum,item)=>sum+item.price*item.quantity,0),deliveryMethod,date:new Date().toISOString(),status:'pending'};setOrderHistory(prev=>[newOrder,...prev]);clearCart();};const increaseQuantity=itemId=>{setCart(prevCart=>prevCart.map(item=>item.id===itemId?{...item,quantity:item.quantity+1}:item));};const decreaseQuantity=itemId=>{setCart(prevCart=>{var _updatedCart$find;const updatedCart=prevCart.map(item=>item.id===itemId?{...item,quantity:Math.max(1,item.quantity-1)}:item);// If quantity is 0, remove the item\nif(((_updatedCart$find=updatedCart.find(item=>item.id===itemId))===null||_updatedCart$find===void 0?void 0:_updatedCart$find.quantity)===0){return updatedCart.filter(item=>item.id!==itemId);}return updatedCart;});};return/*#__PURE__*/_jsx(AppContext.Provider,{value:{cities,restaurants,foodItems,cart,selectedCity,selectedRestaurant,deliveryMethod,orderHistory,userAddress,setSelectedCity,setSelectedRestaurant,setDeliveryMethod,menuItems,addToCart,removeFromCart,updateCartItemQuantity,clearCart,updateUserAddress,placeOrder,increaseQuantity,decreaseQuantity},children:children});};export const useAppContext=()=>{const context=React.useContext(AppContext);if(context===undefined){throw new Error('useAppContext must be used within an AppProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","AppContext","undefined","mockCities","id","name","mockRestaurants","cityId","address","mockFoodItems","price","image","description","AppProvider","_ref","children","cities","restaurants","foodItems","cart","setCart","cityState","setCityState","restaurantState","setRestaurantState","deliveryMethod","setDeliveryMethod","orderHistory","setOrderHistory","userAddress","setUserAddress","menuItems","setMenuItems","setSelectedCity","city","setSelectedRestaurant","restaurant","selectedCity","selectedRestaurant","addToCart","item","prevCart","existingItem","find","cartItem","map","quantity","removeFromCart","itemId","filter","updateCartItemQuantity","clearCart","updateUserAddress","placeOrder","length","newOrder","Date","now","items","totalAmount","reduce","sum","date","toISOString","status","prev","increaseQuantity","decreaseQuantity","_updatedCart$find","updatedCart","Math","max","Provider","value","useAppContext","context","useContext","Error"],"sources":["C:/Users/AsusLaptop/Desktop/Kulcha/frontend/kulcha-app/src/contexts/AppContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ntype DeliveryMethod = 'delivery' | 'pickup';\r\n\r\nexport interface FoodItem {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface CartItem extends FoodItem {\r\n  quantity: number;\r\n}\r\n\r\nexport interface Order {\r\n  id: number;\r\n  items: CartItem[];\r\n  totalAmount: number;\r\n  deliveryMethod: DeliveryMethod;\r\n  date: string;\r\n  status: 'pending' | 'delivered' | 'cancelled';\r\n}\r\n\r\nexport interface City {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface Restaurant {\r\n  id: number;\r\n  name: string;\r\n  cityId: number;\r\n  address: string;\r\n  image?: string;\r\n}\r\n\r\nexport interface UserAddress {\r\n  street: string;\r\n  houseNumber: string;\r\n  apartment?: string;\r\n  floor?: string;\r\n  comment?: string;\r\n}\r\n\r\nexport interface MenuItem {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  description?: string;\r\n}\r\n\r\nexport interface AppContextProps {\r\n  cities: City[];\r\n  restaurants: Restaurant[];\r\n  foodItems: FoodItem[];\r\n  cart: CartItem[];\r\n  selectedCity: City | null;\r\n  selectedRestaurant: Restaurant | null;\r\n  deliveryMethod: DeliveryMethod;\r\n  orderHistory: Order[];\r\n  userAddress: UserAddress | null;\r\n  setSelectedCity: (city: City | null) => void;\r\n  setSelectedRestaurant: (restaurant: Restaurant | null) => void;\r\n  setDeliveryMethod: (method: DeliveryMethod) => void;\r\n  menuItems: MenuItem[];\r\n  addToCart: (item: MenuItem) => void;\r\n  removeFromCart: (itemId: number) => void;\r\n  updateCartItemQuantity: (itemId: number, quantity: number) => void;\r\n  clearCart: () => void;\r\n  updateUserAddress: (address: UserAddress) => void;\r\n  placeOrder: () => void;\r\n  increaseQuantity: (itemId: number) => void;\r\n  decreaseQuantity: (itemId: number) => void;\r\n}\r\n\r\nexport const AppContext = createContext<AppContextProps | undefined>(undefined);\r\n\r\n// Mock data for the demo\r\nconst mockCities: City[] = [\r\n  { id: 1, name: 'Moscow' },\r\n  { id: 2, name: 'Saint Petersburg' },\r\n  { id: 3, name: 'Novosibirsk' },\r\n];\r\n\r\nconst mockRestaurants: Restaurant[] = [\r\n  { id: 1, name: 'Kulcha Central', cityId: 1, address: 'Red Square, 1' },\r\n  { id: 2, name: 'Kulcha Express', cityId: 1, address: 'Tverskaya St, 7' },\r\n  { id: 3, name: 'Kulcha Gourmet', cityId: 2, address: 'Nevsky Prospect, 28' },\r\n  { id: 4, name: 'Kulcha Family', cityId: 3, address: 'Lenin Square, 1' },\r\n];\r\n\r\nconst mockFoodItems: FoodItem[] = [\r\n  { \r\n    id: 1, \r\n    name: 'Butter Chicken', \r\n    price: 550, \r\n    image: '/assets/images/butter-chicken.jpg',\r\n    description: 'Chicken curry with a spiced tomato and butter sauce'\r\n  },\r\n  { \r\n    id: 2, \r\n    name: 'Paneer Tikka', \r\n    price: 450, \r\n    image: '/assets/images/paneer-tikka.jpg',\r\n    description: 'Chunks of cottage cheese marinated with spices and grilled'\r\n  },\r\n  { \r\n    id: 3, \r\n    name: 'Chicken Biryani', \r\n    price: 600, \r\n    image: '/assets/images/chicken-biryani.jpg',\r\n    description: 'Fragrant rice dish with chicken, spices and herbs'\r\n  },\r\n  { \r\n    id: 4, \r\n    name: 'Masala Dosa', \r\n    price: 300, \r\n    image: '/assets/images/masala-dosa.jpg',\r\n    description: 'Crispy rice pancake with spiced potato filling'\r\n  },\r\n  { \r\n    id: 5, \r\n    name: 'Vegetable Samosa', \r\n    price: 150, \r\n    image: '/assets/images/vegetable-samosa.jpg',\r\n    description: 'Triangular pastry filled with spiced vegetables'\r\n  },\r\n  { \r\n    id: 6, \r\n    name: 'Gulab Jamun', \r\n    price: 200, \r\n    image: '/assets/images/gulab-jamun.jpg',\r\n    description: 'Sweet milk solid balls soaked in flavored syrup'\r\n  },\r\n];\r\n\r\ninterface AppProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AppProvider: React.FC<AppProviderProps> = ({ children }) => {\r\n  const [cities] = useState<City[]>(mockCities);\r\n  const [restaurants] = useState<Restaurant[]>(mockRestaurants);\r\n  const [foodItems] = useState<FoodItem[]>(mockFoodItems);\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n  const [cityState, setCityState] = useState<City | null>(null);\r\n  const [restaurantState, setRestaurantState] = useState<Restaurant | null>(null);\r\n  const [deliveryMethod, setDeliveryMethod] = useState<DeliveryMethod>('delivery');\r\n  const [orderHistory, setOrderHistory] = useState<Order[]>([]);\r\n  const [userAddress, setUserAddress] = useState<UserAddress | null>(null);\r\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([\r\n    {\r\n      id: 1,\r\n      name: 'Баттер Чикен',\r\n      price: 450,\r\n      description: 'Нежная курица в богатом сливочно-томатном соусе с маслом и ароматными специями.',\r\n      image: '/assets/images/paneer-tikka.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Панир Тикка',\r\n      price: 350,\r\n      description: 'Кубики домашнего сыра, маринованные в специях и обжаренные до совершенства.',\r\n      image: '/assets/images/paneer-tikka.jpg'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Чикен Бирьяни',\r\n      price: 420,\r\n      description: 'Ароматный рис басмати, приготовленный с нежной курицей и пряными специями.',\r\n      image: '/assets/images/chicken-biryani.jpg'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Самоса',\r\n      price: 120,\r\n      description: 'Хрустящие пирожки с начинкой из пряного картофеля и гороха.',\r\n      image: '/assets/images/vegetable-samosa.jpg'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Чесночный Наан',\r\n      price: 80,\r\n      description: 'Мягкая лепешка с чесноком и маслом, запеченная в тандыре.',\r\n      image: '/assets/images/masala-dosa.jpg'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Гулаб Джамун',\r\n      price: 150,\r\n      description: 'Сладкие шарики из молока, пропитанные сахарным сиропом с кардамоном и розовой водой.',\r\n      image: '/assets/images/gulab-jamun.jpg'\r\n    }\r\n  ]);\r\n\r\n  const setSelectedCity = (city: City | null) => {\r\n    setCityState(city);\r\n    if (!city) {\r\n      setRestaurantState(null);\r\n    }\r\n  };\r\n\r\n  const setSelectedRestaurant = (restaurant: Restaurant | null) => {\r\n    setRestaurantState(restaurant);\r\n  };\r\n\r\n  // Get derived values for public API\r\n  const selectedCity = cityState;\r\n  const selectedRestaurant = restaurantState;\r\n\r\n  const addToCart = (item: MenuItem) => {\r\n    setCart(prevCart => {\r\n      const existingItem = prevCart.find(cartItem => cartItem.id === item.id);\r\n      \r\n      if (existingItem) {\r\n        return prevCart.map(cartItem => \r\n          cartItem.id === item.id \r\n            ? { ...cartItem, quantity: cartItem.quantity + 1 } \r\n            : cartItem\r\n        );\r\n      } else {\r\n        return [...prevCart, { ...item, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (itemId: number) => {\r\n    setCart(prevCart => prevCart.filter(item => item.id !== itemId));\r\n  };\r\n\r\n  const updateCartItemQuantity = (itemId: number, quantity: number) => {\r\n    setCart(prevCart => \r\n      prevCart.map(item => \r\n        item.id === itemId ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const updateUserAddress = (address: UserAddress) => {\r\n    setUserAddress(address);\r\n  };\r\n\r\n  const placeOrder = () => {\r\n    if (cart.length === 0) return;\r\n\r\n    const newOrder: Order = {\r\n      id: Date.now(),\r\n      items: [...cart],\r\n      totalAmount: cart.reduce((sum, item) => sum + (item.price * item.quantity), 0),\r\n      deliveryMethod,\r\n      date: new Date().toISOString(),\r\n      status: 'pending',\r\n    };\r\n\r\n    setOrderHistory(prev => [newOrder, ...prev]);\r\n    clearCart();\r\n  };\r\n\r\n  const increaseQuantity = (itemId: number) => {\r\n    setCart(prevCart => \r\n      prevCart.map(item => \r\n        item.id === itemId ? { ...item, quantity: item.quantity + 1 } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const decreaseQuantity = (itemId: number) => {\r\n    setCart(prevCart => {\r\n      const updatedCart = prevCart.map(item => \r\n        item.id === itemId ? { ...item, quantity: Math.max(1, item.quantity - 1) } : item\r\n      );\r\n      \r\n      // If quantity is 0, remove the item\r\n      if (updatedCart.find(item => item.id === itemId)?.quantity === 0) {\r\n        return updatedCart.filter(item => item.id !== itemId);\r\n      }\r\n      \r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        cities,\r\n        restaurants,\r\n        foodItems,\r\n        cart,\r\n        selectedCity,\r\n        selectedRestaurant,\r\n        deliveryMethod,\r\n        orderHistory,\r\n        userAddress,\r\n        setSelectedCity,\r\n        setSelectedRestaurant,\r\n        setDeliveryMethod,\r\n        menuItems,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateCartItemQuantity,\r\n        clearCart,\r\n        updateUserAddress,\r\n        placeOrder,\r\n        increaseQuantity,\r\n        decreaseQuantity,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => {\r\n  const context = React.useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}