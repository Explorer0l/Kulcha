{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AsusLaptop\\\\Desktop\\\\Kulcha\\\\frontend\\\\kulcha-app\\\\src\\\\pages\\\\RestaurantSelectionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, MainContent, ProfileHeading, FoodGrid, FoodCard, FoodInfo, FoodName, AddToCartButton } from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantCard = styled(FoodCard)`\n  cursor: pointer;\n  transition: transform 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c = RestaurantCard;\nconst RestaurantName = styled(FoodName)`\n  text-align: center;\n  margin-top: 5px;\n`;\n_c2 = RestaurantName;\nconst RestaurantAddress = styled.p`\n  font-size: 14px;\n  color: #AAA;\n  margin: 5px 0 15px;\n  text-align: center;\n`;\n_c3 = RestaurantAddress;\nconst RestaurantSelectionPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    restaurants,\n    selectedCity,\n    selectRestaurant\n  } = useAppContext();\n  const {\n    showBackButton,\n    hideBackButton,\n    setBackButtonCallback\n  } = useTelegram();\n  const filteredRestaurants = useMemo(() => {\n    if (!selectedCity) return [];\n    return restaurants.filter(restaurant => restaurant.cityId === selectedCity.id);\n  }, [restaurants, selectedCity]);\n  useEffect(() => {\n    if (!selectedCity) {\n      navigate('/city-selection');\n    }\n  }, [selectedCity, navigate]);\n  useEffect(() => {\n    showBackButton();\n    setBackButtonCallback(() => {\n      navigate('/city-selection');\n    });\n    return () => {\n      hideBackButton();\n    };\n  }, [hideBackButton, navigate, setBackButtonCallback, showBackButton]);\n  const handleRestaurantSelect = restaurantId => {\n    const restaurant = restaurants.find(r => r.id === restaurantId);\n    if (restaurant) {\n      selectRestaurant(restaurant);\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(ProfileHeading, {\n        children: [\"Select a restaurant in \", selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), filteredRestaurants.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurants available in this city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FoodGrid, {\n        children: filteredRestaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n          onClick: () => handleRestaurantSelect(restaurant.id),\n          children: /*#__PURE__*/_jsxDEV(FoodInfo, {\n            children: [/*#__PURE__*/_jsxDEV(RestaurantName, {\n              children: restaurant.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(RestaurantAddress, {\n              children: restaurant.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AddToCartButton, {\n              children: \"Select Restaurant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, restaurant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantSelectionPage, \"zKf32CdWOe/ftvFqT6Jpq7LWP1g=\", false, function () {\n  return [useNavigate, useAppContext, useTelegram];\n});\n_c4 = RestaurantSelectionPage;\nexport default RestaurantSelectionPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RestaurantCard\");\n$RefreshReg$(_c2, \"RestaurantName\");\n$RefreshReg$(_c3, \"RestaurantAddress\");\n$RefreshReg$(_c4, \"RestaurantSelectionPage\");","map":{"version":3,"names":["React","useEffect","useMemo","useNavigate","Container","MainContent","ProfileHeading","FoodGrid","FoodCard","FoodInfo","FoodName","AddToCartButton","Header","Navigation","useAppContext","useTelegram","styled","jsxDEV","_jsxDEV","RestaurantCard","_c","RestaurantName","_c2","RestaurantAddress","p","_c3","RestaurantSelectionPage","_s","navigate","restaurants","selectedCity","selectRestaurant","showBackButton","hideBackButton","setBackButtonCallback","filteredRestaurants","filter","restaurant","cityId","id","handleRestaurantSelect","restaurantId","find","r","children","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","onClick","address","_c4","$RefreshReg$"],"sources":["C:/Users/AsusLaptop/Desktop/Kulcha/frontend/kulcha-app/src/pages/RestaurantSelectionPage.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  Container, \r\n  MainContent, \r\n  ProfileHeading, \r\n  FoodGrid, \r\n  FoodCard,\r\n  FoodInfo,\r\n  FoodName,\r\n  AddToCartButton,\r\n  FormGroup\r\n} from '../styles/Components';\r\nimport Header from '../components/Header';\r\nimport Navigation from '../components/Navigation';\r\nimport { useAppContext } from '../contexts/AppContext';\r\nimport useTelegram from '../hooks/useTelegram';\r\nimport styled from 'styled-components';\r\n\r\nconst RestaurantCard = styled(FoodCard)`\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst RestaurantName = styled(FoodName)`\r\n  text-align: center;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst RestaurantAddress = styled.p`\r\n  font-size: 14px;\r\n  color: #AAA;\r\n  margin: 5px 0 15px;\r\n  text-align: center;\r\n`;\r\n\r\nconst RestaurantSelectionPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { \r\n    restaurants, \r\n    selectedCity, \r\n    selectRestaurant \r\n  } = useAppContext();\r\n  \r\n  const { \r\n    showBackButton, \r\n    hideBackButton, \r\n    setBackButtonCallback\r\n  } = useTelegram();\r\n\r\n  const filteredRestaurants = useMemo(() => {\r\n    if (!selectedCity) return [];\r\n    return restaurants.filter(restaurant => restaurant.cityId === selectedCity.id);\r\n  }, [restaurants, selectedCity]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedCity) {\r\n      navigate('/city-selection');\r\n    }\r\n  }, [selectedCity, navigate]);\r\n\r\n  useEffect(() => {\r\n    showBackButton();\r\n    \r\n    setBackButtonCallback(() => {\r\n      navigate('/city-selection');\r\n    });\r\n\r\n    return () => {\r\n      hideBackButton();\r\n    };\r\n  }, [hideBackButton, navigate, setBackButtonCallback, showBackButton]);\r\n\r\n  const handleRestaurantSelect = (restaurantId: number) => {\r\n    const restaurant = restaurants.find(r => r.id === restaurantId);\r\n    if (restaurant) {\r\n      selectRestaurant(restaurant);\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Navigation />\r\n      <MainContent>\r\n        <ProfileHeading>Select a restaurant in {selectedCity?.name}</ProfileHeading>\r\n        \r\n        {filteredRestaurants.length === 0 ? (\r\n          <p>No restaurants available in this city</p>\r\n        ) : (\r\n          <FoodGrid>\r\n            {filteredRestaurants.map(restaurant => (\r\n              <RestaurantCard \r\n                key={restaurant.id} \r\n                onClick={() => handleRestaurantSelect(restaurant.id)}\r\n              >\r\n                <FoodInfo>\r\n                  <RestaurantName>{restaurant.name}</RestaurantName>\r\n                  <RestaurantAddress>{restaurant.address}</RestaurantAddress>\r\n                  <AddToCartButton>\r\n                    Select Restaurant\r\n                  </AddToCartButton>\r\n                </FoodInfo>\r\n              </RestaurantCard>\r\n            ))}\r\n          </FoodGrid>\r\n        )}\r\n      </MainContent>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RestaurantSelectionPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}