{"ast":null,"code":"import React,{useEffect}from'react';import{useNavigate}from'react-router-dom';import{Container,MainContent,ProfileHeading,FormGroup,Label,Select}from'../styles/Components';import Header from'../components/Header';import Navigation from'../components/Navigation';import{useAppContext}from'../contexts/AppContext';import useTelegram from'../hooks/useTelegram';import{FoodGrid,CityCard,CityName,AddToCartButton}from'../styles/Components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CitySelectionPage=()=>{const navigate=useNavigate();const{cities,selectedCity,setSelectedCity}=useAppContext();const{showBackButton,hideBackButton,setBackButtonCallback,showMainButton,setMainButtonCallback}=useTelegram();useEffect(()=>{if(cities.length===0){// If no cities available, redirect back to home\nnavigate('/');}},[cities,navigate]);useEffect(()=>{hideBackButton();showMainButton('Continue');setMainButtonCallback(()=>{if(selectedCity){navigate('/restaurants');}});return()=>{hideBackButton();};},[hideBackButton,navigate,selectedCity,setBackButtonCallback,setMainButtonCallback,showMainButton]);const handleCityChange=e=>{const cityId=parseInt(e.target.value,10);const city=cities.find(c=>c.id===cityId);if(city){setSelectedCity(city);}};const handleCitySelect=cityId=>{const city=cities.find(c=>c.id===cityId);if(city){setSelectedCity(city);navigate('/restaurants');}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsxs(MainContent,{children:[/*#__PURE__*/_jsx(ProfileHeading,{children:\"Select your city\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"city\",children:\"Select City\"}),/*#__PURE__*/_jsxs(Select,{id:\"city\",value:(selectedCity===null||selectedCity===void 0?void 0:selectedCity.id)||'',onChange:handleCityChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select a city\"}),cities.map(city=>/*#__PURE__*/_jsx(\"option\",{value:city.id,children:city.name},city.id))]})]}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'30px'},children:\"Popular Cities\"}),/*#__PURE__*/_jsx(FoodGrid,{children:cities.map(city=>/*#__PURE__*/_jsxs(CityCard,{onClick:()=>handleCitySelect(city.id),children:[/*#__PURE__*/_jsx(CityName,{children:city.name}),/*#__PURE__*/_jsx(AddToCartButton,{children:\"Select City\"})]},city.id))})]})]})]});};export default CitySelectionPage;","map":{"version":3,"names":["React","useEffect","useNavigate","Container","MainContent","ProfileHeading","FormGroup","Label","Select","Header","Navigation","useAppContext","useTelegram","FoodGrid","CityCard","CityName","AddToCartButton","jsx","_jsx","jsxs","_jsxs","CitySelectionPage","navigate","cities","selectedCity","setSelectedCity","showBackButton","hideBackButton","setBackButtonCallback","showMainButton","setMainButtonCallback","length","handleCityChange","e","cityId","parseInt","target","value","city","find","c","id","handleCitySelect","children","htmlFor","onChange","disabled","map","name","style","marginTop","onClick"],"sources":["C:/Users/AsusLaptop/Desktop/Kulcha/frontend/kulcha-app/src/pages/CitySelectionPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, MainContent, ProfileHeading, FormGroup, Label, Select } from '../styles/Components';\r\nimport Header from '../components/Header';\r\nimport Navigation from '../components/Navigation';\r\nimport { useAppContext } from '../contexts/AppContext';\r\nimport useTelegram from '../hooks/useTelegram';\r\nimport { FoodGrid, CityCard, CityName, AddToCartButton } from '../styles/Components';\r\n\r\nconst CitySelectionPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { cities, selectedCity, setSelectedCity } = useAppContext();\r\n  const { showBackButton, hideBackButton, setBackButtonCallback, showMainButton, setMainButtonCallback } = useTelegram();\r\n\r\n  useEffect(() => {\r\n    if (cities.length === 0) {\r\n      // If no cities available, redirect back to home\r\n      navigate('/');\r\n    }\r\n  }, [cities, navigate]);\r\n\r\n  useEffect(() => {\r\n    hideBackButton();\r\n    showMainButton('Continue');\r\n    \r\n    setMainButtonCallback(() => {\r\n      if (selectedCity) {\r\n        navigate('/restaurants');\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      hideBackButton();\r\n    };\r\n  }, [hideBackButton, navigate, selectedCity, setBackButtonCallback, setMainButtonCallback, showMainButton]);\r\n\r\n  const handleCityChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const cityId = parseInt(e.target.value, 10);\r\n    const city = cities.find(c => c.id === cityId);\r\n    if (city) {\r\n      setSelectedCity(city);\r\n    }\r\n  };\r\n\r\n  const handleCitySelect = (cityId: number) => {\r\n    const city = cities.find(c => c.id === cityId);\r\n    if (city) {\r\n      setSelectedCity(city);\r\n      navigate('/restaurants');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Navigation />\r\n      <MainContent>\r\n        <ProfileHeading>Select your city</ProfileHeading>\r\n        <div>\r\n          <FormGroup>\r\n            <Label htmlFor=\"city\">Select City</Label>\r\n            <Select \r\n              id=\"city\" \r\n              value={selectedCity?.id || ''} \r\n              onChange={handleCityChange}\r\n            >\r\n              <option value=\"\" disabled>Select a city</option>\r\n              {cities.map(city => (\r\n                <option key={city.id} value={city.id}>\r\n                  {city.name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <h3 style={{ marginTop: '30px' }}>Popular Cities</h3>\r\n          <FoodGrid>\r\n            {cities.map(city => (\r\n              <CityCard \r\n                key={city.id} \r\n                onClick={() => handleCitySelect(city.id)}\r\n              >\r\n                <CityName>{city.name}</CityName>\r\n                <AddToCartButton>\r\n                  Select City\r\n                </AddToCartButton>\r\n              </CityCard>\r\n            ))}\r\n          </FoodGrid>\r\n        </div>\r\n      </MainContent>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CitySelectionPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}