{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AsusLaptop\\\\Desktop\\\\Kulcha\\\\frontend\\\\kulcha-app\\\\src\\\\pages\\\\CitySelectionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, MainContent, ProfileHeading, FormGroup, Label, Select } from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport CartButton from '../components/CartButton';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\nimport { FoodGrid, CityCard, CityName, AddToCartButton } from '../styles/Components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySelectionPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    cities,\n    selectedCity,\n    setSelectedCity\n  } = useAppContext();\n  const {\n    showBackButton,\n    hideBackButton,\n    setBackButtonCallback,\n    showMainButton,\n    setMainButtonCallback\n  } = useTelegram();\n  useEffect(() => {\n    if (cities.length === 0) {\n      // If no cities available, redirect back to home\n      navigate('/');\n    }\n  }, [cities, navigate]);\n  useEffect(() => {\n    hideBackButton();\n    showMainButton('Continue');\n    setMainButtonCallback(() => {\n      if (selectedCity) {\n        navigate('/restaurants');\n      }\n    });\n    return () => {\n      hideBackButton();\n    };\n  }, [hideBackButton, navigate, selectedCity, setBackButtonCallback, setMainButtonCallback, showMainButton]);\n  const handleCityChange = e => {\n    const cityId = parseInt(e.target.value, 10);\n    const city = cities.find(c => c.id === cityId);\n    if (city) {\n      setSelectedCity(city);\n    }\n  };\n  const handleCitySelect = cityId => {\n    const city = cities.find(c => c.id === cityId);\n    if (city) {\n      setSelectedCity(city);\n      navigate('/restaurant-selection');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(ProfileHeading, {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"city\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"city\",\n            value: (selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.id) || '',\n            onChange: handleCityChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city.id,\n              children: city.name\n            }, city.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: \"Popular Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FoodGrid, {\n          children: cities.map(city => /*#__PURE__*/_jsxDEV(CityCard, {\n            onClick: () => handleCitySelect(city.id),\n            children: [/*#__PURE__*/_jsxDEV(CityName, {\n              children: city.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddToCartButton, {\n              children: \"Select City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, city.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelectionPage, \"Y5OuWSPA/vNSAAe+ts7O1SqwPrc=\", false, function () {\n  return [useNavigate, useAppContext, useTelegram];\n});\n_c = CitySelectionPage;\nexport default CitySelectionPage;\nvar _c;\n$RefreshReg$(_c, \"CitySelectionPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","Container","MainContent","ProfileHeading","FormGroup","Label","Select","Header","Navigation","CartButton","useAppContext","useTelegram","FoodGrid","CityCard","CityName","AddToCartButton","jsxDEV","_jsxDEV","CitySelectionPage","_s","navigate","cities","selectedCity","setSelectedCity","showBackButton","hideBackButton","setBackButtonCallback","showMainButton","setMainButtonCallback","length","handleCityChange","e","cityId","parseInt","target","value","city","find","c","id","handleCitySelect","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","disabled","map","name","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AsusLaptop/Desktop/Kulcha/frontend/kulcha-app/src/pages/CitySelectionPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, MainContent, ProfileHeading, FormGroup, Label, Select } from '../styles/Components';\r\nimport Header from '../components/Header';\r\nimport Navigation from '../components/Navigation';\r\nimport CartButton from '../components/CartButton';\r\nimport { useAppContext } from '../contexts/AppContext';\r\nimport useTelegram from '../hooks/useTelegram';\r\nimport { FoodGrid, CityCard, CityName, AddToCartButton } from '../styles/Components';\r\n\r\nconst CitySelectionPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { cities, selectedCity, setSelectedCity } = useAppContext();\r\n  const { showBackButton, hideBackButton, setBackButtonCallback, showMainButton, setMainButtonCallback } = useTelegram();\r\n\r\n  useEffect(() => {\r\n    if (cities.length === 0) {\r\n      // If no cities available, redirect back to home\r\n      navigate('/');\r\n    }\r\n  }, [cities, navigate]);\r\n\r\n  useEffect(() => {\r\n    hideBackButton();\r\n    showMainButton('Continue');\r\n    \r\n    setMainButtonCallback(() => {\r\n      if (selectedCity) {\r\n        navigate('/restaurants');\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      hideBackButton();\r\n    };\r\n  }, [hideBackButton, navigate, selectedCity, setBackButtonCallback, setMainButtonCallback, showMainButton]);\r\n\r\n  const handleCityChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const cityId = parseInt(e.target.value, 10);\r\n    const city = cities.find(c => c.id === cityId);\r\n    if (city) {\r\n      setSelectedCity(city);\r\n    }\r\n  };\r\n\r\n  const handleCitySelect = (cityId: number) => {\r\n    const city = cities.find(c => c.id === cityId);\r\n    if (city) {\r\n      setSelectedCity(city);\r\n      navigate('/restaurant-selection');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Navigation />\r\n      <MainContent>\r\n        <ProfileHeading>Выберите город</ProfileHeading>\r\n        <div>\r\n          <FormGroup>\r\n            <Label htmlFor=\"city\">Выберите</Label>\r\n            <Select \r\n              id=\"city\" \r\n              value={selectedCity?.id || ''} \r\n              onChange={handleCityChange}\r\n            >\r\n              <option value=\"\" disabled>D</option>\r\n              {cities.map(city => (\r\n                <option key={city.id} value={city.id}>\r\n                  {city.name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <h3 style={{ marginTop: '30px' }}>Popular Cities</h3>\r\n          <FoodGrid>\r\n            {cities.map(city => (\r\n              <CityCard \r\n                key={city.id} \r\n                onClick={() => handleCitySelect(city.id)}\r\n              >\r\n                <CityName>{city.name}</CityName>\r\n                <AddToCartButton>\r\n                  Select City\r\n                </AddToCartButton>\r\n              </CityCard>\r\n            ))}\r\n          </FoodGrid>\r\n        </div>\r\n      </MainContent>\r\n      <CartButton />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CitySelectionPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}