{"version":3,"file":"static/js/555.8bc84aa2.chunk.js","mappings":"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","sources":["components/Navigation.tsx","components/Header.tsx","pages/OrderSuccessPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Обновленная навигационная панель в стиле Apple/Nvidia\nconst NavContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  margin: var(--spacing-md) 0;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  overflow: hidden;\n  \n  @media (max-width: 767px) {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    border-radius: var(--border-radius-md) var(--border-radius-md) 0 0;\n    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.12);\n    margin: 0;\n  }\n`;\n\n// Улучшенная навигационная кнопка с визуальными эффектами\nconst NavButton = styled.button<{ active?: boolean }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: var(--spacing-md) var(--spacing-sm);\n  background: ${props => props.active ? 'linear-gradient(to bottom, rgba(var(--primary-color-rgb), 0.08), transparent)' : 'transparent'};\n  border: none;\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  font-size: 0.9rem;\n  position: relative;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  cursor: pointer;\n  font-weight: ${props => props.active ? '600' : '500'};\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: ${props => props.active ? '40%' : '0'};\n    height: 3px;\n    background-color: var(--primary-color);\n    border-radius: 3px 3px 0 0;\n    transition: width 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  &:hover:not(:disabled) {\n    color: var(--primary-color);\n    background-color: rgba(var(--primary-color-rgb), 0.05);\n    \n    &::after {\n      width: ${props => props.active ? '60%' : '30%'};\n    }\n    \n    svg {\n      transform: translateY(-2px);\n    }\n  }\n  \n  svg {\n    margin-bottom: var(--spacing-xs);\n    width: 20px;\n    height: 20px;\n    stroke-width: 2;\n    transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-sm) var(--spacing-xs);\n    font-size: 0.8rem;\n    \n    svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst Navigation: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { \n    selectedCity, \n    selectedRestaurant, \n    restaurants,\n    deliveryMethod,\n    setDeliveryMethod\n  } = useAppContext();\n  \n  const [activeTab, setActiveTab] = useState('home');\n  \n  // Определяем активную вкладку на основе текущего URL\n  useEffect(() => {\n    if (location.pathname.includes('city-selection')) {\n      setActiveTab('city');\n    } else if (location.pathname.includes('restaurant-selection')) {\n      setActiveTab('restaurant');\n    } else if (location.pathname === '/') {\n      setActiveTab('home');\n    }\n  }, [location.pathname]);\n  \n  // Получаем данные о выбранном ресторане\n  const selectedRestaurantData = selectedRestaurant !== null\n    ? restaurants.find(r => r.id === selectedRestaurant)\n    : null;\n  \n  return (\n    <NavContainer>\n      <NavButton \n        onClick={() => { navigate('/city-selection') }}\n        active={activeTab === 'city'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z\"></path>\n          <circle cx=\"12\" cy=\"9\" r=\"2.5\"></circle>\n        </svg>\n        {selectedCity ? selectedCity.name : 'Город'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => { selectedCity && navigate(selectedRestaurant ? '/home' : '/restaurant-selection') }}\n        disabled={!selectedCity}\n        active={activeTab === 'restaurant'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M17 11H3c-.6 0-1 .4-1 1v9c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9c0-.6-.4-1-1-1Z\"></path>\n          <path d=\"M14 11V6c0-2.8-2.2-5-5-5S4 3.2 4 6v5\"></path>\n          <path d=\"M21 11v9c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-9c0-.6.4-1 1-1h2c.6 0 1 .4 1 1Z\"></path>\n        </svg>\n        {selectedRestaurantData ? selectedRestaurantData.name : 'Ресторан'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('delivery')}\n        active={deliveryMethod === 'delivery'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n          <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n          <path d=\"M5 17H3v-6l2-2h8l3 3h1a2 2 0 0 1 2 2v3h-2\"></path>\n          <path d=\"M15 8h5l-1.5 5h-5\"></path>\n        </svg>\n        Доставка\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('pickup')}\n        active={deliveryMethod === 'pickup'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M4 10h12\"></path>\n          <path d=\"M4 14h9\"></path>\n          <path d=\"M4 18h6\"></path>\n          <path d=\"M18 15v6\"></path>\n          <path d=\"M15 18h6\"></path>\n          <path d=\"m14.5 7.5-8-4-2 3 8 4Z\"></path>\n        </svg>\n        Самовывоз\n      </NavButton>\n    </NavContainer>\n  );\n};\n\nexport default Navigation; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Современный контейнер шапки в стиле Apple/Nvidia\nconst HeaderContainer = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-md) 0;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      transparent,\n      var(--border-color),\n      transparent\n    );\n    opacity: 0.6;\n  }\n`;\n\n// Контейнер логотипа с анимацией\nconst LogoContainer = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n  \n  img {\n    height: 38px;\n    object-fit: contain;\n    \n    @media (max-width: 767px) {\n      height: 32px;\n    }\n  }\n`;\n\n// Анимированная кнопка профиля\nconst ProfileButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-color);\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom right, \n                 rgba(var(--primary-color-rgb), 0.1), \n                 rgba(var(--primary-color-rgb), 0));\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    z-index: -1;\n    border-radius: 50%;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    color: var(--primary-color);\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    svg {\n      stroke-width: 2.2;\n    }\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    transition: all 0.3s ease;\n  }\n`;\n\n// Компонент логотипа с изображением\nconst Logo = styled.img`\n  height: 38px;\n  object-fit: contain;\n  transition: filter 0.3s ease;\n  \n  @media (max-width: 767px) {\n    height: 32px;\n  }\n`;\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n  const { selectedCity, selectedRestaurant } = useAppContext();\n\n  return (\n    <HeaderContainer>\n      <LogoContainer onClick={() => navigate('/')}>\n        <Logo src=\"/assets/images/logo.png\" alt=\"Kulcha\" />\n      </LogoContainer>\n      \n      <ProfileButton onClick={() => navigate('/profile')}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n          <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n        </svg>\n      </ProfileButton>\n    </HeaderContainer>\n  );\n};\n\nexport default Header; ","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { \n  Container, \n  MainContent, \n  Heading, \n  Button,\n  PageTransition\n} from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\n\nconst SuccessContainer = styled(PageTransition)`\n  min-height: 70vh;\n`;\n\nconst SuccessContent = styled.div`\n  margin-bottom: var(--spacing-xl);\n`;\n\nconst SuccessHeading = styled(Heading)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-lg);\n  \n  svg {\n    margin-right: var(--spacing-xs);\n  }\n`;\n\nconst SuccessCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  padding: var(--spacing-xl);\n  margin-bottom: var(--spacing-lg);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  text-align: center;\n`;\n\nconst SuccessIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  background-color: var(--primary-color);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto var(--spacing-lg);\n  \n  svg {\n    color: white;\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nconst OrderNumber = styled.h2`\n  font-size: 1.8rem;\n  margin-bottom: var(--spacing-sm);\n  color: var(--text-color);\n`;\n\nconst OrderStatus = styled.div`\n  display: inline-block;\n  padding: 8px 16px;\n  background-color: rgba(255, 159, 13, 0.15);\n  color: var(--primary-color);\n  border-radius: 20px;\n  font-weight: 600;\n  font-size: 0.9rem;\n  margin-bottom: var(--spacing-lg);\n`;\n\nconst OrderMessage = styled.p`\n  color: var(--text-secondary);\n  font-size: 1rem;\n  margin-bottom: var(--spacing-lg);\n  line-height: 1.5;\n`;\n\nconst OrderDetailsCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  padding: var(--spacing-lg);\n  margin-bottom: var(--spacing-lg);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst OrderDetailsTitle = styled.h3`\n  font-size: 1.2rem;\n  margin: 0 0 var(--spacing-md) 0;\n  color: var(--text-color);\n  display: flex;\n  align-items: center;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n  }\n`;\n\nconst DetailsRow = styled.div`\n  display: flex;\n  margin-bottom: var(--spacing-sm);\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst DetailsLabel = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-secondary);\n  width: 40%;\n`;\n\nconst DetailsValue = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-color);\n  font-weight: 500;\n`;\n\nconst OrderItemsList = styled.div`\n  margin-top: var(--spacing-md);\n`;\n\nconst OrderItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: var(--spacing-sm) 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ItemName = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-color);\n`;\n\nconst ItemQuantity = styled.span`\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n  margin-left: var(--spacing-xs);\n`;\n\nconst ItemPrice = styled.span`\n  font-weight: 600;\n  color: var(--text-color);\n`;\n\nconst TotalRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: var(--spacing-md);\n  padding-top: var(--spacing-md);\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst TotalLabel = styled.span`\n  font-size: 1.1rem;\n  color: var(--text-color);\n  font-weight: 500;\n`;\n\nconst TotalValue = styled.span`\n  font-size: 1.2rem;\n  color: var(--primary-color);\n  font-weight: 600;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: var(--spacing-md);\n  margin-top: var(--spacing-lg);\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst HomeButton = styled(Button)`\n  flex: 1;\n  padding: var(--spacing-md);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n  }\n`;\n\nconst OrderListButton = styled(Button)`\n  flex: 1;\n  padding: var(--spacing-md);\n  background-color: transparent;\n  border: 2px solid var(--primary-color);\n  color: var(--primary-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  svg {\n    margin-right: var(--spacing-sm);\n  }\n  \n  &:hover {\n    background-color: rgba(255, 159, 13, 0.1);\n    transform: translateY(-2px);\n  }\n`;\n\nconst OrderSuccessPage: React.FC = () => {\n  const { orderHistory } = useAppContext();\n  const navigate = useNavigate();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { showBackButton, hideBackButton } = useTelegram();\n  \n  // Получаем последний заказ\n  const lastOrder = orderHistory.length > 0 ? orderHistory[orderHistory.length - 1] : null;\n  \n  useEffect(() => {\n    hideBackButton();\n    \n    // Если нет заказа, перенаправляем на главную\n    if (!lastOrder) {\n      console.log('No order found in history, redirecting to home');\n      navigate('/');\n      return;\n    }\n    \n    console.log('Last order found:', lastOrder.id, 'for restaurant:', lastOrder.restaurantId);\n    \n    // Устанавливаем флаг, что заказ был синхронизирован\n    localStorage.setItem(`order_synced_${lastOrder.id}`, 'true');\n    \n    return () => {\n      showBackButton();\n    };\n  }, [hideBackButton, lastOrder, navigate, showBackButton]);\n  \n  const formatDate = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ru-RU', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return dateString;\n    }\n  };\n  \n  const getStatusLabel = (status: string) => {\n    try {\n      switch (status) {\n        case 'pending':\n          return 'Ожидает подтверждения';\n        case 'confirmed':\n          return 'Подтвержден';\n        case 'preparing':\n          return 'Готовится';\n        case 'ready':\n          return 'Готов к выдаче';\n        case 'delivered':\n          return 'Доставлен';\n        default:\n          return 'В обработке';\n      }\n    } catch (error) {\n      console.error('Error getting status label:', error);\n      return 'В обработке';\n    }\n  };\n  \n  if (!lastOrder) {\n    return null;\n  }\n\n  return (\n    <SuccessContainer>\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          <SuccessContent>\n            <SuccessHeading>\n              <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                  <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n                </svg>\n                Заказ оформлен\n              </div>\n            </SuccessHeading>\n            \n            <SuccessCard>\n              <SuccessIcon>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <polyline points=\"20 6 9 17 4 12\"></polyline>\n                </svg>\n              </SuccessIcon>\n              <OrderNumber>Заказ №{lastOrder.id}</OrderNumber>\n              <OrderStatus>{getStatusLabel(lastOrder.status)}</OrderStatus>\n              <OrderMessage>\n                Спасибо за заказ! Мы уже начали его обрабатывать.<br />\n                Вы можете отслеживать статус заказа в личном кабинете.\n              </OrderMessage>\n            </SuccessCard>\n            \n            <OrderDetailsCard>\n              <OrderDetailsTitle>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                  <polyline points=\"14 2 14 8 20 8\"></polyline>\n                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n                  <polyline points=\"10 9 9 9 8 9\"></polyline>\n                </svg>\n                Детали заказа\n              </OrderDetailsTitle>\n              \n              <DetailsRow>\n                <DetailsLabel>Номер заказа:</DetailsLabel>\n                <DetailsValue>#{lastOrder.id}</DetailsValue>\n              </DetailsRow>\n              \n              <DetailsRow>\n                <DetailsLabel>Дата и время:</DetailsLabel>\n                <DetailsValue>{formatDate(lastOrder.date)}</DetailsValue>\n              </DetailsRow>\n              \n              <DetailsRow>\n                <DetailsLabel>Способ получения:</DetailsLabel>\n                <DetailsValue>{lastOrder.deliveryMethod === 'delivery' ? 'Доставка' : 'Самовывоз'}</DetailsValue>\n              </DetailsRow>\n              \n              <OrderDetailsTitle style={{ marginTop: 'var(--spacing-lg)' }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path>\n                  <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n                  <path d=\"M16 10a4 4 0 0 1-8 0\"></path>\n                </svg>\n                Состав заказа\n              </OrderDetailsTitle>\n              \n              <OrderItemsList>\n                {lastOrder.items.map((item, index) => (\n                  <OrderItem key={index}>\n                    <div>\n                      <ItemName>{item.name}</ItemName>\n                      <ItemQuantity>x{item.quantity}</ItemQuantity>\n                    </div>\n                    <ItemPrice>₽{item.price * item.quantity}</ItemPrice>\n                  </OrderItem>\n                ))}\n              </OrderItemsList>\n              \n              <TotalRow>\n                <TotalLabel>Итого:</TotalLabel>\n                <TotalValue>₽{lastOrder.totalAmount}</TotalValue>\n              </TotalRow>\n            </OrderDetailsCard>\n            \n            <ButtonsContainer>\n              <HomeButton onClick={() => navigate('/')}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                  <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                </svg>\n                На главную\n              </HomeButton>\n              \n              <OrderListButton onClick={() => navigate('/profile')}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n                  <line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\n                  <line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\n                  <line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line>\n                  <line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line>\n                  <line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>\n                </svg>\n                История заказов\n              </OrderListButton>\n            </ButtonsContainer>\n          </SuccessContent>\n        </MainContent>\n      </Container>\n    </SuccessContainer>\n  );\n};\n\nexport default OrderSuccessPage; "],"names":["NavContainer","styled","nav","NavButton","button","props","active","Navigation","navigate","useNavigate","location","useLocation","selectedCity","selectedRestaurant","restaurants","deliveryMethod","setDeliveryMethod","useAppContext","activeTab","setActiveTab","useState","useEffect","pathname","includes","selectedRestaurantData","find","r","id","_jsxs","children","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_jsx","d","cx","cy","name","disabled","HeaderContainer","header","LogoContainer","div","ProfileButton","Logo","img","Header","src","alt","SuccessContainer","PageTransition","SuccessContent","SuccessHeading","Heading","SuccessCard","SuccessIcon","OrderNumber","h2","OrderStatus","OrderMessage","p","OrderDetailsCard","OrderDetailsTitle","h3","DetailsRow","DetailsLabel","span","DetailsValue","OrderItemsList","OrderItem","ItemName","ItemQuantity","ItemPrice","TotalRow","TotalLabel","TotalValue","ButtonsContainer","HomeButton","Button","OrderListButton","OrderSuccessPage","orderHistory","showBackButton","hideBackButton","useTelegram","lastOrder","length","console","log","restaurantId","localStorage","setItem","Container","MainContent","points","status","error","getStatusLabel","x1","y1","x2","y2","dateString","date","Date","Intl","DateTimeFormat","day","month","year","hour","minute","format","formatDate","style","marginTop","items","map","item","index","quantity","price","totalAmount"],"sourceRoot":""}