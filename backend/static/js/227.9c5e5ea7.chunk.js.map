{"version":3,"file":"static/js/227.9c5e5ea7.chunk.js","mappings":"sKAMA,MAAMA,EAAeC,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;EAsBzBC,EAAYF,EAAAA,GAAOG,MAA4B;;;;;;gBAMrCC,GAASA,EAAMC,OAAS,gFAAkF;;WAE/GD,GAASA,EAAMC,OAAS,uBAAyB;;;;;iBAK3CD,GAASA,EAAMC,OAAS,MAAQ;;;;;;;;;;;;;aAapCD,GAASA,EAAMC,OAAS,MAAQ;;;;;;;;;;;;eAY9BD,GAASA,EAAMC,OAAS,MAAQ;;;;;;;;;;;;;;;;;;;;;;;;;EAiH/C,EAtF6BC,KAC3B,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,aACJC,EAAY,mBACZC,EAAkB,YAClBC,EAAW,eACXC,EAAc,kBACdC,IACEC,EAAAA,EAAAA,OAEGC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,SAG3CC,EAAAA,EAAAA,YAAU,KACJX,EAASY,SAASC,SAAS,kBAC7BJ,EAAa,QACJT,EAASY,SAASC,SAAS,wBACpCJ,EAAa,cACkB,MAAtBT,EAASY,UAClBH,EAAa,OACf,GACC,CAACT,EAASY,WAGb,MAAME,EAAgD,OAAvBX,EAC3BC,EAAYW,MAAKC,GAAKA,EAAEC,KAAOd,IAC/B,KAEJ,OACEe,EAAAA,EAAAA,MAAC5B,EAAY,CAAA6B,SAAA,EACXD,EAAAA,EAAAA,MAACzB,EAAS,CACR2B,QAASA,KAAQtB,EAAS,kBAAkB,EAC5CF,OAAsB,SAAdY,EAAqBW,SAAA,EAE7BD,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOV,SAAA,EAC/KW,EAAAA,EAAAA,KAAA,QAAMC,EAAE,6EACRD,EAAAA,EAAAA,KAAA,UAAQE,GAAG,KAAKC,GAAG,IAAIjB,EAAE,WAE1Bd,EAAeA,EAAagC,KAAO,qCAGtChB,EAAAA,EAAAA,MAACzB,EAAS,CACR2B,QAASA,KAAQlB,GAAgBJ,EAASK,EAAqB,QAAU,wBAAwB,EACjGgC,UAAWjC,EACXN,OAAsB,eAAdY,EAA2BW,SAAA,EAEnCD,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOV,SAAA,EAC/KW,EAAAA,EAAAA,KAAA,QAAMC,EAAE,+EACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,0CACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,iFAETjB,EAAyBA,EAAuBoB,KAAO,uDAG1DhB,EAAAA,EAAAA,MAACzB,EAAS,CACR2B,QAASA,IAAMd,EAAkB,YACjCV,OAA2B,aAAnBS,EAA8Bc,SAAA,EAEtCD,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOV,SAAA,EAC/KW,EAAAA,EAAAA,KAAA,UAAQE,GAAG,IAAIC,GAAG,KAAKjB,EAAE,OACzBc,EAAAA,EAAAA,KAAA,UAAQE,GAAG,KAAKC,GAAG,KAAKjB,EAAE,OAC1Bc,EAAAA,EAAAA,KAAA,QAAMC,EAAE,+CACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,yBACJ,uDAIRb,EAAAA,EAAAA,MAACzB,EAAS,CACR2B,QAASA,IAAMd,EAAkB,UACjCV,OAA2B,WAAnBS,EAA4Bc,SAAA,EAEpCD,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOV,SAAA,EAC/KW,EAAAA,EAAAA,KAAA,QAAMC,EAAE,cACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,aACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,aACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,cACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,cACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,8BACJ,8DAGK,C,mJC1JnB,MAAMK,EAAiB7C,EAAAA,GAAO8C,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqC3BC,EAAkB/C,EAAAA,GAAO8C,GAA0B;;;sBAGnC1C,GAASA,EAAM4C,SAAW,OAAO5C,EAAM4C,YAAc;;;;;IAKvEH;;;EAKEI,EAAiBjD,EAAAA,GAAO8C,GAAG;;;;;;;;;;;;;;;;;;;;;;EAwB3BI,GAAelD,EAAAA,EAAAA,IAAOmD,EAAAA,GAAgB;;;;;;;;;;EAYtCC,EAAkBpD,EAAAA,GAAOqD,IAAI;;;;;;;;;;;;EAc7BC,EAAkBtD,EAAAA,GAAO8C,GAAG;;;EAK5BS,GAAcvD,EAAAA,EAAAA,IAAOwD,EAAAA,GAAM;;;;;;;;;;EAY3BC,EAAazD,EAAAA,GAAO8C,GAAG;;;;;;EAQvBY,GAAY1D,EAAAA,EAAAA,IAAO2D,EAAAA,GAAW;;;EAK9BC,EAAoB,CACxB,+DACA,4DACA,+DACA,6DAoLF,EAjL0CC,KACxC,MAAMtD,GAAWC,EAAAA,EAAAA,OACX,aACJG,EAAY,sBACZmD,IACE9C,EAAAA,EAAAA,OAEG+C,EAAaC,IAAkB7C,EAAAA,EAAAA,UAAS,KACxCN,EAAaoD,IAAkB9C,EAAAA,EAAAA,UAAuB,KACtD+C,EAASC,IAAchD,EAAAA,EAAAA,WAAS,IAChCiD,EAAmBC,IAAwBlD,EAAAA,EAAAA,UAAwB,OAEpE,eACJmD,EAAc,eACdC,EAAc,eACdC,EAAc,sBACdC,IACEC,EAAAA,EAAAA,MAGJtD,EAAAA,EAAAA,YAAU,KACgBuD,WACtB,GAAKhE,EAEL,IACEwD,GAAW,GACX,MAAMS,QAAaC,EAAAA,GAAIC,qBAAqBnE,EAAae,IACzDuC,EAAeW,GACfT,GAAW,EACb,CAAE,MAAOY,GACPC,QAAQD,MAAM,uCAAuCpE,EAAae,MAAOqD,GACzEZ,GAAW,EACb,GAGFc,EAAiB,GAChB,CAACtE,IAEJ,MAAMuE,GAAsBC,EAAAA,EAAAA,UAAQ,KAClC,IAAKxE,EAAc,MAAO,GAE1B,IAAIyE,EAASvE,EAGb,GAAIkD,EAAYsB,OAAQ,CACtB,MAAMC,EAAQvB,EAAYwB,cAAcF,OACxCD,EAASA,EAAOI,QAAOC,GACrBA,EAAW9C,KAAK4C,cAAcjE,SAASgE,IACvCG,EAAWC,QAAQH,cAAcjE,SAASgE,IAE9C,CAEA,OAAOF,CAAM,GACZ,CAACvE,EAAaF,EAAcoD,KAE/B3C,EAAAA,EAAAA,YAAU,KACHT,GACHJ,EAAS,kBACX,GACC,CAACI,EAAcJ,KAElBa,EAAAA,EAAAA,YAAU,KACJT,GACF2D,IACAG,GAAsB,KACpBlE,EAAS,kBAAkB,KAG7BgE,IAGFC,IAEO,KACLD,GAAgB,IAEjB,CAACD,EAAgBC,EAAgBC,EAAgBC,EAAuBlE,EAAUI,IAErF,MAiBMgF,EAAkBC,GACfhC,EAAkBgC,EAAQhC,EAAkBiC,QAGrD,OAAI3B,GAEAvC,EAAAA,EAAAA,MAACmE,EAAAA,GAAS,CAAAlE,SAAA,EACRW,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,KACPxD,EAAAA,EAAAA,KAACjC,EAAAA,EAAU,KACXiC,EAAAA,EAAAA,KAACyD,EAAAA,GAAW,CAAApE,UACVW,EAAAA,EAAAA,KAAC0D,EAAAA,GAAc,CAAArE,SAAC,2HAOtBW,EAAAA,EAAAA,KAAC2D,EAAAA,GAAc,CAAAtE,UACbD,EAAAA,EAAAA,MAACmE,EAAAA,GAAS,CAAAlE,SAAA,EACRW,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,KACPxD,EAAAA,EAAAA,KAACjC,EAAAA,EAAU,KACXqB,EAAAA,EAAAA,MAACqE,EAAAA,GAAW,CAAApE,SAAA,EACVW,EAAAA,EAAAA,KAAC0D,EAAAA,GAAc,CAAArE,SACZjB,EAAe,sGAAsBA,EAAagC,OAAS,uGAG9DhB,EAAAA,EAAAA,MAAC2B,EAAe,CAAA1B,SAAA,EACdW,EAAAA,EAAAA,KAACkB,EAAU,CAAA7B,UACTD,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOV,SAAA,EAC/KW,EAAAA,EAAAA,KAAA,UAAQE,GAAG,KAAKC,GAAG,KAAKjB,EAAE,OAC1Bc,EAAAA,EAAAA,KAAA,QAAM4D,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,gBAGxC/D,EAAAA,EAAAA,KAACgB,EAAW,CACVgD,KAAK,OACLC,YAAY,iGACZC,MAAO1C,EACP2C,SAAWC,GAAM3C,EAAe2C,EAAEC,OAAOH,YAI5CvB,EAAoBW,OAAS,GAC5BtD,EAAAA,EAAAA,KAACsE,EAAAA,GAAQ,CAAAjF,SACNsD,EAAoB4B,KAAI,CAACrB,EAAYG,KACpCjE,EAAAA,EAAAA,MAACkB,EAAc,CAEbhB,QAASA,IA/DM8C,WAC7B,IAEEN,EAAqB0C,SAGfjD,EAAsBiD,GAG5BxG,EAAS,QACX,CAAE,MAAOwE,GACPC,QAAQD,MAAM,uJAAgCA,GAE9CV,EAAqB,KACvB,GAiD6B2C,CAAuBvB,EAAW/D,IAAIE,SAAA,EAErDW,EAAAA,EAAAA,KAACQ,EAAe,CACdC,SAAUyC,EAAWwB,YAActB,EAAeC,KAEnDH,EAAWyB,QAAU,MACpB3E,EAAAA,EAAAA,KAACa,EAAe,CAAAxB,SAAC,kEAEnBD,EAAAA,EAAAA,MAACsB,EAAc,CAACkE,UAAU,kBAAiBvF,SAAA,EACzCW,EAAAA,EAAAA,KAAA,MAAAX,SAAK6D,EAAW9C,QAChBJ,EAAAA,EAAAA,KAAA,KAAAX,SAAI6D,EAAWC,WACfnD,EAAAA,EAAAA,KAACW,EAAY,CAAAtB,SACVwC,IAAsBqB,EAAW/D,IAChCa,EAAAA,EAAAA,KAAA,QAAAX,SAAM,yDAENW,EAAAA,EAAAA,KAAA,QAAAX,SAAM,uGAhBP6D,EAAW/D,SAwBtBa,EAAAA,EAAAA,KAACmB,EAAS,CAAA9B,SACPmC,EACG,8PACA,sLAIVxB,EAAAA,EAAAA,KAAC6E,EAAAA,EAAU,QAEE,C,+ECrUrB,MAAMC,EAAsBrH,EAAAA,GAAOG,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8GzC,EAtB6BiH,KAC3B,MAAM7G,GAAWC,EAAAA,EAAAA,OACX,KAAE8G,IAAStG,EAAAA,EAAAA,MAGXuG,EAAaD,EAAKE,QAAO,CAACC,EAAOC,IAASD,EAAQC,EAAKC,UAAU,GAEvE,OACEhG,EAAAA,EAAAA,MAAC0F,EAAmB,CAACxF,QAASA,IAAMtB,EAAS,SAASqB,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOV,SAAA,EAC/KW,EAAAA,EAAAA,KAAA,UAAQE,GAAG,IAAIC,GAAG,KAAKjB,EAAE,OACzBc,EAAAA,EAAAA,KAAA,UAAQE,GAAG,KAAKC,GAAG,KAAKjB,EAAE,OAC1Bc,EAAAA,EAAAA,KAAA,QAAMC,EAAE,wFAET+E,EAAa,IAAKhF,EAAAA,EAAAA,KAAA,QAAAX,SAAO2F,KAC1BhF,EAAAA,EAAAA,KAAA,SAAAX,SA/BiB,+NAkCG,C,+EC1G1B,MAAMgG,EAAkB5H,EAAAA,GAAO6H,MAAM;;;;;;;;;;;;;;;;;;;;;;EAyB/BC,EAAgB9H,EAAAA,GAAO8C,GAAG;;;;;;;;;;;;;;;;EAmB1BiF,EAAgB/H,EAAAA,GAAOG,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwD7B6H,EAAOhI,EAAAA,GAAOiI,GAAG;;;;;;;;EA8BvB,EApByBlC,KACvB,MAAMxF,GAAWC,EAAAA,EAAAA,OACX,aAAEG,EAAY,mBAAEC,IAAuBI,EAAAA,EAAAA,MAE7C,OACEW,EAAAA,EAAAA,MAACiG,EAAe,CAAAhG,SAAA,EACdW,EAAAA,EAAAA,KAACuF,EAAa,CAACjG,QAASA,IAAMtB,EAAS,KAAKqB,UAC1CW,EAAAA,EAAAA,KAACyF,EAAI,CAACE,IAAI,0BAA0BC,IAAI,cAG1C5F,EAAAA,EAAAA,KAACwF,EAAa,CAAClG,QAASA,IAAMtB,EAAS,YAAYqB,UACjDD,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAOV,SAAA,EAC/KW,EAAAA,EAAAA,KAAA,QAAMC,EAAE,+CACRD,EAAAA,EAAAA,KAAA,UAAQE,GAAG,KAAKC,GAAG,IAAIjB,EAAE,aAGb,C","sources":["components/Navigation.tsx","pages/RestaurantSelectionPage.tsx","components/CartButton.tsx","components/Header.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Обновленная навигационная панель в стиле Apple/Nvidia\nconst NavContainer = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  margin: var(--spacing-md) 0;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  overflow: hidden;\n  \n  @media (max-width: 767px) {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 100;\n    border-radius: var(--border-radius-md) var(--border-radius-md) 0 0;\n    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.12);\n    margin: 0;\n  }\n`;\n\n// Улучшенная навигационная кнопка с визуальными эффектами\nconst NavButton = styled.button<{ active?: boolean }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: var(--spacing-md) var(--spacing-sm);\n  background: ${props => props.active ? 'linear-gradient(to bottom, rgba(var(--primary-color-rgb), 0.08), transparent)' : 'transparent'};\n  border: none;\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-secondary)'};\n  font-size: 0.9rem;\n  position: relative;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  cursor: pointer;\n  font-weight: ${props => props.active ? '600' : '500'};\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: ${props => props.active ? '40%' : '0'};\n    height: 3px;\n    background-color: var(--primary-color);\n    border-radius: 3px 3px 0 0;\n    transition: width 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  &:hover:not(:disabled) {\n    color: var(--primary-color);\n    background-color: rgba(var(--primary-color-rgb), 0.05);\n    \n    &::after {\n      width: ${props => props.active ? '60%' : '30%'};\n    }\n    \n    svg {\n      transform: translateY(-2px);\n    }\n  }\n  \n  svg {\n    margin-bottom: var(--spacing-xs);\n    width: 20px;\n    height: 20px;\n    stroke-width: 2;\n    transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  }\n  \n  @media (max-width: 767px) {\n    padding: var(--spacing-sm) var(--spacing-xs);\n    font-size: 0.8rem;\n    \n    svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst Navigation: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { \n    selectedCity, \n    selectedRestaurant, \n    restaurants,\n    deliveryMethod,\n    setDeliveryMethod\n  } = useAppContext();\n  \n  const [activeTab, setActiveTab] = useState('home');\n  \n  // Определяем активную вкладку на основе текущего URL\n  useEffect(() => {\n    if (location.pathname.includes('city-selection')) {\n      setActiveTab('city');\n    } else if (location.pathname.includes('restaurant-selection')) {\n      setActiveTab('restaurant');\n    } else if (location.pathname === '/') {\n      setActiveTab('home');\n    }\n  }, [location.pathname]);\n  \n  // Получаем данные о выбранном ресторане\n  const selectedRestaurantData = selectedRestaurant !== null\n    ? restaurants.find(r => r.id === selectedRestaurant)\n    : null;\n  \n  return (\n    <NavContainer>\n      <NavButton \n        onClick={() => { navigate('/city-selection') }}\n        active={activeTab === 'city'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z\"></path>\n          <circle cx=\"12\" cy=\"9\" r=\"2.5\"></circle>\n        </svg>\n        {selectedCity ? selectedCity.name : 'Город'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => { selectedCity && navigate(selectedRestaurant ? '/home' : '/restaurant-selection') }}\n        disabled={!selectedCity}\n        active={activeTab === 'restaurant'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M17 11H3c-.6 0-1 .4-1 1v9c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9c0-.6-.4-1-1-1Z\"></path>\n          <path d=\"M14 11V6c0-2.8-2.2-5-5-5S4 3.2 4 6v5\"></path>\n          <path d=\"M21 11v9c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1v-9c0-.6.4-1 1-1h2c.6 0 1 .4 1 1Z\"></path>\n        </svg>\n        {selectedRestaurantData ? selectedRestaurantData.name : 'Ресторан'}\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('delivery')}\n        active={deliveryMethod === 'delivery'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <circle cx=\"7\" cy=\"17\" r=\"2\"></circle>\n          <circle cx=\"17\" cy=\"17\" r=\"2\"></circle>\n          <path d=\"M5 17H3v-6l2-2h8l3 3h1a2 2 0 0 1 2 2v3h-2\"></path>\n          <path d=\"M15 8h5l-1.5 5h-5\"></path>\n        </svg>\n        Доставка\n      </NavButton>\n      \n      <NavButton \n        onClick={() => setDeliveryMethod('pickup')}\n        active={deliveryMethod === 'pickup'}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M4 10h12\"></path>\n          <path d=\"M4 14h9\"></path>\n          <path d=\"M4 18h6\"></path>\n          <path d=\"M18 15v6\"></path>\n          <path d=\"M15 18h6\"></path>\n          <path d=\"m14.5 7.5-8-4-2 3 8 4Z\"></path>\n        </svg>\n        Самовывоз\n      </NavButton>\n    </NavContainer>\n  );\n};\n\nexport default Navigation; ","import React, { useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Container, \n  MainContent, \n  ProfileHeading, \n  FoodGrid, \n  AddToCartButton,\n  EmptyState,\n  Input,\n  PageTransition\n} from '../styles/Components';\nimport Header from '../components/Header';\nimport Navigation from '../components/Navigation';\nimport CartButton from '../components/CartButton';\nimport { useAppContext } from '../contexts/AppContext';\nimport useTelegram from '../hooks/useTelegram';\nimport styled from 'styled-components';\nimport { api } from '../services/api';\nimport { Restaurant } from '../types/apiTypes';\n\nconst RestaurantCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius-md);\n  overflow: hidden;\n  cursor: pointer;\n  transition: all var(--transition-normal);\n  position: relative;\n  height: 220px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n  \n  &:hover {\n    transform: translateY(-5px) scale(1.02);\n    box-shadow: var(--box-shadow);\n    \n    &::after {\n      opacity: 0.7;\n    }\n    \n    .restaurant-info {\n      transform: translateY(0);\n    }\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.3));\n    opacity: 0.5;\n    transition: opacity var(--transition-normal);\n    z-index: 1;\n  }\n`;\n\nconst RestaurantImage = styled.div<{ $bgImage?: string }>`\n  width: 100%;\n  height: 100%;\n  background-image: ${props => props.$bgImage ? `url(${props.$bgImage})` : 'linear-gradient(45deg, var(--primary-dark), var(--primary-color))'};\n  background-size: cover;\n  background-position: center;\n  transition: transform var(--transition-normal);\n  \n  ${RestaurantCard}:hover & {\n    transform: scale(1.1);\n  }\n`;\n\nconst RestaurantInfo = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding: var(--spacing-md);\n  color: var(--text-color);\n  z-index: 2;\n  transform: translateY(10px);\n  transition: transform var(--transition-normal);\n  \n  h3 {\n    font-size: 1.3rem;\n    margin-bottom: 4px;\n    font-weight: 600;\n  }\n  \n  p {\n    font-size: 0.9rem;\n    color: var(--text-secondary);\n    margin-bottom: var(--spacing-md);\n  }\n`;\n\nconst SelectButton = styled(AddToCartButton)`\n  width: 100%;\n  background-color: var(--primary-color);\n  color: white;\n  border-radius: var(--border-radius-sm);\n  font-weight: 500;\n  \n  &:hover {\n    background-color: var(--primary-light);\n  }\n`;\n\nconst RestaurantBadge = styled.span`\n  position: absolute;\n  top: var(--spacing-md);\n  right: var(--spacing-md);\n  background-color: var(--primary-color);\n  color: white;\n  padding: 4px 8px;\n  border-radius: 20px;\n  font-size: 0.7rem;\n  font-weight: 600;\n  z-index: 3;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nconst SearchContainer = styled.div`\n  margin-bottom: var(--spacing-md);\n  position: relative;\n`;\n\nconst SearchInput = styled(Input)`\n  padding-left: 40px;\n  width: 100%;\n  background-color: var(--card-bg);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  \n  &:focus {\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(255, 159, 13, 0.2);\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--text-secondary);\n`;\n\nconst NoResults = styled(EmptyState)`\n  padding: var(--spacing-lg);\n  margin-top: var(--spacing-md);\n`;\n\nconst placeholderImages = [\n  'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4',\n  'https://images.unsplash.com/photo-1552566626-52f8b828add9',\n  'https://images.unsplash.com/photo-1514933651103-005eec06c04b',\n  'https://images.unsplash.com/photo-1559339352-11d035aa65de'\n];\n\nconst RestaurantSelectionPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { \n    selectedCity, \n    setSelectedRestaurant \n  } = useAppContext();\n  \n  const [searchQuery, setSearchQuery] = useState('');\n  const [restaurants, setRestaurants] = useState<Restaurant[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingRestaurant, setLoadingRestaurant] = useState<number | null>(null);\n  \n  const { \n    showBackButton, \n    hideBackButton,\n    hideMainButton,\n    setBackButtonCallback\n  } = useTelegram();\n\n  // Загрузка ресторанов при изменении выбранного города\n  useEffect(() => {\n    const loadRestaurants = async () => {\n      if (!selectedCity) return;\n      \n      try {\n        setLoading(true);\n        const data = await api.getRestaurantsByCity(selectedCity.id);\n        setRestaurants(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(`Failed to load restaurants for city ${selectedCity.id}:`, error);\n        setLoading(false);\n      }\n    };\n    \n    loadRestaurants();\n  }, [selectedCity]);\n\n  const filteredRestaurants = useMemo(() => {\n    if (!selectedCity) return [];\n    \n    let result = restaurants;\n    \n    // Применяем поиск, если есть поисковый запрос\n    if (searchQuery.trim()) {\n      const query = searchQuery.toLowerCase().trim();\n      result = result.filter(restaurant => \n        restaurant.name.toLowerCase().includes(query) || \n        restaurant.address.toLowerCase().includes(query)\n      );\n    }\n    \n    return result;\n  }, [restaurants, selectedCity, searchQuery]);\n\n  useEffect(() => {\n    if (!selectedCity) {\n      navigate('/city-selection');\n    }\n  }, [selectedCity, navigate]);\n\n  useEffect(() => {\n    if (selectedCity) {\n      showBackButton();\n      setBackButtonCallback(() => {\n        navigate('/city-selection');\n      });\n    } else {\n      hideBackButton();\n    }\n    \n    hideMainButton();\n    \n    return () => {\n      hideBackButton();\n    };\n  }, [showBackButton, hideBackButton, hideMainButton, setBackButtonCallback, navigate, selectedCity]);\n\n  const handleRestaurantSelect = async (restaurantId: number) => {\n    try {\n      // Показываем индикатор загрузки для выбранного ресторана\n      setLoadingRestaurant(restaurantId);\n      \n      // Используем await для асинхронного метода\n      await setSelectedRestaurant(restaurantId);\n      \n      // После успешной загрузки данных ресторана перенаправляем пользователя\n      navigate('/home');\n    } catch (error) {\n      console.error('Ошибка при выборе ресторана:', error);\n      // Сбрасываем индикатор загрузки в случае ошибки\n      setLoadingRestaurant(null);\n    }\n  };\n\n  const getRandomImage = (index: number) => {\n    return placeholderImages[index % placeholderImages.length];\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          <ProfileHeading>Загрузка ресторанов...</ProfileHeading>\n        </MainContent>\n      </Container>\n    );\n  }\n\n  return (\n    <PageTransition>\n      <Container>\n        <Header />\n        <Navigation />\n        <MainContent>\n          <ProfileHeading>\n            {selectedCity ? `Рестораны в городе ${selectedCity.name}` : 'Выберите ресторан'}\n          </ProfileHeading>\n          \n          <SearchContainer>\n            <SearchIcon>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n              </svg>\n            </SearchIcon>\n            <SearchInput \n              type=\"text\"\n              placeholder=\"Поиск ресторанов...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n          </SearchContainer>\n          \n          {filteredRestaurants.length > 0 ? (\n            <FoodGrid>\n              {filteredRestaurants.map((restaurant, index) => (\n                <RestaurantCard \n                  key={restaurant.id} \n                  onClick={() => handleRestaurantSelect(restaurant.id)}\n                >\n                  <RestaurantImage \n                    $bgImage={restaurant.coverImage || getRandomImage(index)} \n                  />\n                  {restaurant.rating >= 4.5 && (\n                    <RestaurantBadge>Популярный</RestaurantBadge>\n                  )}\n                  <RestaurantInfo className=\"restaurant-info\">\n                    <h3>{restaurant.name}</h3>\n                    <p>{restaurant.address}</p>\n                    <SelectButton>\n                      {loadingRestaurant === restaurant.id ? (\n                        <span>Загрузка...</span>\n                      ) : (\n                        <span>Выбрать ресторан</span>\n                      )}\n                    </SelectButton>\n                  </RestaurantInfo>\n                </RestaurantCard>\n              ))}\n            </FoodGrid>\n          ) : (\n            <NoResults>\n              {searchQuery \n                ? 'Нет ресторанов, соответствующих вашему запросу' \n                : 'В этом городе пока нет ресторанов'}\n            </NoResults>\n          )}\n        </MainContent>\n        <CartButton />\n      </Container>\n    </PageTransition>\n  );\n};\n\nexport default RestaurantSelectionPage; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Плавающая кнопка корзины в стиле Apple/Nvidia\nconst CartButtonContainer = styled.button`\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 0 4px 16px rgba(var(--primary-color-rgb), 0.4);\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  z-index: 99;\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    stroke-width: 2;\n    transition: transform 0.3s ease;\n  }\n  \n  span {\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    background-color: var(--secondary-color);\n    color: white;\n    font-size: 0.75rem;\n    font-weight: 700;\n    min-width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 4px;\n    border: 2px solid var(--background-color);\n    transform-origin: center;\n    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n  }\n  \n  &:hover {\n    transform: translateY(-4px) scale(1.05);\n    box-shadow: 0 8px 24px rgba(var(--primary-color-rgb), 0.5);\n    \n    svg {\n      transform: scale(1.1);\n    }\n    \n    span {\n      transform: scale(1.1);\n    }\n  }\n  \n  &:active {\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 6px 20px rgba(var(--primary-color-rgb), 0.45);\n  }\n  \n  @media (max-width: 767px) {\n    bottom: 80px;\n    right: 16px;\n    width: 52px;\n    height: 52px;\n  }\n`;\n\n// Анимация появления для количества товаров в корзине\nconst cartItemAppear = `\n  @keyframes cartItemAppear {\n    0% {\n      transform: scale(0);\n      opacity: 0;\n    }\n    50% {\n      transform: scale(1.2);\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n\nconst CartButton: React.FC = () => {\n  const navigate = useNavigate();\n  const { cart } = useAppContext();\n  \n  // Подсчитываем общее количество товаров в корзине\n  const totalItems = cart.reduce((total, item) => total + item.quantity, 0);\n  \n  return (\n    <CartButtonContainer onClick={() => navigate('/cart')}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <circle cx=\"8\" cy=\"21\" r=\"1\"></circle>\n        <circle cx=\"19\" cy=\"21\" r=\"1\"></circle>\n        <path d=\"M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12\"></path>\n      </svg>\n      {totalItems > 0 && <span>{totalItems}</span>}\n      <style>\n        {cartItemAppear}\n      </style>\n    </CartButtonContainer>\n  );\n};\n\nexport default CartButton; ","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useAppContext } from '../contexts/AppContext';\n\n// Современный контейнер шапки в стиле Apple/Nvidia\nconst HeaderContainer = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-md) 0;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(\n      to right,\n      transparent,\n      var(--border-color),\n      transparent\n    );\n    opacity: 0.6;\n  }\n`;\n\n// Контейнер логотипа с анимацией\nconst LogoContainer = styled.div`\n  cursor: pointer;\n  transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n  \n  img {\n    height: 38px;\n    object-fit: contain;\n    \n    @media (max-width: 767px) {\n      height: 32px;\n    }\n  }\n`;\n\n// Анимированная кнопка профиля\nconst ProfileButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-color);\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom right, \n                 rgba(var(--primary-color-rgb), 0.1), \n                 rgba(var(--primary-color-rgb), 0));\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    z-index: -1;\n    border-radius: 50%;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    color: var(--primary-color);\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    svg {\n      stroke-width: 2.2;\n    }\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  svg {\n    width: 24px;\n    height: 24px;\n    transition: all 0.3s ease;\n  }\n`;\n\n// Компонент логотипа с изображением\nconst Logo = styled.img`\n  height: 38px;\n  object-fit: contain;\n  transition: filter 0.3s ease;\n  \n  @media (max-width: 767px) {\n    height: 32px;\n  }\n`;\n\nconst Header: React.FC = () => {\n  const navigate = useNavigate();\n  const { selectedCity, selectedRestaurant } = useAppContext();\n\n  return (\n    <HeaderContainer>\n      <LogoContainer onClick={() => navigate('/')}>\n        <Logo src=\"/assets/images/logo.png\" alt=\"Kulcha\" />\n      </LogoContainer>\n      \n      <ProfileButton onClick={() => navigate('/profile')}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n          <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n        </svg>\n      </ProfileButton>\n    </HeaderContainer>\n  );\n};\n\nexport default Header; "],"names":["NavContainer","styled","nav","NavButton","button","props","active","Navigation","navigate","useNavigate","location","useLocation","selectedCity","selectedRestaurant","restaurants","deliveryMethod","setDeliveryMethod","useAppContext","activeTab","setActiveTab","useState","useEffect","pathname","includes","selectedRestaurantData","find","r","id","_jsxs","children","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_jsx","d","cx","cy","name","disabled","RestaurantCard","div","RestaurantImage","$bgImage","RestaurantInfo","SelectButton","AddToCartButton","RestaurantBadge","span","SearchContainer","SearchInput","Input","SearchIcon","NoResults","EmptyState","placeholderImages","RestaurantSelectionPage","setSelectedRestaurant","searchQuery","setSearchQuery","setRestaurants","loading","setLoading","loadingRestaurant","setLoadingRestaurant","showBackButton","hideBackButton","hideMainButton","setBackButtonCallback","useTelegram","async","data","api","getRestaurantsByCity","error","console","loadRestaurants","filteredRestaurants","useMemo","result","trim","query","toLowerCase","filter","restaurant","address","getRandomImage","index","length","Container","Header","MainContent","ProfileHeading","PageTransition","x1","y1","x2","y2","type","placeholder","value","onChange","e","target","FoodGrid","map","restaurantId","handleRestaurantSelect","coverImage","rating","className","CartButton","CartButtonContainer","cart","totalItems","reduce","total","item","quantity","HeaderContainer","header","LogoContainer","ProfileButton","Logo","img","src","alt"],"sourceRoot":""}